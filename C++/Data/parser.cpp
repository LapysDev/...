/* Import > ... */
#include <climits>
#include <cstddef>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <stdint.h>
#include <type_traits>
#if defined(_MSVC_LANG) ? _MSVC_LANG >= 202002L : __cplusplus >= 202002L
# include <version>
#endif
#if defined(__cpp_lib_endian)
# include <bit>
#elif defined(__GLIBC__)
# include <endian.h>
#elif defined(__APPLE__) || defined(__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__) || defined(__MACH__) || defined(__OpenBSD__) || defined(OpenBSD2_0) || defined(OpenBSD2_1) || defined(OpenBSD2_2) || defined(OpenBSD2_3) || defined(OpenBSD2_4) || defined(OpenBSD2_5) || defined(OpenBSD2_6) || defined(OpenBSD2_7) || defined(OpenBSD2_8) || defined(OpenBSD2_9) || defined(OpenBSD3_0) || defined(OpenBSD3_1) || defined(OpenBSD3_2) || defined(OpenBSD3_3) || defined(OpenBSD3_4) || defined(OpenBSD3_5) || defined(OpenBSD3_6) || defined(OpenBSD3_7) || defined(OpenBSD3_8) || defined(OpenBSD3_9) || defined(OpenBSD4_0) || defined(OpenBSD4_1) || defined(OpenBSD4_2) || defined(OpenBSD4_3) || defined(OpenBSD4_4) || defined(OpenBSD4_5) || defined(OpenBSD4_6) || defined(OpenBSD4_7) || defined(OpenBSD4_8) || defined(OpenBSD4_9)
# include <machine/endian.h>
#elif defined(__bsdi__) || defined(__DragonFly__) || defined(__FreeBSD__) || defined(__FreeBSD_version) || defined(__NETBSD__) || defined(__NETBSD_version) || defined(NetBSD0_8) || defined(NetBSD0_9) || defined(NetBSD1_0) || defined(__OpenBSD__) || defined(OpenBSD2_0) || defined(OpenBSD2_1) || defined(OpenBSD2_2) || defined(OpenBSD2_3) || defined(OpenBSD2_4) || defined(OpenBSD2_5) || defined(OpenBSD2_6) || defined(OpenBSD2_7) || defined(OpenBSD2_8) || defined(OpenBSD2_9) || defined(OpenBSD3_0) || defined(OpenBSD3_1) || defined(OpenBSD3_2) || defined(OpenBSD3_3) || defined(OpenBSD3_4) || defined(OpenBSD3_5) || defined(OpenBSD3_6) || defined(OpenBSD3_7) || defined(OpenBSD3_8) || defined(OpenBSD3_9) || defined(OpenBSD4_0) || defined(OpenBSD4_1) || defined(OpenBSD4_2) || defined(OpenBSD4_3) || defined(OpenBSD4_4) || defined(OpenBSD4_5) || defined(OpenBSD4_6) || defined(OpenBSD4_7) || defined(OpenBSD4_8) || defined(OpenBSD4_9)
# include <sys/endian.h>
#endif

/* Namespace > Parser */
namespace parser {
  namespace endianness {
    typedef enum : unsigned char {
      big_endian,
      little_endian
    } type;

    // ... ->> (Mostly) Compile-time endianness detection; used for endian-arbitrary encodings only, such as `UTF_16` or `UTF_32`
    constexpr static typename endianness::type get() noexcept {
      #ifdef __cpp_lib_endian
        return std::endian::native == std::endian::little ? endianness::little_endian : endianness::big_endian;
      #elif
        (defined(__GLIBC__) && ((defined(_BYTE_ORDER) && ((defined(_LITTLE_ENDIAN) && _BYTE_ORDER == _LITTLE_ENDIAN) || (defined(_PDP_ENDIAN) && _BYTE_ORDER == _PDP_ENDIAN))) || (defined(__BYTE_ORDER) && ((defined(__LITTLE_ENDIAN) && __BYTE_ORDER == __LITTLE_ENDIAN) || (defined(__PDP_ENDIAN) && __BYTE_ORDER == __PDP_ENDIAN))))) ||
        (defined(__GNUC__) && (defined(__BYTE_ORDER__) && ((defined(__ORDER_LITTLE_ENDIAN__) && __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__) || (defined(__ORDER_PDP_ENDIAN__) && __BYTE_ORDER__ == __ORDER_PDP_ENDIAN__))))                                                                                                                ||                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \
        (defined(__LITTLE_ENDIAN__) && false == defined(__BIG_ENDIAN__)) || (defined(_LITTLE_ENDIAN) && false == defined(_BIG_ENDIAN))                                                                                                                                                                                                    ||
        defined(__AARCH64EL__) || defined(__ARMEL__) || defined(__MIPSEL) || defined(__MIPSEL__) || defined(__THUMBEL__) || defined(_MIPSEL)                                                                                                                                                                                              ||
        defined(__alpha__) || defined(__amd64) || defined(__amd64) || defined(__amd64__) || defined(__amd64__) || defined(__bfin__) || defined(__BFIN__) || defined(__i386) || defined(__i386__) || defined(__i486__) || defined(__i486__) || defined(__i586__) || defined(__i586__) || defined(__i686__) || defined(__I86__) || defined(__ia64) || defined(__ia64__) || defined(__IA64__) || defined(__INTEL__) || defined(__itanium__) || defined(__THW_INTEL__) || defined(__x86_64) || defined(__x86_64__) || defined(_IA64) || defined(_M_ALPHA) || defined(_M_AMD64) || defined(_M_IA64) || defined(_M_IX86) || defined(_M_X64) || defined(_X86_) || defined(bfin) || defined(BFIN) || defined(i386) || ((CPP_VENDOR & CPP_MICROSOFT_WINDOWS_VENDOR) && (defined(__arm64) || defined(__arm__) || defined(__TARGET_ARCH_ARM) || defined(__TARGET_ARCH_THUMB) || defined(__thumb__) || defined(_M_ARM))) \
      )
        return endianness::little_endian;
      #elif
        (defined(__GLIBC__) && ((defined(_BYTE_ORDER) && (defined(_BIG_ENDIAN) && _BYTE_ORDER == _BIG_ENDIAN)) || (defined(__BYTE_ORDER) && (defined(__BIG_ENDIAN) && __BYTE_ORDER == __BIG_ENDIAN)))) ||
        (defined(__GNUC__) && (defined(__BYTE_ORDER__) && (defined(__ORDER_BIG_ENDIAN__) && __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__)))                                                                  ||
        (defined(__BIG_ENDIAN__) && false == defined(__LITTLE_ENDIAN__)) || (defined(_BIG_ENDIAN) && false == defined(_LITTLE_ENDIAN))                                                                 ||
        defined(__AARCH64EB__) || defined(__ARMEB__) || defined(__MIPSEB) || defined(__MIPSEB__) || defined(__THUMBEB__) || defined(_MIPSEB)                                                           ||                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  \
        defined(__370__) || defined(__hppa) || defined(__hpux) || defined(__m68k__) || defined(__mc68000) || defined(__mc68000__) || defined(__mc68010) || defined(__mc68010__) || defined(__mc68020) || defined(__mc68020__) || defined(__mc68030) || defined(__mc68030__) || defined(__mc68040) || defined(__mc68040__) || defined(__mc68060) || defined(__mc68060__) || defined(__powerpc__) || defined(__ppc__) || defined(__s390__) || defined(__s390__) || defined(__s390x__) || defined(__sparc) || defined(__sparc__) || defined(__sparcv8) || defined(__sparcv9) || defined(__SYSC_ZARCH__) || defined(__THW_370__) || defined(_POWER) || defined(M68000) || defined(mc68000) || defined(mc68010) || defined(mc68020) || defined(mc68030) || defined(mc68040) || defined(mc68060) \
      )
        return endianness::big_endian;
      #else
        return sizeof(unsigned char) == sizeof(uintmax_t) || 1u == reinterpret_cast<unsigned char const&>(static_cast<uintmax_t const&>(1u)) ? little_endian : big_endian;
      #endif
    }
  }

  namespace bytes {
    // ... ->> (Mostly) Compile-time byte-indexing
    template <typename type>
    inline static typename std::enable_if<false == (
      std::is_enum    <typename std::remove_cv<type>::type>::value ||
      std::is_integral<typename std::remove_cv<type>::type>::value ||
      #ifdef __cpp_lib_byte
        std::is_same<std::byte, typename std::remove_cv<type>::type>::value ||
      #endif
      false
    ), unsigned char>::type get(type* const source, std::size_t const index = 0u) noexcept {
      return static_cast<typename std::conditional<std::is_volatile<type>::value, unsigned char volatile*, unsigned char*>::type>(
        (typename std::conditional<std::is_volatile<type>::value, void volatile*, void*>::type) source
      )[index];
    }

    template <typename type>
    constexpr static typename std::enable_if<std::is_integral<typename std::remove_cv<type>::type>::value, unsigned char>::type get(type source[], std::size_t const index = 0u) noexcept {
      return (source[index / sizeof(type)] >> (CHAR_BIT * (index % sizeof(type)))) & UCHAR_MAX;
    }

    template <typename type>
    constexpr static typename std::enable_if<std::is_enum<typename std::remove_cv<type>::type>::value, unsigned char>::type get(type source[], std::size_t const index = 0u) noexcept {
      return (+source[index / sizeof(type)] >> (CHAR_BIT * (index % sizeof(type)))) & UCHAR_MAX;
    }

    #ifdef __cpp_lib_byte
      template <typename type>
      constexpr static typename std::enable_if<std::is_same<std::byte, typename std::remove_cv<type>::type>::value, unsigned char>::type get(type source[], std::size_t const index = 0u) noexcept {
        return static_cast<unsigned char>(source[index]);
      }
    #endif

    // ... ->> Compile-time bit-indexing
    namespace {
      template <unsigned char width, typename endianness::type endian, typename type>
      constexpr static typename std::enable_if<(endianness::big_endian == endian), uintmax_t>::type get_wide_continuation_bits(type source[], std::size_t const length, std::size_t const index, uintmax_t const value, unsigned char const count) noexcept {
        return CHAR_BIT < count
          ? (length == index + 1u ? value << count : bytes::get_wide_continuation_bits<width, endian>(source, length, index + 1u, (value << CHAR_BIT) | bytes::get(source, index + 1u), count - CHAR_BIT))
          : ((value << count) | (length != index + 1u ? bytes::get(source, index + 1u) >> (CHAR_BIT - count) : 0x00u));
      }

      template <unsigned char width, typename endianness::type endian, typename type>
      constexpr static typename std::enable_if<(endianness::little_endian == endian), uintmax_t>::type get_wide_continuation_bits(type source[], std::size_t const length, std::size_t const index, uintmax_t const value, unsigned char const count, unsigned char const offset) noexcept {
        return CHAR_BIT < count ? (length == index + 1u ? value : bytes::get_wide_continuation_bits<width, endian>(source, length, index + 1u, value | (bytes::get(source, index + 1u) << offset), count - CHAR_BIT, offset + CHAR_BIT)) : (value | (length != index + 1u ? bytes::get(source, index + 1u) & ((1u << count) - 1u) : 0x00u));
      }

      // ...
      template <unsigned char width, typename endianness::type endian, typename type>
      constexpr static typename std::enable_if<(endianness::big_endian == endian), uintmax_t>::type get_wide_bits(type source[], std::size_t const length, std::size_t const index, std::size_t const offset) noexcept {
        return bytes::get_wide_continuation_bits<width, endian>(source, length, index, bytes::get(source, index) & ((1u << (CHAR_BIT - offset)) - 1u), width - (CHAR_BIT - offset));
      }

      template <unsigned char width, typename endianness::type endian, typename type>
      constexpr static typename std::enable_if<(endianness::little_endian == endian), uintmax_t>::type get_wide_bits(type source[], std::size_t const length, std::size_t const index, std::size_t const offset) noexcept {
        return bytes::get_wide_continuation_bits<width, endian>(source, length, index, bytes::get(source, index) >> offset, width - (CHAR_BIT - offset), CHAR_BIT - offset);
      }

      // ...
      template <unsigned char width, typename endianness::type endian, typename type>
      constexpr static typename std::enable_if<(endianness::big_endian == endian), unsigned char>::type get_narrow_bits(type source[], std::size_t const length, std::size_t const index, std::size_t const offset) noexcept {
        return 0u != CHAR_BIT % width && CHAR_BIT - offset < width ? (length - 1u > index ? bytes::get(source, index + 1u) >> (CHAR_BIT - (width - (CHAR_BIT - offset))) : 0x00u) | (bytes::get(source, index) & ((1u << (CHAR_BIT - offset)) - 1u)) << (width - (CHAR_BIT - offset)) : ((bytes::get(source, index) >> (CHAR_BIT - width - offset)) & ((1u << width) - 1u));
      }

      template <unsigned char width, typename endianness::type endian, typename type>
      constexpr static typename std::enable_if<(endianness::little_endian == endian), unsigned char>::type get_narrow_bits(type source[], std::size_t const length, std::size_t const index, std::size_t const offset) noexcept {
        return ((bytes::get(source, index) >> offset) & ((1u << width) - 1u)) | (0u != CHAR_BIT % width && CHAR_BIT - offset < width && length - 1u > index ? (bytes::get(source, index + 1u) & ((1u << (width - (CHAR_BIT - offset))) - 1u)) << (CHAR_BIT - offset) : 0x00u);
      }
    }

    template <unsigned char width, typename type>
    constexpr static typename std::enable_if<CHAR_BIT == width, unsigned char>::type get_bits(type source[], std::size_t const, std::size_t const index = 0u, typename endianness::type const = endianness::get()) noexcept {
      return bytes::get(source, index);
    }

    template <unsigned char width, typename type>
    constexpr static typename std::enable_if<(CHAR_BIT > width), unsigned char>::type get_bits(type source[], std::size_t const length, std::size_t const index = 0u, typename endianness::type const endian = endianness::get()) noexcept {
      return (
        endianness::little_endian == endian
        ? bytes::get_narrow_bits<width, endianness::little_endian>
        : bytes::get_narrow_bits<width, endianness::big_endian>
      )(source, length, (index * width) / CHAR_BIT, (index * width) % CHAR_BIT);
    }

    template <unsigned char width, typename type>
    constexpr static typename std::enable_if<(CHAR_BIT < width),
      typename std::conditional<width <= CHAR_BIT * sizeof(uint_least8_t),  uint_least8_t,
      typename std::conditional<width <= CHAR_BIT * sizeof(uint_least16_t), uint_least16_t,
      typename std::conditional<width <= CHAR_BIT * sizeof(uint_least32_t), uint_least32_t,
      typename std::conditional<width <= CHAR_BIT * sizeof(uint_least64_t), uint_least64_t,
        uintmax_t
      >::type>::type>::type>::type
    >::type get_bits(type source[], std::size_t const length, std::size_t index = 0u, typename endianness::type const endian = endianness::get()) noexcept {
      return (
        endianness::little_endian == endian
        ? bytes::get_wide_bits<width, endianness::little_endian>
        : bytes::get_wide_bits<width, endianness::big_endian>
      )(source, length, (index * width) / CHAR_BIT, (index * width) % CHAR_BIT);
    }

    #ifdef __cpp_char8_t
      template <> constexpr uint_least8_t get_bits<8u>(char8_t const /* volatile */ source[], std::size_t const, std::size_t const index, typename endianness::type const) noexcept {
        return source[index];
      }
    #endif

    #ifdef __cpp_unicode_characters
      template <> constexpr uint_least16_t get_bits<16u>(char16_t const /* volatile */ source[], std::size_t const, std::size_t const index, typename endianness::type const) noexcept { return source[index]; }
      template <> constexpr uint_least32_t get_bits<32u>(char32_t const /* volatile */ source[], std::size_t const, std::size_t const index, typename endianness::type const) noexcept { return source[index]; }
    #endif

    // ... ->> (Possibly) Compile-time byte-wise assignment
    /* constexpr */ inline static unsigned char set(char                   destination[], std::size_t const index, unsigned char const source) noexcept { return (destination[index] = source); }
    /* constexpr */ inline static unsigned char set(char          volatile destination[], std::size_t const index, unsigned char const source) noexcept { return (destination[index] = source); }
    /* constexpr */ inline static unsigned char set(signed   char          destination[], std::size_t const index, unsigned char const source) noexcept { return (destination[index] = source); }
    /* constexpr */ inline static unsigned char set(signed   char volatile destination[], std::size_t const index, unsigned char const source) noexcept { return (destination[index] = source); }
    /* constexpr */ inline static unsigned char set(unsigned char          destination[], std::size_t const index, unsigned char const source) noexcept { return (destination[index] = source); }
    /* constexpr */ inline static unsigned char set(unsigned char volatile destination[], std::size_t const index, unsigned char const source) noexcept { return (destination[index] = source); }

    #ifdef __cpp_lib_byte
      /* constexpr */ inline static unsigned char set(std::byte          destination[], std::size_t const index, unsigned char const source) noexcept { return (destination[index] = source); }
      /* constexpr */ inline static unsigned char set(std::byte volatile destination[], std::size_t const index, unsigned char const source) noexcept { return (destination[index] = source); }
    #endif

    template <typename type>
    /* constexpr */ inline static typename std::enable_if<sizeof(type) == 1u && std::is_enum<typename std::remove_all_extents<typename std::remove_pointer<type>::type>::type>::value, unsigned char>::type set(type destination[], std::size_t const index, unsigned char const source) noexcept {
      return (destination[index] = static_cast<type>(source));
    }

    template <typename type>
    /* constexpr */ inline static typename std::enable_if<sizeof(type) != 1u && (
      std::is_enum    <typename std::remove_all_extents<typename std::remove_pointer<type>::type>::type>::value ||
      std::is_integral<typename std::remove_all_extents<typename std::remove_pointer<type>::type>::type>::value
    ), unsigned char>::type set(type destination[], std::size_t const index, unsigned char const source) noexcept {
      return (destination[index / sizeof(type)] = (source << (CHAR_BIT * (index % sizeof(type)))) | (destination[index / sizeof(type)] & (((1u << ((index % sizeof(type)) - 1u)) - 0u) + ((1u << ((index % sizeof(type)) - 1u)) - 1u))) | ((destination[index / sizeof(type)] >> (CHAR_BIT + (CHAR_BIT * (index % sizeof(type))))) << (CHAR_BIT + (CHAR_BIT * (index % sizeof(type))))));
    }

    template <typename type>
    inline static typename std::enable_if<false == (
      std::is_enum    <typename std::remove_all_extents<typename std::remove_pointer<type>::type>::type>::value ||
      std::is_integral<typename std::remove_all_extents<typename std::remove_pointer<type>::type>::type>::value
    ), unsigned char>::type set(type destination[], std::size_t const index, unsigned char const source) noexcept {
      return bytes::set(static_cast<typename std::conditional<std::is_volatile<type>::value, unsigned char volatile*, unsigned char*>::type>(
        (typename std::conditional<std::is_volatile<type>::value, void volatile*, void*>::type) destination
      ), index, source);
    }

    template <typename type>
    constexpr static unsigned char set(type destination[], unsigned char const source) noexcept {
      return bytes::set(destination, 0u, source);
    }

    // ... ->> (Possibly) Compile-time bitwise assignment
    namespace {
      template <unsigned char width, typename endianness::type endian, typename type>
      /* constexpr */ inline static typename std::enable_if<endianness::big_endian == endian, uintmax_t>::type set_wide_continuation_bits(type destination[], uintmax_t const source, std::size_t const index, unsigned char const count) noexcept {
        // unsigned char count = width - (CHAR_BIT - offset);

        // // ...
        // *destination &= (1u << offset) - 1u;
        // *destination |= (source & ((1u << (CHAR_BIT - offset)) - 1u)) << offset;

        // for (++destination, source >>= CHAR_BIT - offset; CHAR_BIT < count; ++destination, count -= CHAR_BIT) {
        //   *destination = source;                          // --> source & UCHAR_MAX
        //   source     >>= CHAR_BIT;
        // }

        // *destination &= (1u << (CHAR_BIT - count)) - 1u;
        // *destination |= source /* --> source & count */ << (CHAR_BIT - count);
      }

      template <unsigned char width, typename endianness::type endian, typename type>
      /* constexpr */ inline static typename std::enable_if<endianness::little_endian == endian, uintmax_t>::type set_wide_continuation_bits(type destination[], uintmax_t const source, std::size_t const index, unsigned char const count) noexcept {
        return CHAR_BIT < count ?
          bytes::set(destination, index, source),
          bytes::set_wide_continuation_bits<width, endian>(destination, source >> CHAR_BIT, index + 1u, count - CHAR_BIT)
        : bytes::set(destination, index, source | (bytes::get(destination, index) & (((1u << (CHAR_BIT - count)) - 1u) << count)));
      }

      template <unsigned char width, typename endianness::type endian, typename type>
      /* constexpr */ inline static typename std::enable_if<endianness::big_endian == endian, uintmax_t>::type set_wide_bits(type destination[], std::size_t const length, uintmax_t const source, std::size_t const index, std::size_t const offset) noexcept {
        // unsigned char count = width - (CHAR_BIT - offset);

        // // ...
        // *destination &= (1u << offset) - 1u;
        // *destination |= (source & ((1u << (CHAR_BIT - offset)) - 1u)) << offset;

        // for (++destination, source >>= CHAR_BIT - offset; CHAR_BIT < count; ++destination, count -= CHAR_BIT) {
        //   *destination = source;                          // --> source & UCHAR_MAX
        //   source     >>= CHAR_BIT;
        // }

        // *destination &= (1u << (CHAR_BIT - count)) - 1u;
        // *destination |= source /* --> source & count */ << (CHAR_BIT - count);
      }

      template <unsigned char width, typename endianness::type endian, typename type>
      /* constexpr */ inline static typename std::enable_if<endianness::little_endian == endian, uintmax_t>::type set_wide_bits(type destination[], std::size_t const length, uintmax_t const source, std::size_t const index, std::size_t const offset) noexcept {
        return
          bytes::set(destination, index, ((source & ((1u << (CHAR_BIT - offset)) - 1u)) << offset) | (bytes::get(destination, index) & ((1u << offset) - 1u))),
          bytes::set_wide_continuation_bits<width, endian>(destination, source >> (CHAR_BIT - offset), index + 1u, width - (CHAR_BIT - offset));
      }

      // ...
      template <unsigned char width, typename endianness::type endian, typename type>
      /* constexpr */ inline static typename std::enable_if<endianness::big_endian == endian, uintmax_t>::type set_narrow_bits(type destination[], std::size_t const length, uintmax_t const source, std::size_t const index, std::size_t const offset) noexcept {
        return bytes::set(destination, index, (source << (static_cast<uintmax_t>(CHAR_BIT - width) - offset)) | (bytes::get(destination, index) & ((((1u << offset) - 1u) << (CHAR_BIT - offset)) | (((1u << (CHAR_BIT - offset)) - 1u) >> width)))), (
          0u != CHAR_BIT % width && CHAR_BIT - offset < width
          ?
            bytes::set(destination, index + 0u, (source >> (offset - CHAR_BIT - width))                | (bytes::get(destination, index + 0u))),
            bytes::set(destination, index + 1u, (source << (CHAR_BIT - (width - (CHAR_BIT - offset)))) | (bytes::get(destination, index + 1u) & ((1u << (CHAR_BIT - (width - (CHAR_BIT - offset)))) - 1u))),
          : 0x00u
        );
      }

      template <unsigned char width, typename endianness::type endian, typename type>
      /* constexpr */ inline static typename std::enable_if<endianness::little_endian == endian, uintmax_t>::type set_narrow_bits(type destination[], std::size_t const length, uintmax_t const source, std::size_t const index, std::size_t const offset) noexcept {
        return bytes::set(destination, index, (source << offset) | (bytes::get(destination, index) & (((1u << offset) - 1u) | (((1u << (CHAR_BIT - width)) - 1u) << (offset + width))))), (
          0u != CHAR_BIT % width && CHAR_BIT - offset < width && length - 1u > index
          ? bytes::set(destination, index + 1u, (source >> (CHAR_BIT - offset)) | (bytes::get(destination, index + 1u) & (((1u << (CHAR_BIT - (width - (CHAR_BIT - offset)))) - 1u) << (width - (CHAR_BIT - offset)))))
          : 0x00u
        );
      }
    }

    template <unsigned char width, typename type>
    /* constexpr */ inline static typename std::enable_if<CHAR_BIT == width, uintmax_t>::type set_bits(type destination[], std::size_t const, std::size_t const index, typename endianness::type const, uintmax_t const source) noexcept {
      return bytes::set(destination, index, source & UCHAR_MAX);
    }

    template <unsigned char width, typename type>
    /* constexpr */ inline static typename std::enable_if<(CHAR_BIT > width), uintmax_t>::type set_bits(type destination[], std::size_t const length, std::size_t const index, typename endianness::type const endian, uintmax_t const source) noexcept {
      return (
        endianness::little_endian == endian
        ? bytes::set_narrow_bits<width, endianness::little_endian>
        : bytes::set_narrow_bits<width, endianness::big_endian>
      )(destination, length, source & ((1u << width) - 1u), (width * index) / CHAR_BIT, (width * index) % CHAR_BIT), source;
    }

    template <unsigned char width, typename type>
    /* constexpr */ inline static typename std::enable_if<(CHAR_BIT < width), uintmax_t>::type set_bits(type destination[], std::size_t const length, std::size_t const index, typename endianness::type const endian, uintmax_t const source) noexcept {
      return (
        endianness::little_endian == endian
        ? bytes::set_wide_bits<width, endianness::little_endian>
        : bytes::set_wide_bits<width, endianness::big_endian>
      )(destination, length, source & (((1u << (width - 1u)) - 0u) + ((1u << (width - 1u)) - 1u)), (width * index) / CHAR_BIT, (width * index) % CHAR_BIT), source;
    }

    template <unsigned char width, typename type>
    constexpr static uintmax_t set_bits(type destination[], std::size_t const length, std::size_t const index, uintmax_t const source) noexcept {
      return bytes::set_bits<width>(destination, length, index, endianness::get(), source);
    }

    template <unsigned char width, typename type>
    constexpr static uintmax_t set_bits(type destination[], std::size_t const length, uintmax_t const source) noexcept {
      return bytes::set_bits<width>(destination, length, 0u, endianness::get(), source);
    }
  }

  namespace encoding {
    typedef enum : uint_least8_t {
      Adobe_Standard_Encoding,        csAdobeStandardEncoding = 0x01u,                                                                                                                                           // --> [0x00, U+0000], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0xA1, U+00A1], [0xA2, U+00A2], [0xA3, U+00A3], [0xA4, U+2215], [0xA5, U+00A5], [0xA6, U+0192], [0xA7, U+00A7], [0xA8, U+00A4], [0xA9, U+0027], [0xAA, U+201C], [0xAB, U+00AB], [0xAC, U+2039], [0xAD, U+203A], [0xAE, U+FB01], [0xAF, U+FB02], [0xB1, U+2013], [0xB2, U+2020], [0xB3, U+2021], [0xB4, U+00B7], [0xB6, U+00B6], [0xB7, U+2022], [0xB8, U+201A], [0xB9, U+201E], [0xBA, U+201D], [0xBB, U+00BB], [0xBC, U+2026], [0xBD, U+2030], [0xBF, U+00BF], [0xC1, U+02CB], [0xC2, U+00B4], [0xC3, U+02C6], [0xC4, U+02DC], [0xC5, U+02C9], [0xC6, U+02D8], [0xC7, U+02D9], [0xC8, U+00A8], [0xCA, U+02DA], [0xCB, U+00B8], [0xCD, U+02DD], [0xCE, U+02D8], [0xCF, U+02C7], [0xD0, U+2014], [0xE1, U+00C6], [0xE3, U+00AA], [0xE8, U+0141], [0xE9, U+00D8], [0xEA, U+0152], [0xEB, U+00BA], [0xF1, U+00E6], [0xF5, U+0131], [0xF8, U+0142], [0xF9, U+00f8], [0xFA, U+0153], [0xFB, U+00DF]
      BS_4730,                        csISO4UnitedKingdom = 0x02u, gb = 0x02u, iso_ir_4 = 0x02u, ISO646_GB = 0x02u, uk = 0x02u,                                                                                  // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+00A3], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+00AF], [0x7F, U+007F]
      BS_viewdata,                    csISO47BSViewdata = 0x03u, iso_ir_47 = 0x03u,                                                                                                                              // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+00A3], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+2190], [0x5C, U+00BD], [0x5D, U+2192], [0x5E, U+2191], [0x5F, U+25A1], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00BC], [0x7C, U+2225], [0x7D, U+00BE], [0x7E, U+00F7], [0x7F, U+007F]
      CSA_Z243_4_1985_1,              ca = 0x04u, csa7_1 = 0x04u, csa71 = 0x04u, csISO121Canadian1 = 0x04u, iso_ir_121 = 0x04u, ISO646_CA = 0x04u,                                                               // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+00E0], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00E2], [0x5C, U+00E7], [0x5D, U+00EA], [0x5E, U+00EE], [0x5F, U+005F], [0x60, U+00F4], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E9], [0x7C, U+00F9], [0x7D, U+00E8], [0x7E, U+00FB], [0x7F, U+007F]
      CSA_Z243_4_1985_2,              csa7_2 = 0x05u, csa72 = 0x05u, csISO122Canadian2 = 0x05u, iso_ir_122 = 0x05u, ISO646_CA2 = 0x05u,                                                                          // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+00E0], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00E2], [0x5C, U+00E7], [0x5D, U+00EA], [0x5E, U+00C9], [0x5F, U+005F], [0x60, U+00F4], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E9], [0x7C, U+00F9], [0x7D, U+00E8], [0x7E, U+00FB], [0x7F, U+007F]
      CSA_Z243_4_1985_gr,             csISO123CSAZ24341985gr = 0x06u, iso_ir_123 = 0x06u,                                                                                                                        // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+00A1], [0xA2, U+00A8], [0xA3, U+00A3], [0xA4, U+00A2], [0xA5, U+00A5], [0xA6, U+00B1], [0xA7, U+00B4], [0xA8, U+207D], [0xA9, U+207E], [0xAA, U+00BD], [0xAB, U+207A], [0xAC, U+00B8], [0xAD, U+00AD], [0xAE, U+00B7], [0xAF, U+207B], [0xB0, U+2070], [0xB1, U+00B9], [0xB2, U+00B2], [0xB3, U+00B3], [0xB4, U+2074], [0xB5, U+2075], [0xB6, U+2076], [0xB7, U+2077], [0xB8, U+2078], [0xB9, U+2079], [0xBA, U+00BC], [0xBB, U+00BE], [0xBC, U+21D0], [0xBD, U+2260], [0xBE, U+2265], [0xBF, U+00BF], [0xC0, U+00C0], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+00C7], [0xC4, U+00C8], [0xC5, U+00C9], [0xC6, U+00CA], [0xC7, U+00CB], [0xC8, U+00CD], [0xC9, U+00CE], [0xCA, U+00CF], [0xCB, U+00D1], [0xCC, U+00D3], [0xCD, U+00D4], [0xCE, U+00D9], [0xCF, U+00DA], [0xD0, U+00DB], [0xD1, U+00DC], [0xD2, U+00AE], [0xD3, U+00A7], [0xD4, U+00B6], [0xD5, U+03BC], [0xD6, U+00AA], [0xD7, U+00BA], [0xD8, U+2018], [0xD9, U+2019], [0xDA, U+201C], [0xDB, U+201D], [0xDC, U+00AB], [0xDD, U+00BB], [0xDE, U+00B0], [0xDF, U+00A6], [0xE0, U+00E0], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+00E7], [0xE4, U+00E8], [0xE5, U+00E9], [0xE6, U+00EA], [0xE7, U+00EB], [0xE8, U+00ED], [0xE9, U+00EE], [0xEA, U+00EF], [0xEB, U+00F1], [0xEC, U+00F3], [0xED, U+00F4], [0xEE, U+00F9], [0xEF, U+00FA], [0xF0, U+00FB], [0xF1, U+00FC], [0xF2, U+00A9], [0xF3, U+2500], [0xF4, U+2502], [0xF5, U+2514], [0xF6, U+2518], [0xF7, U+2510], [0xF8, U+250C], [0xF9, U+251C], [0xFA, U+2534], [0xFB, U+2524], [0xFC, U+252C], [0xFD, U+253C], [0xFE, U+00AC], [0xFF, U+2588]
      CSN_369103,                     csISO139CSN369103 = 0x07u, iso_ir_139 = 0x07u,                                                                                                                             // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+00A4], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+0104], [0xA2, U+02D8], [0xA3, U+0141], [0xA4, U+0024], [0xA5, U+013D], [0xA6, U+015A], [0xA7, U+00A7], [0xA8, U+00A8], [0xA9, U+0160], [0xAA, U+015E], [0xAB, U+0164], [0xAC, U+0179], [0xAD, U+00AD], [0xAE, U+017D], [0xAF, U+017B], [0xB0, U+00B0], [0xB1, U+0105], [0xB2, U+02DB], [0xB3, U+0142], [0xB4, U+00B4], [0xB5, U+013E], [0xB6, U+015B], [0xB7, U+02C7], [0xB8, U+00B8], [0xB9, U+0161], [0xBA, U+015F], [0xBB, U+0165], [0xBC, U+017A], [0xBD, U+02DD], [0xBE, U+017E], [0xBF, U+017C], [0xC0, U+0154], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+0102], [0xC4, U+00C4], [0xC5, U+0139], [0xC6, U+0106], [0xC7, U+00C7], [0xC8, U+010C], [0xC9, U+00C9], [0xCA, U+0118], [0xCB, U+00CB], [0xCC, U+011A], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+010E], [0xD0, U+0110], [0xD1, U+0143], [0xD2, U+0147], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+0150], [0xD6, U+00D6], [0xD7, U+00D7], [0xD8, U+0158], [0xD9, U+016E], [0xDA, U+00DA], [0xDB, U+0170], [0xDC, U+00DC], [0xDD, U+00DD], [0xDE, U+0162], [0xDF, U+00DF], [0xE0, U+0155], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+0103], [0xE4, U+00E4], [0xE5, U+013A], [0xE6, U+0107], [0xE7, U+00E7], [0xE8, U+010D], [0xE9, U+00E9], [0xEA, U+0119], [0xEB, U+00EB], [0xEC, U+011B], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+010F], [0xF0, U+0111], [0xF1, U+0144], [0xF2, U+0148], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+0151], [0xF6, U+00F6], [0xF7, U+00F7], [0xF8, U+0159], [0xF9, U+016F], [0xFA, U+00FA], [0xFB, U+0171], [0xFC, U+00FC], [0xFD, U+00FD], [0xFE, U+0163], [0xFF, U+02D9]
      DEC_MCS,                        csDECMCS = 0x08u, dec = 0x08u,                                                                                                                                             // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA1, U+00A1], [0xA2, U+00A2], [0xA3, U+00A3], [0xA5, U+00A5], [0xA7, U+00A7], [0xA8, U+00A4], [0xA9, U+00A9], [0xAA, U+00AA], [0xAB, U+00AB], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+00B2], [0xB3, U+00B3], [0xB5, U+00B5], [0xB6, U+00B6], [0xB7, U+00B7], [0xB9, U+00B9], [0xBA, U+00BA], [0xBB, U+00BB], [0xBC, U+00BC], [0xBD, U+00BD], [0xBF, U+00BF], [0xC0, U+00C0], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+00C3], [0xC4, U+00C4], [0xC5, U+00C5], [0xC6, U+00C6], [0xC7, U+00C7], [0xC8, U+00C8], [0xC9, U+00C9], [0xCA, U+00CA], [0xCB, U+00CB], [0xCC, U+00CC], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+00CF], [0xD1, U+00D1], [0xD2, U+00D2], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+00D5], [0xD6, U+00D6], [0xD7, U+0152], [0xD8, U+00D8], [0xD9, U+00D9], [0xDA, U+00DA], [0xDB, U+00DB], [0xDC, U+00DC], [0xDD, U+0178], [0xDF, U+00DF], [0xE0, U+00E0], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+00E3], [0xE4, U+00E4], [0xE5, U+00E5], [0xE6, U+00E6], [0xE7, U+00E7], [0xE8, U+00E8], [0xE9, U+00E9], [0xEA, U+00EA], [0xEB, U+00EB], [0xEC, U+00EC], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+00EF], [0xF1, U+00F1], [0xF2, U+00F2], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+00F5], [0xF6, U+00F6], [0xF7, U+0153], [0xF8, U+00F8], [0xF9, U+00F9], [0xFA, U+00FA], [0xFB, U+00FB], [0xFC, U+00FC], [0xFD, U+00FF]
      DIN_66003,                      csISO21German = 0x09u, de = 0x09u, iso_ir_21 = 0x09u, ISO646_DE = 0x09u,                                                                                                   // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+00A7], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00C4], [0x5C, U+00D6], [0x5D, U+00DC], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E4], [0x7C, U+00F6], [0x7D, U+00FC], [0x7E, U+00DF], [0x7F, U+007F]
      dk_us,                          csDKUS = 0x0Au,                                                                                                                                                            // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F]
      DS_2089,                        csISO646Danish = 0x0Bu, dk = 0x0Bu, DS2089 = 0x0Bu, ISO646_DK = 0x0Bu,                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00C6], [0x5C, U+00D8], [0x5D, U+00C5], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E6], [0x7C, U+00F8], [0x7D, U+00E5], [0x7E, U+007E], [0x7F, U+007F]
      EBCDIC_AT_DE,                   csIBMEBCDICATDE = 0x0Cu,                                                                                                                                                   // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+00C4], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x5A, U+00DC], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00F6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+00A7], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+00DF], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+00E4], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD0, U+00FC], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+00D6], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      EBCDIC_AT_DE_A,                 csEBCDICATDEA = 0x0Du,                                                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+00F6], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x5A, U+00FC], [0x5B, U+00DC], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00DF], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x7A, U+003A], [0x7B, U+00C4], [0x7C, U+00D6], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+00E4], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      EBCDIC_CA_FR,                   csEBCDICCAFR = 0x0Eu,                                                                                                                                                      // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x42, U+00E2], [0x48, U+00E7], [0x4A, U+00E0], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x52, U+00EA], [0x53, U+00EB], [0x56, U+00EE], [0x57, U+00EF], [0x5A, U+00B4], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x64, U+00C0], [0x68, U+00C7], [0x6A, U+00F9], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x75, U+00CE], [0x76, U+00CF], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+00A8], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+00E9], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCB, U+00F4], [0xD0, U+00E8], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDB, U+00FB], [0xDC, U+00FC], [0xE0, U+00B8], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEB, U+00D4], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFF, U+007F]
      EBCDIC_DK_NO,                   csEBCDICDKNO = 0x0Fu,                                                                                                                                                      // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+0023], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x5A, U+00A4], [0x5B, U+00C5], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00F8], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+00C6], [0x7C, U+00D8], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+00FC], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+00E6], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD0, U+00E5], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+005C], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      EBCDIC_DK_NO_A,                 csEBCDICDKNOA = 0x10u,                                                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+00F8], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x5A, U+00E5], [0x5B, U+00C5], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x7A, U+003A], [0x7B, U+00C6], [0x7C, U+00D8], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+00E6], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      EBCDIC_ES,                      csEBCDICES = 0x11u,                                                                                                                                                        // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+00A2], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x5A, U+0021], [0x5B, U+20A7], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00F1], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+00D1], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+00A8], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+005C], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      EBCDIC_ES_A,                    csEBCDICESA = 0x12u,                                                                                                                                                       // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+00A2], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x5A, U+0021], [0x5B, U+20A7], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x7A, U+003A], [0x7B, U+00D1], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+00F1], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      EBCDIC_ES_S,                    csEBCDICESS = 0x13u,                                                                                                                                                       // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+00A2], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x5A, U+0021], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00F1], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+00D1], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+00A8], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+005C], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      EBCDIC_FI_SE,                   csEBCDICFISE = 0x14u,                                                                                                                                                      // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+00A7], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x5A, U+00A4], [0x5B, U+00C5], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00F6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+00E9], [0x7A, U+003A], [0x7B, U+00C4], [0x7C, U+00D6], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+00FC], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+00E4], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD0, U+00E5], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+00C9], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      EBCDIC_FI_SE_A,                 csEBCDICFISEA = 0x15u,                                                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+00F6], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x5A, U+00E5], [0x5B, U+00C5], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x7A, U+003A], [0x7B, U+00C4], [0x7C, U+00D6], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+00E4], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      EBCDIC_FR,                      csEBCDICFR = 0x16u,                                                                                                                                                        // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+00B0], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x5A, U+00A7], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00F9], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+00A3], [0x7C, U+00E0], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+00A8], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+00E9], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD0, U+00E8], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+00E7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      EBCDIC_IT,                      csEBCDICIT = 0x17u,                                                                                                                                                        // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+00B0], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x5A, U+00E9], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00F2], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+00F9], [0x7A, U+003A], [0x7B, U+00A3], [0x7C, U+00A7], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+00EC], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+00E0], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD0, U+00E8], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+00E7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      EBCDIC_PT,                      csEBCDICPT = 0x18u,                                                                                                                                                        // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+005B], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x5A, U+005D], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00F5], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+00C3], [0x7C, U+00D5], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+00E7], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+00E3], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD0, U+00B4], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+00C7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      EBCDIC_UK,                      csEBCDICUK = 0x19u,                                                                                                                                                        // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+0024], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x5A, U+0021], [0x5B, U+00A3], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+00AF], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+005C], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      EBCDIC_US,                      csEBCDICUS = 0x1Au,                                                                                                                                                        // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+00A2], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x5A, U+0021], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+007E], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+005C], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      ES,                             csISO17Spanish = 0x1Bu, iso_ir_17 = 0x1Bu, ISO646_ES = 0x1Bu,                                                                                                              // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+00A3], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+00A7], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00A1], [0x5C, U+00D1], [0x5D, U+00BF], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00B0], [0x7C, U+00F1], [0x7D, U+00E7], [0x7E, U+007E], [0x7F, U+007F]
      ES2,                            csISO85Spanish2 = 0x1Cu, iso_ir_85 = 0x1Cu, ISO646_ES2 = 0x1Cu,                                                                                                            // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+2219], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00A1], [0x5C, U+00D1], [0x5D, U+00C7], [0x5E, U+00BF], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00B4], [0x7C, U+00F1], [0x7D, U+00E7], [0x7E, U+00A8], [0x7F, U+007F]
      GB_1988_80,                     cn = 0x1Du, csISO57GB1988 = 0x1Du, iso_ir_57 = 0x1Du, ISO646_CN = 0x1Du,                                                                                                   // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+00A5], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+00AF], [0x7F, U+007F]
      hp_roman8,                      csHPRoman8 = 0x1Eu, r8 = 0x1Eu, roman8 = 0x1Eu,                                                                                                                            // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+00C0], [0xA2, U+00C2], [0xA3, U+00C8], [0xA4, U+00CA], [0xA5, U+00CB], [0xA6, U+00CE], [0xA7, U+00CF], [0xA8, U+00B4], [0xA9, U+2035], [0xAA, U+2227], [0xAB, U+00A8], [0xAC, U+223C], [0xAD, U+00D9], [0xAE, U+00DB], [0xAF, U+20A4], [0xB0, U+00AF], [0xB1, U+00DD], [0xB2, U+00FD], [0xB3, U+00B0], [0xB4, U+00C7], [0xB5, U+00E7], [0xB6, U+00D1], [0xB7, U+00F1], [0xB8, U+00A1], [0xB9, U+00BF], [0xBA, U+00A4], [0xBB, U+00A3], [0xBC, U+00A5], [0xBD, U+00A7], [0xBE, U+0192], [0xBF, U+00A2], [0xC0, U+00E2], [0xC1, U+00EA], [0xC2, U+00F4], [0xC3, U+00FB], [0xC4, U+00E1], [0xC5, U+00E9], [0xC6, U+00F3], [0xC7, U+00FA], [0xC8, U+00E0], [0xC9, U+00E8], [0xCA, U+00F2], [0xCB, U+00F9], [0xCC, U+00E4], [0xCD, U+00EB], [0xCE, U+00F6], [0xCF, U+00FC], [0xD0, U+00C5], [0xD1, U+00EE], [0xD2, U+00D8], [0xD3, U+00C6], [0xD4, U+00E5], [0xD5, U+00ED], [0xD6, U+00F8], [0xD7, U+00E6], [0xD8, U+00C4], [0xD9, U+00EC], [0xDA, U+00D6], [0xDB, U+00DC], [0xDC, U+00C9], [0xDD, U+00EF], [0xDE, U+00DF], [0xDF, U+00D4], [0xE0, U+00C1], [0xE1, U+00C3], [0xE2, U+00E3], [0xE3, U+00D0], [0xE4, U+00F0], [0xE5, U+00CD], [0xE6, U+00CC], [0xE7, U+00D3], [0xE8, U+00D2], [0xE9, U+00D5], [0xEA, U+00F5], [0xEB, U+0160], [0xEC, U+0161], [0xED, U+00DA], [0xEE, U+0178], [0xEF, U+00FF], [0xF0, U+00DE], [0xF1, U+00FE], [0xF2, U+00B7], [0xF3, U+00B5], [0xF4, U+00B6], [0xF5, U+00BE], [0xF6, U+2014], [0xF7, U+00BC], [0xF8, U+00BD], [0xF9, U+00AA], [0xFA, U+00BA], [0xFB, U+00AB], [0xFC, U+25A0], [0xFD, U+00BB], [0xFE, U+00B1]
      IBM00858,                       CCSID00858 = 0x1Fu, CP00858 = 0x1Fu, csIBM00858 = 0x1Fu, PC_Multilingual_850_euro = 0x1Fu,                                                                                 // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001C], [0x1B, U+001B], [0x1C, U+007F], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+001A], [0x80, U+00C7], [0x81, U+00FC], [0x82, U+00E9], [0x83, U+00E2], [0x84, U+00E4], [0x85, U+00E0], [0x86, U+00E5], [0x87, U+00E7], [0x88, U+00EA], [0x89, U+00EB], [0x8A, U+00E8], [0x8B, U+00EF], [0x8C, U+00EE], [0x8D, U+00EC], [0x8E, U+00C4], [0x8F, U+00C5], [0x90, U+00C9], [0x91, U+00E6], [0x92, U+00C6], [0x93, U+00F4], [0x94, U+00F6], [0x95, U+00F2], [0x96, U+00FB], [0x97, U+00F9], [0x98, U+00FF], [0x99, U+00D6], [0x9A, U+00DC], [0x9B, U+00F8], [0x9C, U+00A3], [0x9D, U+00D8], [0x9E, U+00D7], [0x9F, U+0192], [0xA0, U+00E1], [0xA1, U+00ED], [0xA2, U+00F3], [0xA3, U+00FA], [0xA4, U+00F1], [0xA5, U+00D1], [0xA6, U+00AA], [0xA7, U+00BA], [0xA8, U+00BF], [0xA9, U+00AE], [0xAA, U+00AC], [0xAB, U+00BD], [0xAC, U+00BC], [0xAD, U+00A1], [0xAE, U+00AB], [0xAF, U+00BB], [0xB0, U+2591], [0xB1, U+2592], [0xB2, U+2593], [0xB3, U+2502], [0xB4, U+2524], [0xB5, U+00C1], [0xB6, U+00C2], [0xB7, U+00C0], [0xB8, U+00A9], [0xB9, U+2563], [0xBA, U+2551], [0xBB, U+2557], [0xBC, U+255D], [0xBD, U+00A2], [0xBE, U+00A5], [0xBF, U+2510], [0xC0, U+2514], [0xC1, U+2534], [0xC2, U+252C], [0xC3, U+251C], [0xC4, U+2500], [0xC5, U+253C], [0xC6, U+00E3], [0xC7, U+00C3], [0xC8, U+255A], [0xC9, U+2554], [0xCA, U+2569], [0xCB, U+2566], [0xCC, U+2560], [0xCD, U+2550], [0xCE, U+256C], [0xCF, U+00A4], [0xD0, U+00F0], [0xD1, U+00D0], [0xD2, U+00CA], [0xD3, U+00CB], [0xD4, U+00C8], [0xD5, U+20AC], [0xD6, U+00CD], [0xD7, U+00CE], [0xD8, U+00CF], [0xD9, U+2518], [0xDA, U+250C], [0xDB, U+2588], [0xDC, U+2584], [0xDD, U+00A6], [0xDE, U+00CC], [0xDF, U+2580], [0xE0, U+00D3], [0xE1, U+00DF], [0xE2, U+00D4], [0xE3, U+00D2], [0xE4, U+00F5], [0xE5, U+00D5], [0xE6, U+00B5], [0xE7, U+00FE], [0xE8, U+00DE], [0xE9, U+00DA], [0xEA, U+00DB], [0xEB, U+00D9], [0xEC, U+00FD], [0xED, U+00DD], [0xEE, U+00AF], [0xEF, U+00B4], [0xF0, U+00AD], [0xF1, U+00B1], [0xF2, U+2017], [0xF3, U+00BE], [0xF4, U+00B6], [0xF5, U+00A7], [0xF6, U+00F7], [0xF7, U+00B8], [0xF8, U+00B0], [0xF9, U+00A8], [0xFA, U+00B7], [0xFB, U+00B9], [0xFC, U+00B3], [0xFD, U+00B2], [0xFE, U+25A0], [0xFF, U+00A0]
      IBM00924,                       CCSID00924 = 0x20u, CP00924 = 0x20u, csIBM00924 = 0x20u, ebcdic_Latin9__euro = 0x20u,                                                                                      // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+009C], [0x05, U+0009], [0x06, U+0086], [0x07, U+007F], [0x08, U+0097], [0x09, U+008D], [0x0A, U+008E], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+009D], [0x15, U+0085], [0x16, U+0008], [0x17, U+0087], [0x18, U+0018], [0x19, U+0019], [0x1A, U+0092], [0x1B, U+008F], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0080], [0x21, U+0081], [0x22, U+0082], [0x23, U+0083], [0x24, U+0084], [0x25, U+000A], [0x26, U+0017], [0x27, U+001B], [0x28, U+0088], [0x29, U+0089], [0x2A, U+008A], [0x2B, U+008B], [0x2C, U+008C], [0x2D, U+0005], [0x2E, U+0006], [0x2F, U+0007], [0x30, U+0090], [0x31, U+0091], [0x32, U+0016], [0x33, U+0093], [0x34, U+0094], [0x35, U+0095], [0x36, U+0096], [0x37, U+0004], [0x38, U+0098], [0x39, U+0099], [0x3A, U+009A], [0x3B, U+009B], [0x3C, U+0014], [0x3D, U+0015], [0x3E, U+009E], [0x3F, U+001A], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+00DD], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+0021], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+0160], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+017E], [0x9E, U+00C6], [0x9F, U+20AC], [0xA0, U+00B5], [0xA1, U+007E], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+005B], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+0152], [0xB8, U+0153], [0xB9, U+0178], [0xBA, U+00AC], [0xBB, U+0161], [0xBC, U+00AF], [0xBD, U+005D], [0xBE, U+017D], [0xBF, U+00D7], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+005C], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+009F]
      IBM01140,                       CCSID01140 = 0x21u, CP01140 = 0x21u, csIBM01140 = 0x21u, ebcdic_us_37_euro = 0x21u,                                                                                        // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+009C], [0x05, U+0009], [0x06, U+0086], [0x07, U+007F], [0x08, U+0097], [0x09, U+008D], [0x0A, U+008E], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+009D], [0x15, U+0085], [0x16, U+0008], [0x17, U+0087], [0x18, U+0018], [0x19, U+0019], [0x1A, U+0092], [0x1B, U+008F], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0080], [0x21, U+0081], [0x22, U+0082], [0x23, U+0083], [0x24, U+0084], [0x25, U+000A], [0x26, U+0017], [0x27, U+001B], [0x28, U+0088], [0x29, U+0089], [0x2A, U+008A], [0x2B, U+008B], [0x2C, U+008C], [0x2D, U+0005], [0x2E, U+0006], [0x2F, U+0007], [0x30, U+0090], [0x31, U+0091], [0x32, U+0016], [0x33, U+0093], [0x34, U+0094], [0x35, U+0095], [0x36, U+0096], [0x37, U+0004], [0x38, U+0098], [0x39, U+0099], [0x3A, U+009A], [0x3B, U+009B], [0x3C, U+0014], [0x3D, U+0015], [0x3E, U+009E], [0x3F, U+001A], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+00A2], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+0021], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+20AC], [0xA0, U+00B5], [0xA1, U+007E], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+005E], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+005B], [0xBB, U+005D], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+005C], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+009F]
      IBM01141,                       CCSID01141 = 0x22u, CP01141 = 0x22u, csIBM01141 = 0x22u, ebcdic_de_273_euro = 0x22u,                                                                                       // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+009C], [0x05, U+0009], [0x06, U+0086], [0x07, U+007F], [0x08, U+0097], [0x09, U+008D], [0x0A, U+008E], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+009D], [0x15, U+0085], [0x16, U+0008], [0x17, U+0087], [0x18, U+0018], [0x19, U+0019], [0x1A, U+0092], [0x1B, U+008F], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0080], [0x21, U+0081], [0x22, U+0082], [0x23, U+0083], [0x24, U+0084], [0x25, U+000A], [0x26, U+0017], [0x27, U+001B], [0x28, U+0088], [0x29, U+0089], [0x2A, U+008A], [0x2B, U+008B], [0x2C, U+008C], [0x2D, U+0005], [0x2E, U+0006], [0x2F, U+0007], [0x30, U+0090], [0x31, U+0091], [0x32, U+0016], [0x33, U+0093], [0x34, U+0094], [0x35, U+0095], [0x36, U+0096], [0x37, U+0004], [0x38, U+0098], [0x39, U+0099], [0x3A, U+009A], [0x3B, U+009B], [0x3C, U+0014], [0x3D, U+0015], [0x3E, U+009E], [0x3F, U+001A], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+007B], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+00C4], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+007E], [0x5A, U+00DC], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+005B], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00F6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+00A7], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+20AC], [0xA0, U+00B5], [0xA1, U+00DF], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+0040], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+00E4], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00A6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+00FC], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+007D], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+00D6], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+005C], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+005D], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+009F]
      IBM01142,                       CCSID01142 = 0x23u, CP01142 = 0x23u, csIBM01142 = 0x23u, ebcdic_dk_277_euro = 0x23u, ebcdic_no_277_euro = 0x23u,                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+009C], [0x05, U+0009], [0x06, U+0086], [0x07, U+007F], [0x08, U+0097], [0x09, U+008D], [0x0A, U+008E], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+009D], [0x15, U+0085], [0x16, U+0008], [0x17, U+0087], [0x18, U+0018], [0x19, U+0019], [0x1A, U+0092], [0x1B, U+008F], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0080], [0x21, U+0081], [0x22, U+0082], [0x23, U+0083], [0x24, U+0084], [0x25, U+000A], [0x26, U+0017], [0x27, U+001B], [0x28, U+0088], [0x29, U+0089], [0x2A, U+008A], [0x2B, U+008B], [0x2C, U+008C], [0x2D, U+0005], [0x2E, U+0006], [0x2F, U+0007], [0x30, U+0090], [0x31, U+0091], [0x32, U+0016], [0x33, U+0093], [0x34, U+0094], [0x35, U+0095], [0x36, U+0096], [0x37, U+0004], [0x38, U+0098], [0x39, U+0099], [0x3A, U+009A], [0x3B, U+009B], [0x3C, U+0014], [0x3D, U+0015], [0x3E, U+009E], [0x3F, U+001A], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+007D], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+0023], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+20AC], [0x5B, U+00C5], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+0024], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00F8], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00A6], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+00C6], [0x7C, U+00D8], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+0040], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+007B], [0x9D, U+00B8], [0x9E, U+005B], [0x9F, U+005D], [0xA0, U+00B5], [0xA1, U+00FC], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+00E6], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+00E5], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+007E], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+005C], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+009F]
      IBM01143,                       CCSID01143 = 0x24u, CP01143 = 0x24u, csIBM01143 = 0x24u, ebcdic_fi_278_euro = 0x24u, ebcdic_se_278_euro = 0x24u,                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+009C], [0x05, U+0009], [0x06, U+0086], [0x07, U+007F], [0x08, U+0097], [0x09, U+008D], [0x0A, U+008E], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+009D], [0x15, U+0085], [0x16, U+0008], [0x17, U+0087], [0x18, U+0018], [0x19, U+0019], [0x1A, U+0092], [0x1B, U+008F], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0080], [0x21, U+0081], [0x22, U+0082], [0x23, U+0083], [0x24, U+0084], [0x25, U+000A], [0x26, U+0017], [0x27, U+001B], [0x28, U+0088], [0x29, U+0089], [0x2A, U+008A], [0x2B, U+008B], [0x2C, U+008C], [0x2D, U+0005], [0x2E, U+0006], [0x2F, U+0007], [0x30, U+0090], [0x31, U+0091], [0x32, U+0016], [0x33, U+0093], [0x34, U+0094], [0x35, U+0095], [0x36, U+0096], [0x37, U+0004], [0x38, U+0098], [0x39, U+0099], [0x3A, U+009A], [0x3B, U+009B], [0x3C, U+0014], [0x3D, U+0015], [0x3E, U+009E], [0x3F, U+001A], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+007B], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+007D], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+00A7], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+0060], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+20AC], [0x5B, U+00C5], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+0023], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+0024], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00F6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+005C], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+00E9], [0x7A, U+003A], [0x7B, U+00C4], [0x7C, U+00D6], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+005D], [0xA0, U+00B5], [0xA1, U+00FC], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+005B], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+00E4], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00A6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+00E5], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+007E], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+00C9], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+0040], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+009F]
      IBM01144,                       CCSID01144 = 0x25u, CP01144 = 0x25u, csIBM01144 = 0x25u, ebcdic_it_280_euro = 0x25u,                                                                                       // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+009C], [0x05, U+0009], [0x06, U+0086], [0x07, U+007F], [0x08, U+0097], [0x09, U+008D], [0x0A, U+008E], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+009D], [0x15, U+0085], [0x16, U+0008], [0x17, U+0087], [0x18, U+0018], [0x19, U+0019], [0x1A, U+0092], [0x1B, U+008F], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0080], [0x21, U+0081], [0x22, U+0082], [0x23, U+0083], [0x24, U+0084], [0x25, U+000A], [0x26, U+0017], [0x27, U+001B], [0x28, U+0088], [0x29, U+0089], [0x2A, U+008A], [0x2B, U+008B], [0x2C, U+008C], [0x2D, U+0005], [0x2E, U+0006], [0x2F, U+0007], [0x30, U+0090], [0x31, U+0091], [0x32, U+0016], [0x33, U+0093], [0x34, U+0094], [0x35, U+0095], [0x36, U+0096], [0x37, U+0004], [0x38, U+0098], [0x39, U+0099], [0x3A, U+009A], [0x3B, U+009B], [0x3C, U+0014], [0x3D, U+0015], [0x3E, U+009E], [0x3F, U+001A], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+007B], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+005C], [0x49, U+00F1], [0x4A, U+00B0], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+005D], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+007D], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+007E], [0x59, U+00DF], [0x5A, U+00E9], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00F2], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+00F9], [0x7A, U+003A], [0x7B, U+00A3], [0x7C, U+00A7], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+005B], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+20AC], [0xA0, U+00B5], [0xA1, U+00EC], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+0023], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+0040], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+00E0], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00A6], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+00E8], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+0060], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+00E7], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+009F]
      IBM01145,                       CCSID01145 = 0x26u, CP01145 = 0x26u, csIBM01145 = 0x26u, ebcdic_es_284_euro = 0x26u,                                                                                       // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+009C], [0x05, U+0009], [0x06, U+0086], [0x07, U+007F], [0x08, U+0097], [0x09, U+008D], [0x0A, U+008E], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+009D], [0x15, U+0085], [0x16, U+0008], [0x17, U+0087], [0x18, U+0018], [0x19, U+0019], [0x1A, U+0092], [0x1B, U+008F], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0080], [0x21, U+0081], [0x22, U+0082], [0x23, U+0083], [0x24, U+0084], [0x25, U+000A], [0x26, U+0017], [0x27, U+001B], [0x28, U+0088], [0x29, U+0089], [0x2A, U+008A], [0x2B, U+008B], [0x2C, U+008C], [0x2D, U+0005], [0x2E, U+0006], [0x2F, U+0007], [0x30, U+0090], [0x31, U+0091], [0x32, U+0016], [0x33, U+0093], [0x34, U+0094], [0x35, U+0095], [0x36, U+0096], [0x37, U+0004], [0x38, U+0098], [0x39, U+0099], [0x3A, U+009A], [0x3B, U+009B], [0x3C, U+0014], [0x3D, U+0015], [0x3E, U+009E], [0x3F, U+001A], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+00E7], [0x49, U+00A6], [0x4A, U+005B], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+005D], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+0023], [0x6A, U+00F1], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+00D1], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+20AC], [0xA0, U+00B5], [0xA1, U+00A8], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+005E], [0xBB, U+0021], [0xBC, U+00AF], [0xBD, U+007E], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+005C], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+009F]
      IBM01146,                       CCSID01146 = 0x27u, CP01146 = 0x27u, csIBM01146 = 0x27u, ebcdic_gb_285_euro = 0x27u,                                                                                       // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+009C], [0x05, U+0009], [0x06, U+0086], [0x07, U+007F], [0x08, U+0097], [0x09, U+008D], [0x0A, U+008E], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+009D], [0x15, U+0085], [0x16, U+0008], [0x17, U+0087], [0x18, U+0018], [0x19, U+0019], [0x1A, U+0092], [0x1B, U+008F], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0080], [0x21, U+0081], [0x22, U+0082], [0x23, U+0083], [0x24, U+0084], [0x25, U+000A], [0x26, U+0017], [0x27, U+001B], [0x28, U+0088], [0x29, U+0089], [0x2A, U+008A], [0x2B, U+008B], [0x2C, U+008C], [0x2D, U+0005], [0x2E, U+0006], [0x2F, U+0007], [0x30, U+0090], [0x31, U+0091], [0x32, U+0016], [0x33, U+0093], [0x34, U+0094], [0x35, U+0095], [0x36, U+0096], [0x37, U+0004], [0x38, U+0098], [0x39, U+0099], [0x3A, U+009A], [0x3B, U+009B], [0x3C, U+0014], [0x3D, U+0015], [0x3E, U+009E], [0x3F, U+001A], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+0024], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+0021], [0x5B, U+00A3], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+20AC], [0xA0, U+00B5], [0xA1, U+00AF], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+005B], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+005E], [0xBB, U+005D], [0xBC, U+007E], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+005C], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+009F]
      IBM01147,                       CCSID01147 = 0x28u, CP01147 = 0x28u, csIBM01147 = 0x28u, ebcdic_fr_297_euro = 0x28u,                                                                                       // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+009C], [0x05, U+0009], [0x06, U+0086], [0x07, U+007F], [0x08, U+0097], [0x09, U+008D], [0x0A, U+008E], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+009D], [0x15, U+0085], [0x16, U+0008], [0x17, U+0087], [0x18, U+0018], [0x19, U+0019], [0x1A, U+0092], [0x1B, U+008F], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0080], [0x21, U+0081], [0x22, U+0082], [0x23, U+0083], [0x24, U+0084], [0x25, U+000A], [0x26, U+0017], [0x27, U+001B], [0x28, U+0088], [0x29, U+0089], [0x2A, U+008A], [0x2B, U+008B], [0x2C, U+008C], [0x2D, U+0005], [0x2E, U+0006], [0x2F, U+0007], [0x30, U+0090], [0x31, U+0091], [0x32, U+0016], [0x33, U+0093], [0x34, U+0094], [0x35, U+0095], [0x36, U+0096], [0x37, U+0004], [0x38, U+0098], [0x39, U+0099], [0x3A, U+009A], [0x3B, U+009B], [0x3C, U+0014], [0x3D, U+0015], [0x3E, U+009E], [0x3F, U+001A], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+0040], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+005C], [0x49, U+00F1], [0x4A, U+00B0], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+007B], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+007D], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+00A7], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00F9], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+00B5], [0x7A, U+003A], [0x7B, U+00A3], [0x7C, U+00E0], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+005B], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+20AC], [0xA0, U+0060], [0xA1, U+00A8], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+0023], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+005D], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+00AF], [0xBD, U+007E], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+00E9], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+00E8], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+00A6], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+00E7], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+009F]
      IBM01148,                       CCSID01148 = 0x29u, CP01148 = 0x29u, csIBM01148 = 0x29u, ebcdic_international_500_euro = 0x29u,                                                                            // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+009C], [0x05, U+0009], [0x06, U+0086], [0x07, U+007F], [0x08, U+0097], [0x09, U+008D], [0x0A, U+008E], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+009D], [0x15, U+0085], [0x16, U+0008], [0x17, U+0087], [0x18, U+0018], [0x19, U+0019], [0x1A, U+0092], [0x1B, U+008F], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0080], [0x21, U+0081], [0x22, U+0082], [0x23, U+0083], [0x24, U+0084], [0x25, U+000A], [0x26, U+0017], [0x27, U+001B], [0x28, U+0088], [0x29, U+0089], [0x2A, U+008A], [0x2B, U+008B], [0x2C, U+008C], [0x2D, U+0005], [0x2E, U+0006], [0x2F, U+0007], [0x30, U+0090], [0x31, U+0091], [0x32, U+0016], [0x33, U+0093], [0x34, U+0094], [0x35, U+0095], [0x36, U+0096], [0x37, U+0004], [0x38, U+0098], [0x39, U+0099], [0x3A, U+009A], [0x3B, U+009B], [0x3C, U+0014], [0x3D, U+0015], [0x3E, U+009E], [0x3F, U+001A], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+005B], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+005D], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+20AC], [0xA0, U+00B5], [0xA1, U+007E], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+005C], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+009F]
      IBM01149,                       CCSID01149 = 0x2Au, CP01149 = 0x2Au, csIBM01149 = 0x2Au, ebcdic_is_871_euro = 0x2Au,                                                                                       // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+009C], [0x05, U+0009], [0x06, U+0086], [0x07, U+007F], [0x08, U+0097], [0x09, U+008D], [0x0A, U+008E], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+009D], [0x15, U+0085], [0x16, U+0008], [0x17, U+0087], [0x18, U+0018], [0x19, U+0019], [0x1A, U+0092], [0x1B, U+008F], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0080], [0x21, U+0081], [0x22, U+0082], [0x23, U+0083], [0x24, U+0084], [0x25, U+000A], [0x26, U+0017], [0x27, U+001B], [0x28, U+0088], [0x29, U+0089], [0x2A, U+008A], [0x2B, U+008B], [0x2C, U+008C], [0x2D, U+0005], [0x2E, U+0006], [0x2F, U+0007], [0x30, U+0090], [0x31, U+0091], [0x32, U+0016], [0x33, U+0093], [0x34, U+0094], [0x35, U+0095], [0x36, U+0096], [0x37, U+0004], [0x38, U+0098], [0x39, U+0099], [0x3A, U+009A], [0x3B, U+009B], [0x3C, U+0014], [0x3D, U+0015], [0x3E, U+009E], [0x3F, U+001A], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+00DE], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+00C6], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00D6], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+00F0], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+00D0], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+0060], [0x8D, U+00FD], [0x8E, U+007B], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+007D], [0x9D, U+00B8], [0x9E, U+005D], [0x9F, U+20AC], [0xA0, U+00B5], [0xA1, U+00F6], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+0040], [0xAD, U+00DD], [0xAE, U+005B], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+005C], [0xBF, U+00D7], [0xC0, U+00FE], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+007E], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+00E6], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+00B4], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+005E], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+009F]
      IBM037,                         cp037 = 0x2Bu, csIBM037 = 0x2Bu, ebcdic_cp_ca = 0x2Bu, ebcdic_cp_nl = 0x2Bu, ebcdic_cp_us = 0x2Bu, ebcdic_cp_wt = 0x2Bu,                                                   // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+00A2], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+0021], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+00A4], [0xA0, U+00B5], [0xA1, U+007E], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+005E], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+005B], [0xBB, U+005D], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+005C], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+007F]
      IBM038,                         cp038 = 0x2Cu, csIBM038 = 0x2Cu, EBCDIC_INT = 0x2Cu,                                                                                                                       // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+005B], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x5A, U+005D], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+007E], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+005C], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      IBM1026,                        CP1026 = 0x2Du, csIBM1026 = 0x2Du,                                                                                                                                         // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+007B], [0x49, U+00F1], [0x4A, U+00C7], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+011E], [0x5B, U+0130], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+005B], [0x69, U+00D1], [0x6A, U+015F], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0131], [0x7A, U+003A], [0x7B, U+00D6], [0x7C, U+015E], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+00DC], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+007D], [0x8D, U+0060], [0x8E, U+00A6], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+02DB], [0x9E, U+00C6], [0x9F, U+00A4], [0xA0, U+00B5], [0xA1, U+00F6], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+005D], [0xAD, U+0024], [0xAE, U+0040], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+2014], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+00E7], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+007E], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+011F], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+005C], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+00FC], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+0023], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+0022], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+007F]
      IBM1047,                        csIBM1047 = 0x2Eu, IBM_1047 = 0x2Eu,                                                                                                                                       // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+009C], [0x05, U+0009], [0x06, U+0086], [0x07, U+007F], [0x08, U+0097], [0x09, U+008D], [0x0A, U+008E], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+009D], [0x15, U+0085], [0x16, U+0008], [0x17, U+0087], [0x18, U+0018], [0x19, U+0019], [0x1A, U+0092], [0x1B, U+008F], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0080], [0x21, U+0081], [0x22, U+0082], [0x23, U+0083], [0x24, U+0084], [0x25, U+000A], [0x26, U+0017], [0x27, U+001B], [0x28, U+0088], [0x29, U+0089], [0x2A, U+008A], [0x2B, U+008B], [0x2C, U+008C], [0x2D, U+0005], [0x2E, U+0006], [0x2F, U+0007], [0x30, U+0090], [0x31, U+0091], [0x32, U+0016], [0x33, U+0093], [0x34, U+0094], [0x35, U+0095], [0x36, U+0096], [0x37, U+0004], [0x38, U+0098], [0x39, U+0099], [0x3A, U+009A], [0x3B, U+009B], [0x3C, U+0014], [0x3D, U+0015], [0x3E, U+009E], [0x3F, U+001A], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+00A2], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+0021], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+00A4], [0xA0, U+00B5], [0xA1, U+007E], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+005B], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00AC], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00DD], [0xBB, U+00A8], [0xBC, U+00AF], [0xBD, U+005D], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+005C], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+009F]
      IBM273,                         CP273 = 0x2Fu, csIBM273 = 0x2Fu,                                                                                                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+007B], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+00C4], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+007E], [0x5A, U+00DC], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+005B], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00F6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+00A7], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+00A4], [0xA0, U+00B5], [0xA1, U+00DF], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+0040], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+00E4], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00A6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+00FC], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+007D], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+00D6], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+005C], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+005D], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+007F]
      IBM274,                         CP274 = 0x30u, csIBM274 = 0x30u, EBCDIC_BE = 0x30u,                                                                                                                        // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+005B], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x5A, U+005D], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00F9], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+00E0], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+00A8], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+00E9], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD0, U+00E8], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+00E7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      IBM275,                         cp275 = 0x31u, csIBM275 = 0x31u, EBCDIC_BR = 0x31u,                                                                                                                        // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+00C9], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x5A, U+0024], [0x5B, U+00C7], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00E7], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+00E3], [0x7A, U+003A], [0x7B, U+00D5], [0x7C, U+00C3], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+007E], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+00F5], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD0, U+00E9], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+005C], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      IBM277,                         csIBM277 = 0x32u, EBCDIC_CP_DK = 0x32u, EBCDIC_CP_NO = 0x32u,                                                                                                              // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+007D], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+0023], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+00A4], [0x5B, U+00C5], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+0024], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00F8], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00A6], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+00C6], [0x7C, U+00D8], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+0040], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+007B], [0x9D, U+00B8], [0x9E, U+005B], [0x9F, U+005D], [0xA0, U+00B5], [0xA1, U+00FC], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+00E6], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+00E5], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+007E], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+005C], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+007F]
      IBM278,                         CP278 = 0x33u, csIBM278 = 0x33u, ebcdic_cp_fi = 0x33u, ebcdic_cp_se = 0x33u,                                                                                               // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+007B], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+007D], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+00A7], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+0060], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+00A4], [0x5B, U+00C5], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+0023], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+0024], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00F6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+00E9], [0x7A, U+003A], [0x7B, U+00C4], [0x7C, U+00D6], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+005D], [0xA0, U+00B5], [0xA1, U+00FC], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+005B], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+00E4], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00A6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+00E5], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+007E], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+005C], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+0040], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+007F]
      IBM280,                         CP280 = 0x34u, csIBM280 = 0x34u, ebcdic_cp_it = 0x34u,                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+007B], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+005C], [0x49, U+00F1], [0x4A, U+00B0], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+005D], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+007D], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+007E], [0x59, U+00DF], [0x5A, U+00E9], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00F2], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+00F9], [0x7A, U+003A], [0x7B, U+00A3], [0x7C, U+00A7], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+005B], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+00A4], [0xA0, U+00B5], [0xA1, U+00EC], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+0023], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+0040], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+00E0], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00A6], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+00E8], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+0060], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+00E7], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+007F]
      IBM281,                         cp281 = 0x35u, csIBM281 = 0x35u, EBCDIC_JP_E = 0x35u,                                                                                                                      // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x4A, U+00A3], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x5A, U+0021], [0x5B, U+00A5], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0xA1, U+00AF], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+0024], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      IBM284,                         CP284 = 0x36u, csIBM284 = 0x36u, ebcdic_cp_es = 0x36u,                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+00E7], [0x49, U+00A6], [0x4A, U+005B], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+005D], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+0023], [0x6A, U+00F1], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+00D1], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+00A4], [0xA0, U+00B5], [0xA1, U+00A8], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+005E], [0xBB, U+0021], [0xBC, U+00AF], [0xBD, U+007E], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+005C], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+007F]
      IBM285,                         CP285 = 0x37u, csIBM285 = 0x37u, ebcdic_cp_gb = 0x37u,                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+0024], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+0021], [0x5B, U+00A3], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+00A4], [0xA0, U+00B5], [0xA1, U+007E], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+005B], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+005E], [0xBB, U+005D], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+005C], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+007F]
      IBM290,                         cp290 = 0x38u, csIBM290 = 0x38u, EBCDIC_JP_kana = 0x38u,                                                                                                                   // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x41, U+3002], [0x42, U+300C], [0x43, U+300D], [0x44, U+3001], [0x45, U+30FB], [0x46, U+30F2], [0x47, U+30A1], [0x48, U+30A3], [0x49, U+30A5], [0x4A, U+00A3], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+007C], [0x50, U+0026], [0x51, U+30A7], [0x52, U+30A9], [0x53, U+30E3], [0x54, U+30E5], [0x55, U+30E7], [0x56, U+30C3], [0x58, U+30FC], [0x5A, U+0021], [0x5B, U+00A5], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00AC], [0x60, U+002D], [0x61, U+002F], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x81, U+30A2], [0x82, U+30A4], [0x83, U+30A6], [0x84, U+30A8], [0x85, U+30AA], [0x86, U+30AB], [0x87, U+30AD], [0x88, U+30AF], [0x89, U+30B1], [0x8A, U+30B3], [0x8C, U+30B5], [0x8D, U+30B7], [0x8E, U+30B9], [0x8F, U+30BB], [0x90, U+30BD], [0x91, U+30BF], [0x92, U+30C1], [0x93, U+30C4], [0x94, U+30C6], [0x95, U+30C8], [0x96, U+30CA], [0x97, U+30CB], [0x98, U+30CC], [0x99, U+30CD], [0x9A, U+30CE], [0x9D, U+30CF], [0x9E, U+30D2], [0x9F, U+30D5], [0xA1, U+00AF], [0xA2, U+30D8], [0xA3, U+30DB], [0xA4, U+30DE], [0xA5, U+30DF], [0xA6, U+30E0], [0xA7, U+30E1], [0xA8, U+30E2], [0xA9, U+30E4], [0xAA, U+30E6], [0xAC, U+30E8], [0xAD, U+30E9], [0xAE, U+30EA], [0xAF, U+30EB], [0xBA, U+30EC], [0xBB, U+30ED], [0xBC, U+30EF], [0xBD, U+30F3], [0xBE, U+309B], [0xBF, U+309C], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xE0, U+0024], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFF, U+007F]
      IBM297,                         cp297 = 0x39u, csIBM297 = 0x39u, ebcdic_cp_fr = 0x39u,                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+0040], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+005C], [0x49, U+00F1], [0x4A, U+00B0], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+007B], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+007D], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+00A7], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00F9], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+00B5], [0x7A, U+003A], [0x7B, U+00A3], [0x7C, U+00E0], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+005B], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+00A4], [0xA0, U+0060], [0xA1, U+00A8], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+0023], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+005D], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+00AF], [0xBD, U+007E], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+00E9], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+00E8], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+00A6], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+00E7], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+007F]
      IBM437,                         cp437 = 0x3Au, csPC8CodePage437 = 0x3Au,                                                                                                                                   // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+00C7], [0x81, U+00FC], [0x82, U+00E9], [0x83, U+00E2], [0x84, U+00E4], [0x85, U+00E0], [0x86, U+00E5], [0x87, U+00E7], [0x88, U+00EA], [0x89, U+00EB], [0x8A, U+00E8], [0x8B, U+00EF], [0x8C, U+00EE], [0x8D, U+00EC], [0x8E, U+00C4], [0x8F, U+00C5], [0x90, U+00C9], [0x91, U+00E6], [0x92, U+00C6], [0x93, U+00F4], [0x94, U+00F6], [0x95, U+00F2], [0x96, U+00FB], [0x97, U+00F9], [0x98, U+00FF], [0x99, U+00D6], [0x9A, U+00DC], [0x9B, U+00A2], [0x9C, U+00A3], [0x9D, U+00A5], [0x9E, U+20A7], [0x9F, U+0192], [0xA0, U+00E1], [0xA1, U+00ED], [0xA2, U+00F3], [0xA3, U+00FA], [0xA4, U+00F1], [0xA5, U+00D1], [0xA6, U+00AA], [0xA7, U+00BA], [0xA8, U+00BF], [0xA9, U+2310], [0xAA, U+00AC], [0xAB, U+00BD], [0xAC, U+00BC], [0xAD, U+00A1], [0xAE, U+00AB], [0xAF, U+00BB], [0xB0, U+2591], [0xB1, U+2592], [0xB2, U+2593], [0xB3, U+2502], [0xB4, U+2524], [0xB5, U+2525], [0xB6, U+2528], [0xB7, U+2512], [0xB8, U+2511], [0xB9, U+252B], [0xBA, U+2503], [0xBB, U+2513], [0xBC, U+251B], [0xBD, U+251A], [0xBE, U+2519], [0xBF, U+2510], [0xC0, U+2514], [0xC1, U+2534], [0xC2, U+252C], [0xC3, U+251C], [0xC4, U+2500], [0xC5, U+253C], [0xC6, U+251D], [0xC7, U+2520], [0xC8, U+2517], [0xC9, U+250F], [0xCA, U+253B], [0xCB, U+2533], [0xCC, U+2523], [0xCD, U+2501], [0xCE, U+254B], [0xCF, U+2537], [0xD0, U+2538], [0xD1, U+252F], [0xD2, U+2530], [0xD3, U+2516], [0xD4, U+2515], [0xD5, U+250D], [0xD6, U+250E], [0xD7, U+2542], [0xD8, U+253F], [0xD9, U+2518], [0xDA, U+250C], [0xDB, U+2588], [0xDC, U+2584], [0xDD, U+258C], [0xDE, U+2590], [0xDF, U+2580], [0xE0, U+03B1], [0xE1, U+03B2], [0xE2, U+0393], [0xE3, U+03C0], [0xE4, U+03A3], [0xE5, U+03C3], [0xE6, U+03BC], [0xE7, U+03C4], [0xE8, U+03A6], [0xE9, U+0398], [0xEA, U+03A9], [0xEB, U+03B4], [0xEC, U+221E], [0xED, U+2205], [0xEE, U+03B5], [0xEF, U+2229], [0xF0, U+2261], [0xF1, U+00B1], [0xF2, U+2265], [0xF3, U+2264], [0xF4, U+2320], [0xF5, U+2321], [0xF6, U+00F7], [0xF7, U+2248], [0xF8, U+2218], [0xF9, U+00B7], [0xFA, U+2219], [0xFB, U+221A], [0xFC, U+207F], [0xFD, U+00B2], [0xFE, U+25A0], [0xFF, U+00A0]
      IBM500,                         CP500 = 0x3Bu, csIBM500 = 0x3Bu, ebcdic_cp_be = 0x3Bu, ebcdic_cp_ch = 0x3Bu,                                                                                               // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+005B], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+005D], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+00F0], [0x8D, U+00FD], [0x8E, U+00FE], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+00E6], [0x9D, U+00B8], [0x9E, U+00C6], [0x9F, U+00A4], [0xA0, U+00B5], [0xA1, U+007E], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+00D0], [0xAD, U+00DD], [0xAE, U+00DE], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+005C], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+007F]
      IBM775,                         cp775 = 0x3Cu, csPC775Baltic = 0x3Cu,                                                                                                                                      // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001C], [0x1B, U+001B], [0x1C, U+007F], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+001A], [0x80, U+0106], [0x81, U+00FC], [0x82, U+00E9], [0x83, U+0101], [0x84, U+00E4], [0x85, U+0123], [0x86, U+00E5], [0x87, U+0107], [0x88, U+0142], [0x89, U+0113], [0x8A, U+0156], [0x8B, U+0157], [0x8C, U+012B], [0x8D, U+0179], [0x8E, U+00C4], [0x8F, U+00C5], [0x90, U+00C9], [0x91, U+00E6], [0x92, U+00C6], [0x93, U+014D], [0x94, U+00F6], [0x95, U+0122], [0x96, U+00A2], [0x97, U+015A], [0x98, U+015B], [0x99, U+00D6], [0x9A, U+00DC], [0x9B, U+00F8], [0x9C, U+00A3], [0x9D, U+00D8], [0x9E, U+00D7], [0x9F, U+00A4], [0xA0, U+0100], [0xA1, U+012A], [0xA2, U+00F3], [0xA3, U+017B], [0xA4, U+017C], [0xA5, U+017A], [0xA6, U+201D], [0xA7, U+00A6], [0xA8, U+00A9], [0xA9, U+00AE], [0xAA, U+00AC], [0xAB, U+00BD], [0xAC, U+00BC], [0xAD, U+0141], [0xAE, U+00AB], [0xAF, U+00BB], [0xB0, U+2591], [0xB1, U+2592], [0xB2, U+2593], [0xB3, U+2502], [0xB4, U+2524], [0xB5, U+0104], [0xB6, U+010C], [0xB7, U+0118], [0xB8, U+0116], [0xB9, U+2563], [0xBA, U+2551], [0xBB, U+2557], [0xBC, U+255D], [0xBD, U+012E], [0xBE, U+0160], [0xBF, U+2510], [0xC0, U+2514], [0xC1, U+2534], [0xC2, U+252C], [0xC3, U+251C], [0xC4, U+2500], [0xC5, U+253C], [0xC6, U+0172], [0xC7, U+016A], [0xC8, U+255A], [0xC9, U+2554], [0xCA, U+2569], [0xCB, U+2566], [0xCC, U+2560], [0xCD, U+2550], [0xCE, U+256C], [0xCF, U+017D], [0xD0, U+0105], [0xD1, U+010D], [0xD2, U+0119], [0xD3, U+0117], [0xD4, U+012F], [0xD5, U+0161], [0xD6, U+0173], [0xD7, U+016B], [0xD8, U+017E], [0xD9, U+2518], [0xDA, U+250C], [0xDB, U+2588], [0xDC, U+2584], [0xDD, U+258C], [0xDE, U+2590], [0xDF, U+2580], [0xE0, U+00D3], [0xE1, U+00DF], [0xE2, U+014C], [0xE3, U+0143], [0xE4, U+00F5], [0xE5, U+00D5], [0xE6, U+00B5], [0xE7, U+0144], [0xE8, U+0136], [0xE9, U+0137], [0xEA, U+013B], [0xEB, U+013C], [0xEC, U+0146], [0xED, U+0112], [0xEE, U+0145], [0xEF, U+2019], [0xF0, U+00AD], [0xF1, U+00B1], [0xF2, U+201C], [0xF3, U+00BE], [0xF4, U+00B6], [0xF5, U+00A7], [0xF6, U+00F7], [0xF7, U+201E], [0xF8, U+00B0], [0xF9, U+2219], [0xFA, U+00B7], [0xFB, U+00B9], [0xFC, U+00B3], [0xFD, U+00B2], [0xFE, U+25A0], [0xFF, U+00A0]
      IBM850,                         cp850 = 0x3Du, csPC850Multilingual = 0x3Du,                                                                                                                                // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+00C7], [0x81, U+00FC], [0x82, U+00E9], [0x83, U+00E2], [0x84, U+00E4], [0x85, U+00E0], [0x86, U+00E5], [0x87, U+00E7], [0x88, U+00EA], [0x89, U+00EB], [0x8A, U+00E8], [0x8B, U+00EF], [0x8C, U+00EE], [0x8D, U+00EC], [0x8E, U+00C4], [0x8F, U+00C5], [0x90, U+00C9], [0x91, U+00E6], [0x92, U+00C6], [0x93, U+00F4], [0x94, U+00F6], [0x95, U+00F2], [0x96, U+00FB], [0x97, U+00F9], [0x98, U+00FF], [0x99, U+00D6], [0x9A, U+00DC], [0x9B, U+00F8], [0x9C, U+00A3], [0x9D, U+00D8], [0x9E, U+00D7], [0x9F, U+0192], [0xA0, U+00E1], [0xA1, U+00ED], [0xA2, U+00F3], [0xA3, U+00FA], [0xA4, U+00F1], [0xA5, U+00D1], [0xA6, U+00AA], [0xA7, U+00BA], [0xA8, U+00BF], [0xA9, U+00AE], [0xAA, U+00AC], [0xAB, U+00BD], [0xAC, U+00BC], [0xAD, U+00A1], [0xAE, U+00AB], [0xAF, U+00BB], [0xB0, U+2591], [0xB1, U+2592], [0xB2, U+2593], [0xB3, U+2502], [0xB4, U+2524], [0xB5, U+00C1], [0xB6, U+00C2], [0xB7, U+00C0], [0xB8, U+00A9], [0xB9, U+252B], [0xBA, U+2503], [0xBB, U+2513], [0xBC, U+251B], [0xBD, U+00A2], [0xBE, U+00A5], [0xBF, U+2510], [0xC0, U+2514], [0xC1, U+2534], [0xC2, U+252C], [0xC3, U+251C], [0xC4, U+2500], [0xC5, U+253C], [0xC6, U+00E3], [0xC7, U+00C3], [0xC8, U+2517], [0xC9, U+250F], [0xCA, U+253B], [0xCB, U+2533], [0xCC, U+2523], [0xCD, U+2501], [0xCE, U+254B], [0xCF, U+00A4], [0xD0, U+00F0], [0xD1, U+00D0], [0xD2, U+00CA], [0xD3, U+00CB], [0xD4, U+00C8], [0xD5, U+0131], [0xD6, U+00CD], [0xD7, U+00CE], [0xD8, U+00CF], [0xD9, U+2518], [0xDA, U+250C], [0xDB, U+2588], [0xDC, U+2584], [0xDD, U+00A6], [0xDE, U+00CC], [0xDF, U+2580], [0xE0, U+00D3], [0xE1, U+00DF], [0xE2, U+00D4], [0xE3, U+00D2], [0xE4, U+00F5], [0xE5, U+00D5], [0xE6, U+03BC], [0xE7, U+00DE], [0xE8, U+00FE], [0xE9, U+00DA], [0xEA, U+00DB], [0xEB, U+00D9], [0xEC, U+00FD], [0xED, U+00DD], [0xEE, U+2014], [0xEF, U+00B4], [0xF0, U+00AD], [0xF1, U+00B1], [0xF2, U+21D4], [0xF3, U+00BE], [0xF4, U+00B6], [0xF5, U+00A7], [0xF6, U+00F7], [0xF7, U+02DB], [0xF8, U+00B0], [0xF9, U+00A8], [0xFA, U+02D9], [0xFB, U+00B9], [0xFC, U+00B3], [0xFD, U+00B2], [0xFE, U+25A0], [0xFF, U+00A0]
      IBM851,                         cp851 = 0x3Eu, csIBM851 = 0x3Eu,                                                                                                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+00C7], [0x81, U+00FC], [0x82, U+00E9], [0x83, U+00E2], [0x84, U+00E4], [0x85, U+00E0], [0x86, U+0386], [0x87, U+00E7], [0x88, U+00EA], [0x89, U+00EB], [0x8A, U+00E8], [0x8B, U+00EF], [0x8C, U+00EE], [0x8D, U+0388], [0x8E, U+00C4], [0x8F, U+0389], [0x90, U+038A], [0x92, U+038C], [0x93, U+00F4], [0x94, U+00F6], [0x95, U+038E], [0x96, U+00FB], [0x97, U+00F9], [0x98, U+038F], [0x99, U+00D6], [0x9A, U+00DC], [0x9B, U+03AC], [0x9C, U+00A3], [0x9D, U+03AD], [0x9E, U+03AE], [0x9F, U+03AF], [0xA0, U+03CA], [0xA1, U+0390], [0xA2, U+03CC], [0xA3, U+03CD], [0xA4, U+0391], [0xA5, U+0392], [0xA6, U+0393], [0xA7, U+0394], [0xA8, U+0395], [0xA9, U+0396], [0xAA, U+0397], [0xAB, U+00BD], [0xAC, U+0398], [0xAD, U+0399], [0xAE, U+00AB], [0xAF, U+00BB], [0xB0, U+2591], [0xB1, U+2592], [0xB2, U+2593], [0xB3, U+2502], [0xB4, U+2524], [0xB5, U+039A], [0xB6, U+039B], [0xB7, U+039D], [0xB8, U+039C], [0xB9, U+252B], [0xBA, U+2503], [0xBB, U+2513], [0xBC, U+251B], [0xBD, U+039E], [0xBE, U+039F], [0xBF, U+2510], [0xC0, U+2514], [0xC1, U+2534], [0xC2, U+252C], [0xC3, U+251C], [0xC4, U+2500], [0xC5, U+253C], [0xC6, U+03A0], [0xC7, U+03A1], [0xC8, U+2517], [0xC9, U+250F], [0xCA, U+253B], [0xCB, U+2533], [0xCC, U+2523], [0xCD, U+2501], [0xCE, U+254B], [0xCF, U+03A3], [0xD0, U+03A4], [0xD1, U+03A5], [0xD2, U+03A6], [0xD3, U+03A7], [0xD4, U+03A8], [0xD5, U+03A9], [0xD6, U+03B1], [0xD7, U+03B2], [0xD8, U+03B3], [0xD9, U+2518], [0xDA, U+250C], [0xDB, U+2588], [0xDC, U+2584], [0xDD, U+03B4], [0xDE, U+03B5], [0xDF, U+2580], [0xE0, U+03B6], [0xE1, U+03B7], [0xE2, U+03B8], [0xE3, U+03B9], [0xE4, U+03BA], [0xE5, U+03BB], [0xE6, U+03BC], [0xE7, U+03BD], [0xE8, U+03BE], [0xE9, U+03BF], [0xEA, U+03C0], [0xEB, U+03C1], [0xEC, U+03C3], [0xED, U+03C2], [0xEE, U+03C4], [0xEF, U+00B4], [0xF0, U+00AD], [0xF1, U+00B1], [0xF2, U+03C5], [0xF3, U+03C6], [0xF4, U+03C7], [0xF5, U+00A7], [0xF6, U+03C8], [0xF7, U+02DB], [0xF8, U+00B0], [0xF9, U+00A8], [0xFA, U+03C9], [0xFB, U+03CB], [0xFC, U+03B0], [0xFD, U+03CE], [0xFE, U+25A0], [0xFF, U+00A0]
      IBM852,                         cp852 = 0x3Fu, csPCp852 = 0x3Fu,                                                                                                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+00C7], [0x81, U+00FC], [0x82, U+00E9], [0x83, U+00E2], [0x84, U+00E4], [0x85, U+016F], [0x86, U+0107], [0x87, U+00E7], [0x88, U+0142], [0x89, U+00EB], [0x8A, U+0150], [0x8B, U+0151], [0x8C, U+00EE], [0x8D, U+0179], [0x8E, U+00C4], [0x8F, U+0106], [0x90, U+00C9], [0x91, U+0139], [0x92, U+013A], [0x93, U+00F4], [0x94, U+00F6], [0x95, U+013D], [0x96, U+013E], [0x97, U+015A], [0x98, U+015B], [0x99, U+00D6], [0x9A, U+00DC], [0x9B, U+0164], [0x9C, U+0165], [0x9D, U+0141], [0x9E, U+00D7], [0x9F, U+010D], [0xA0, U+00E1], [0xA1, U+00ED], [0xA2, U+00F3], [0xA3, U+00FA], [0xA4, U+0104], [0xA5, U+0105], [0xA6, U+017D], [0xA7, U+017E], [0xA8, U+0118], [0xA9, U+0119], [0xAB, U+017A], [0xAC, U+010C], [0xAD, U+015F], [0xAE, U+00AB], [0xAF, U+00BB], [0xB0, U+2591], [0xB1, U+2592], [0xB2, U+2593], [0xB3, U+2502], [0xB4, U+2524], [0xB5, U+00C1], [0xB6, U+00C2], [0xB7, U+011A], [0xB8, U+015E], [0xB9, U+252B], [0xBA, U+2503], [0xBB, U+2513], [0xBC, U+251B], [0xBD, U+017B], [0xBE, U+017C], [0xBF, U+2510], [0xC0, U+2514], [0xC1, U+2534], [0xC2, U+252C], [0xC3, U+251C], [0xC4, U+2500], [0xC5, U+253C], [0xC6, U+0102], [0xC7, U+0103], [0xC8, U+2517], [0xC9, U+250F], [0xCA, U+253B], [0xCB, U+2533], [0xCC, U+2523], [0xCD, U+2501], [0xCE, U+254B], [0xCF, U+00A4], [0xD0, U+0111], [0xD1, U+0110], [0xD2, U+010E], [0xD3, U+00CB], [0xD4, U+010F], [0xD5, U+0147], [0xD6, U+00CD], [0xD7, U+00DB], [0xD8, U+011B], [0xD9, U+2518], [0xDA, U+250C], [0xDB, U+2588], [0xDC, U+2584], [0xDD, U+0162], [0xDE, U+016E], [0xDF, U+2580], [0xE0, U+00D3], [0xE1, U+00DF], [0xE2, U+00D4], [0xE3, U+0143], [0xE4, U+0144], [0xE5, U+0148], [0xE6, U+0160], [0xE7, U+0161], [0xE8, U+0154], [0xE9, U+00DA], [0xEA, U+0155], [0xEB, U+0170], [0xEC, U+00FD], [0xED, U+00DD], [0xEE, U+0163], [0xEF, U+00B4], [0xF0, U+00AD], [0xF1, U+02DD], [0xF2, U+00B8], [0xF3, U+02C7], [0xF4, U+02D8], [0xF5, U+00A7], [0xF6, U+00F7], [0xF7, U+02DB], [0xF8, U+00B0], [0xF9, U+00A8], [0xFA, U+02D9], [0xFB, U+0171], [0xFC, U+0158], [0xFD, U+0159], [0xFE, U+25A0], [0xFF, U+00A0]
      IBM857,                         cp857 = 0x40u, csIBM857 = 0x40u,                                                                                                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+00C7], [0x81, U+00FC], [0x82, U+00E9], [0x83, U+00E2], [0x84, U+00E4], [0x85, U+00E0], [0x86, U+00E5], [0x87, U+00E7], [0x88, U+00EA], [0x89, U+00EB], [0x8A, U+00E8], [0x8B, U+00EF], [0x8C, U+00EE], [0x8D, U+0131], [0x8E, U+00C4], [0x8F, U+00C5], [0x90, U+00C9], [0x91, U+00E6], [0x92, U+00C6], [0x93, U+00F4], [0x94, U+00F6], [0x95, U+00F2], [0x96, U+00FB], [0x97, U+00F9], [0x98, U+0130], [0x99, U+00D6], [0x9A, U+00DC], [0x9B, U+00F8], [0x9C, U+00A3], [0x9D, U+00D8], [0x9E, U+015E], [0x9F, U+015F], [0xA0, U+00E1], [0xA1, U+00ED], [0xA2, U+00F3], [0xA3, U+00FA], [0xA4, U+00F1], [0xA5, U+00D1], [0xA6, U+011E], [0xA7, U+011F], [0xA8, U+00BF], [0xA9, U+00AE], [0xAA, U+00AC], [0xAB, U+00BD], [0xAC, U+00BC], [0xAD, U+00A1], [0xAE, U+00AB], [0xAF, U+00BB], [0xB0, U+2591], [0xB1, U+2592], [0xB2, U+2593], [0xB3, U+2502], [0xB4, U+2524], [0xB5, U+00C1], [0xB6, U+00C2], [0xB7, U+00C0], [0xB8, U+00A9], [0xB9, U+252B], [0xBA, U+2503], [0xBB, U+2513], [0xBC, U+251B], [0xBD, U+00A2], [0xBE, U+00A5], [0xBF, U+2510], [0xC0, U+2514], [0xC1, U+2534], [0xC2, U+252C], [0xC3, U+251C], [0xC4, U+2500], [0xC5, U+253C], [0xC6, U+00E3], [0xC7, U+00C3], [0xC8, U+2517], [0xC9, U+250F], [0xCA, U+253B], [0xCB, U+2533], [0xCC, U+2523], [0xCD, U+2501], [0xCE, U+254B], [0xCF, U+00A4], [0xD0, U+00BA], [0xD1, U+00AA], [0xD2, U+00CA], [0xD3, U+00CB], [0xD4, U+00C8], [0xD6, U+00CD], [0xD7, U+00CE], [0xD8, U+00CF], [0xD9, U+2518], [0xDA, U+250C], [0xDB, U+2588], [0xDC, U+2584], [0xDD, U+00A6], [0xDE, U+00CC], [0xDF, U+2580], [0xE0, U+00D3], [0xE1, U+00DF], [0xE2, U+00D4], [0xE3, U+00D2], [0xE4, U+00F5], [0xE5, U+00D5], [0xE6, U+03BC], [0xE8, U+00D7], [0xE9, U+00DA], [0xEA, U+00DB], [0xEB, U+00D9], [0xEC, U+00EC], [0xED, U+00FF], [0xEE, U+2014], [0xEF, U+00B4], [0xF0, U+00AD], [0xF1, U+00B1], [0xF3, U+00BE], [0xF4, U+00B6], [0xF5, U+00A7], [0xF6, U+00F7], [0xF7, U+02DB], [0xF8, U+00B0], [0xF9, U+00A8], [0xFA, U+02D9], [0xFB, U+00B9], [0xFC, U+00B3], [0xFD, U+00B2], [0xFE, U+25A0], [0xFF, U+00A0]
      IBM860,                         cp860 = 0x41u, csIBM860 = 0x41u,                                                                                                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+00C7], [0x81, U+00FC], [0x82, U+00E9], [0x83, U+00E2], [0x84, U+00E3], [0x85, U+00E0], [0x86, U+00C1], [0x87, U+00E7], [0x88, U+00EA], [0x89, U+00CA], [0x8A, U+00E8], [0x8B, U+00CE], [0x8C, U+00D4], [0x8D, U+00EC], [0x8E, U+00C3], [0x8F, U+00C2], [0x90, U+00C9], [0x91, U+00C0], [0x92, U+00C8], [0x93, U+00F4], [0x94, U+00F5], [0x95, U+00F2], [0x96, U+00DA], [0x97, U+00F9], [0x98, U+00CC], [0x99, U+00D5], [0x9A, U+00DC], [0x9B, U+00A2], [0x9C, U+00A3], [0x9D, U+00D9], [0x9E, U+20A7], [0x9F, U+00D2], [0xA0, U+00E1], [0xA1, U+00ED], [0xA2, U+00F3], [0xA3, U+00FA], [0xA4, U+00F1], [0xA5, U+00D1], [0xA6, U+00AA], [0xA7, U+00BA], [0xA8, U+00BF], [0xA9, U+00D3], [0xAA, U+00AC], [0xAB, U+00BD], [0xAC, U+00BC], [0xAD, U+00A1], [0xAE, U+00AB], [0xAF, U+00BB], [0xB0, U+2591], [0xB1, U+2592], [0xB2, U+2593], [0xB3, U+2502], [0xB4, U+2524], [0xB5, U+2525], [0xB6, U+2528], [0xB7, U+2512], [0xB8, U+2511], [0xB9, U+252B], [0xBA, U+2503], [0xBB, U+2513], [0xBC, U+251B], [0xBD, U+251A], [0xBE, U+2519], [0xBF, U+2510], [0xC0, U+2514], [0xC1, U+2534], [0xC2, U+252C], [0xC3, U+251C], [0xC4, U+2500], [0xC5, U+253C], [0xC6, U+251D], [0xC7, U+2520], [0xC8, U+2517], [0xC9, U+250F], [0xCA, U+253B], [0xCB, U+2533], [0xCC, U+2523], [0xCD, U+2501], [0xCE, U+254B], [0xCF, U+2537], [0xD0, U+2538], [0xD1, U+252F], [0xD2, U+2530], [0xD3, U+2516], [0xD4, U+2515], [0xD5, U+250D], [0xD6, U+250E], [0xD7, U+2542], [0xD8, U+253F], [0xD9, U+2518], [0xDA, U+250C], [0xDB, U+2588], [0xDC, U+2584], [0xDD, U+258C], [0xDE, U+2590], [0xDF, U+2580], [0xE0, U+03B1], [0xE1, U+03B2], [0xE2, U+0393], [0xE3, U+03C0], [0xE4, U+03A3], [0xE5, U+03C3], [0xE6, U+03BC], [0xE7, U+03C4], [0xE8, U+03A6], [0xE9, U+0398], [0xEA, U+03A9], [0xEB, U+03B4], [0xEC, U+221E], [0xED, U+2205], [0xEE, U+03B5], [0xEF, U+2229], [0xF0, U+2261], [0xF1, U+00B1], [0xF2, U+2265], [0xF3, U+2264], [0xF4, U+2320], [0xF5, U+2321], [0xF6, U+00F7], [0xF7, U+2248], [0xF8, U+2218], [0xF9, U+00B7], [0xFA, U+2219], [0xFB, U+221A], [0xFC, U+207F], [0xFD, U+00B2], [0xFE, U+25A0], [0xFF, U+00A0]
      IBM861,                         cp_is = 0x42u, cp861 = 0x42u, csIBM861 = 0x42u,                                                                                                                            // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+00C7], [0x81, U+00FC], [0x82, U+00E9], [0x83, U+00E2], [0x84, U+00E4], [0x85, U+00E0], [0x86, U+00E5], [0x87, U+00E7], [0x88, U+00EA], [0x89, U+00EB], [0x8A, U+00E8], [0x8B, U+00D0], [0x8C, U+00F0], [0x8D, U+00DE], [0x8E, U+00C4], [0x8F, U+00C5], [0x90, U+00C9], [0x91, U+00E6], [0x92, U+00C6], [0x93, U+00F4], [0x94, U+00F6], [0x95, U+00FE], [0x96, U+00FB], [0x97, U+00DD], [0x98, U+00FD], [0x99, U+00D6], [0x9A, U+00DC], [0x9B, U+00F8], [0x9C, U+00A3], [0x9D, U+00D8], [0x9E, U+20A7], [0x9F, U+00D2], [0xA0, U+00E1], [0xA1, U+00ED], [0xA2, U+00F3], [0xA3, U+00FA], [0xA4, U+00C1], [0xA5, U+00CD], [0xA6, U+00D3], [0xA7, U+00DA], [0xA8, U+00BF], [0xAA, U+00AC], [0xAB, U+00BD], [0xAC, U+00BC], [0xAD, U+00A1], [0xAE, U+00AB], [0xAF, U+00BB], [0xB0, U+2591], [0xB1, U+2592], [0xB2, U+2593], [0xB3, U+2502], [0xB4, U+2524], [0xB5, U+2525], [0xB6, U+2528], [0xB7, U+2512], [0xB8, U+2511], [0xB9, U+252B], [0xBA, U+2503], [0xBB, U+2513], [0xBC, U+251B], [0xBD, U+251A], [0xBE, U+2519], [0xBF, U+2510], [0xC0, U+2514], [0xC1, U+2534], [0xC2, U+252C], [0xC3, U+251C], [0xC4, U+2500], [0xC5, U+253C], [0xC6, U+251D], [0xC7, U+2520], [0xC8, U+2517], [0xC9, U+250F], [0xCA, U+253B], [0xCB, U+2533], [0xCC, U+2523], [0xCD, U+2501], [0xCE, U+254B], [0xCF, U+2537], [0xD0, U+2538], [0xD1, U+252F], [0xD2, U+2530], [0xD3, U+2516], [0xD4, U+2515], [0xD5, U+250D], [0xD6, U+250E], [0xD7, U+2542], [0xD8, U+253F], [0xD9, U+2518], [0xDA, U+250C], [0xDB, U+2588], [0xDC, U+2584], [0xDD, U+258C], [0xDE, U+2590], [0xDF, U+2580], [0xE0, U+03B1], [0xE1, U+03B2], [0xE2, U+0393], [0xE3, U+03C0], [0xE4, U+03A3], [0xE5, U+03C3], [0xE6, U+03BC], [0xE7, U+03C4], [0xE8, U+03A6], [0xE9, U+0398], [0xEA, U+03A9], [0xEB, U+03B4], [0xEC, U+221E], [0xED, U+2205], [0xEE, U+03B5], [0xEF, U+2229], [0xF0, U+2261], [0xF1, U+00B1], [0xF2, U+2265], [0xF3, U+2264], [0xF4, U+2320], [0xF5, U+2321], [0xF6, U+00F7], [0xF7, U+2248], [0xF8, U+2218], [0xF9, U+00B7], [0xFA, U+2219], [0xFB, U+221A], [0xFC, U+207F], [0xFD, U+00B2], [0xFE, U+25A0], [0xFF, U+00A0]
      IBM862,                         cp862 = 0x43u, csPC862LatinHebrew = 0x43u,                                                                                                                                 // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+05D0], [0x81, U+05D1], [0x82, U+05D2], [0x83, U+05D3], [0x84, U+05D4], [0x85, U+05D5], [0x86, U+05D6], [0x87, U+05D7], [0x88, U+05D8], [0x89, U+05D9], [0x8A, U+05DA], [0x8B, U+05DB], [0x8C, U+05DC], [0x8D, U+05DD], [0x8E, U+05DE], [0x8F, U+05DF], [0x90, U+05E0], [0x91, U+05E1], [0x92, U+05E2], [0x93, U+05E3], [0x94, U+05E4], [0x95, U+05E5], [0x96, U+05E6], [0x97, U+05E7], [0x98, U+05E8], [0x99, U+05E9], [0x9A, U+05EA], [0x9B, U+00A2], [0x9C, U+00A3], [0x9D, U+00D9], [0x9E, U+20A7], [0x9F, U+00D2], [0xA0, U+00E1], [0xA1, U+00ED], [0xA2, U+00F3], [0xA3, U+00FA], [0xA4, U+00F1], [0xA5, U+00D1], [0xA6, U+00AA], [0xA7, U+00BA], [0xA8, U+00BF], [0xAA, U+00AC], [0xAB, U+00BD], [0xAC, U+00BC], [0xAD, U+00A1], [0xAE, U+00AB], [0xAF, U+00BB], [0xB0, U+2591], [0xB1, U+2592], [0xB2, U+2593], [0xB3, U+2502], [0xB4, U+2524], [0xB5, U+2525], [0xB6, U+2528], [0xB7, U+2512], [0xB8, U+2511], [0xB9, U+252B], [0xBA, U+2503], [0xBB, U+2513], [0xBC, U+251B], [0xBD, U+251A], [0xBE, U+2519], [0xBF, U+2510], [0xC0, U+2514], [0xC1, U+2534], [0xC2, U+252C], [0xC3, U+251C], [0xC4, U+2500], [0xC5, U+253C], [0xC6, U+251D], [0xC7, U+2520], [0xC8, U+2517], [0xC9, U+250F], [0xCA, U+253B], [0xCB, U+2533], [0xCC, U+2523], [0xCD, U+2501], [0xCE, U+254B], [0xCF, U+2537], [0xD0, U+2538], [0xD1, U+252F], [0xD2, U+2530], [0xD3, U+2516], [0xD4, U+2515], [0xD5, U+250D], [0xD6, U+250E], [0xD7, U+2542], [0xD8, U+253F], [0xD9, U+2518], [0xDA, U+250C], [0xDB, U+2588], [0xDC, U+2584], [0xDD, U+258C], [0xDE, U+2590], [0xDF, U+2580], [0xE0, U+03B1], [0xE1, U+03B2], [0xE2, U+0393], [0xE3, U+03C0], [0xE4, U+03A3], [0xE5, U+03C3], [0xE6, U+03BC], [0xE7, U+03C4], [0xE8, U+03A6], [0xE9, U+0398], [0xEA, U+03A9], [0xEB, U+03B4], [0xEC, U+221E], [0xED, U+2205], [0xEE, U+03B5], [0xEF, U+2229], [0xF0, U+2261], [0xF1, U+00B1], [0xF2, U+2265], [0xF3, U+2264], [0xF4, U+2320], [0xF5, U+2321], [0xF6, U+00F7], [0xF7, U+2248], [0xF8, U+2218], [0xF9, U+00B7], [0xFA, U+2219], [0xFB, U+221A], [0xFC, U+207F], [0xFD, U+00B2], [0xFE, U+25A0], [0xFF, U+00A0]
      IBM863,                         cp863 = 0x44u, csIBM863 = 0x44u,                                                                                                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+00C7], [0x81, U+00FC], [0x82, U+00E9], [0x83, U+00E2], [0x84, U+00C2], [0x85, U+00E0], [0x86, U+00B6], [0x87, U+00E7], [0x88, U+00EA], [0x89, U+00EB], [0x8A, U+00E8], [0x8B, U+00EF], [0x8C, U+00EE], [0x8D, U+00EC], [0x8E, U+00C0], [0x8F, U+00A7], [0x90, U+00C9], [0x91, U+00C8], [0x92, U+00CA], [0x93, U+00F4], [0x94, U+00CB], [0x95, U+00CF], [0x96, U+00FB], [0x97, U+00F9], [0x98, U+00A4], [0x99, U+00D4], [0x9A, U+00DC], [0x9B, U+00A2], [0x9C, U+00A3], [0x9D, U+00D9], [0x9E, U+00DB], [0x9F, U+0192], [0xA0, U+00A6], [0xA1, U+00B4], [0xA2, U+00F3], [0xA3, U+00FA], [0xA4, U+00A8], [0xA5, U+00B8], [0xA6, U+00B3], [0xA7, U+00AF], [0xA8, U+00CE], [0xA9, U+2310], [0xAA, U+00AC], [0xAB, U+00BD], [0xAC, U+00BC], [0xAD, U+00BE], [0xAE, U+00AB], [0xAF, U+00BB], [0xB0, U+2591], [0xB1, U+2592], [0xB2, U+2593], [0xB3, U+2502], [0xB4, U+2524], [0xB5, U+2525], [0xB6, U+2528], [0xB7, U+2512], [0xB8, U+2511], [0xB9, U+252B], [0xBA, U+2503], [0xBB, U+2513], [0xBC, U+251B], [0xBD, U+251A], [0xBE, U+2519], [0xBF, U+2510], [0xC0, U+2514], [0xC1, U+2534], [0xC2, U+252C], [0xC3, U+251C], [0xC4, U+2500], [0xC5, U+253C], [0xC6, U+251D], [0xC7, U+2520], [0xC8, U+2517], [0xC9, U+250F], [0xCA, U+253B], [0xCB, U+2533], [0xCC, U+2523], [0xCD, U+2501], [0xCE, U+254B], [0xCF, U+2537], [0xD0, U+2538], [0xD1, U+252F], [0xD2, U+2530], [0xD3, U+2516], [0xD4, U+2515], [0xD5, U+250D], [0xD6, U+250E], [0xD7, U+2542], [0xD8, U+253F], [0xD9, U+2518], [0xDA, U+250C], [0xDB, U+2588], [0xDC, U+2584], [0xDD, U+258C], [0xDE, U+2590], [0xDF, U+2580], [0xE0, U+03B1], [0xE1, U+03B2], [0xE2, U+0393], [0xE3, U+03C0], [0xE4, U+03A3], [0xE5, U+03C3], [0xE6, U+03BC], [0xE7, U+03C4], [0xE8, U+03A6], [0xE9, U+0398], [0xEA, U+03A9], [0xEB, U+03B4], [0xEC, U+221E], [0xED, U+2205], [0xEE, U+03B5], [0xEF, U+2229], [0xF0, U+2261], [0xF1, U+00B1], [0xF2, U+2265], [0xF3, U+2264], [0xF4, U+2320], [0xF5, U+2321], [0xF6, U+00F7], [0xF7, U+2248], [0xF8, U+2218], [0xF9, U+00B7], [0xFA, U+2219], [0xFB, U+221A], [0xFC, U+207F], [0xFD, U+00B2], [0xFE, U+25A0], [0xFF, U+00A0]
      IBM865,                         cp865 = 0x45u, csIBM865 = 0x45u,                                                                                                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+00C7], [0x81, U+00FC], [0x82, U+00E9], [0x83, U+00E2], [0x84, U+00E4], [0x85, U+00E0], [0x86, U+00E5], [0x87, U+00E7], [0x88, U+00EA], [0x89, U+00EB], [0x8A, U+00E8], [0x8B, U+00EF], [0x8C, U+00EE], [0x8D, U+00EC], [0x8E, U+00C4], [0x8F, U+00C5], [0x90, U+00C9], [0x91, U+00E6], [0x92, U+00C6], [0x93, U+00F4], [0x94, U+00F6], [0x95, U+00F2], [0x96, U+00FB], [0x97, U+00F9], [0x98, U+00FF], [0x99, U+00D6], [0x9A, U+00DC], [0x9B, U+00F8], [0x9C, U+00A3], [0x9D, U+00D8], [0x9E, U+20A7], [0x9F, U+0192], [0xA0, U+00E1], [0xA1, U+00ED], [0xA2, U+00F3], [0xA3, U+00FA], [0xA4, U+00F1], [0xA5, U+00D1], [0xA6, U+00AA], [0xA7, U+00BA], [0xA8, U+00BF], [0xA9, U+2310], [0xAA, U+00AC], [0xAB, U+00BD], [0xAC, U+00BC], [0xAD, U+00A1], [0xAE, U+00AB], [0xAF, U+00BB], [0xB0, U+2591], [0xB1, U+2592], [0xB2, U+2593], [0xB3, U+2502], [0xB4, U+2524], [0xB5, U+2525], [0xB6, U+2528], [0xB7, U+2512], [0xB8, U+2511], [0xB9, U+252B], [0xBA, U+2503], [0xBB, U+2513], [0xBC, U+251B], [0xBD, U+251A], [0xBE, U+2519], [0xBF, U+2510], [0xC0, U+2514], [0xC1, U+2534], [0xC2, U+252C], [0xC3, U+251C], [0xC4, U+2500], [0xC5, U+253C], [0xC6, U+251D], [0xC7, U+2520], [0xC8, U+2517], [0xC9, U+250F], [0xCA, U+253B], [0xCB, U+2533], [0xCC, U+2523], [0xCD, U+2501], [0xCE, U+254B], [0xCF, U+2537], [0xD0, U+2538], [0xD1, U+252F], [0xD2, U+2530], [0xD3, U+2516], [0xD4, U+2515], [0xD5, U+250D], [0xD6, U+250E], [0xD7, U+2542], [0xD8, U+253F], [0xD9, U+2518], [0xDA, U+250C], [0xDB, U+2588], [0xDC, U+2584], [0xDD, U+258C], [0xDE, U+2590], [0xDF, U+2580], [0xE0, U+03B1], [0xE1, U+03B2], [0xE2, U+0393], [0xE3, U+03C0], [0xE4, U+03A3], [0xE5, U+03C3], [0xE6, U+03BC], [0xE7, U+03C4], [0xE8, U+03A6], [0xE9, U+0398], [0xEA, U+03A9], [0xEB, U+03B4], [0xEC, U+221E], [0xED, U+2205], [0xEE, U+03B5], [0xEF, U+2229], [0xF0, U+2261], [0xF1, U+00B1], [0xF2, U+2265], [0xF3, U+2264], [0xF4, U+2320], [0xF5, U+2321], [0xF6, U+00F7], [0xF7, U+2248], [0xF8, U+2218], [0xF9, U+00B7], [0xFA, U+2219], [0xFB, U+221A], [0xFC, U+207F], [0xFD, U+00B2], [0xFE, U+25A0], [0xFF, U+00A0]
      IBM870,                         CP870 = 0x46u, csIBM870 = 0x46u, ebcdic_cp_roece = 0x46u, ebcdic_cp_yu = 0x46u,                                                                                            // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x41, U+00A0], [0x43, U+00E4], [0x45, U+00E1], [0x46, U+0103], [0x47, U+010D], [0x48, U+00E7], [0x49, U+0107], [0x4A, U+005B], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+00E9], [0x53, U+00EB], [0x54, U+016F], [0x55, U+00ED], [0x57, U+013E], [0x58, U+013A], [0x59, U+00DF], [0x5A, U+005D], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x63, U+00C4], [0x64, U+02DD], [0x65, U+00C1], [0x67, U+010C], [0x68, U+00C7], [0x69, U+0106], [0x6A, U+007C], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+02C7], [0x71, U+00C9], [0x73, U+00CB], [0x74, U+016E], [0x75, U+00CD], [0x77, U+013D], [0x78, U+0139], [0x79, U+0060], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+0040], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+02D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+015B], [0x8B, U+0148], [0x8C, U+0111], [0x8D, U+00FD], [0x8E, U+0159], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+0142], [0x9B, U+0144], [0x9C, U+0161], [0x9D, U+00B8], [0x9E, U+02DB], [0x9F, U+00A4], [0xA0, U+0105], [0xA1, U+007E], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+015A], [0xAB, U+0147], [0xAC, U+0110], [0xAD, U+00DD], [0xAE, U+0158], [0xB0, U+00B7], [0xB1, U+0104], [0xB2, U+017C], [0xB4, U+017B], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+017E], [0xB8, U+017A], [0xB9, U+017D], [0xBA, U+0179], [0xBB, U+0143], [0xBC, U+0160], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+007B], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+00F6], [0xCD, U+0155], [0xCE, U+00F3], [0xCF, U+0151], [0xD0, U+007D], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+011A], [0xDB, U+0171], [0xDC, U+00FC], [0xDD, U+0165], [0xDE, U+00FA], [0xDF, U+011B], [0xE0, U+005C], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+010F], [0xEB, U+00D4], [0xEC, U+00D6], [0xED, U+0154], [0xEE, U+00D3], [0xEF, U+0150], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+010E], [0xFB, U+0170], [0xFC, U+00DC], [0xFD, U+0164], [0xFE, U+00DA], [0xFF, U+007F]
      IBM871,                         CP871 = 0x47u, csIBM871 = 0x47u, ebcdic_cp_is = 0x47u,                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x41, U+00A0], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x46, U+00E3], [0x47, U+00E5], [0x48, U+00E7], [0x49, U+00F1], [0x4A, U+00FE], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+00C6], [0x5B, U+0024], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+00D6], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x66, U+00C3], [0x67, U+00C5], [0x68, U+00C7], [0x69, U+00D1], [0x6A, U+00A6], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x70, U+00F8], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+00F0], [0x7A, U+003A], [0x7B, U+0023], [0x7C, U+00D0], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+0022], [0x80, U+00D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+00AB], [0x8B, U+00BB], [0x8C, U+0060], [0x8D, U+00FD], [0x8E, U+007B], [0x8F, U+00B1], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+00AA], [0x9B, U+00BA], [0x9C, U+007D], [0x9D, U+00B8], [0x9E, U+005D], [0x9F, U+00A4], [0xA0, U+00B5], [0xA1, U+00F6], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+00A1], [0xAB, U+00BF], [0xAC, U+0040], [0xAD, U+00DD], [0xAE, U+005B], [0xAF, U+00AE], [0xB0, U+00A2], [0xB1, U+00A3], [0xB2, U+00A5], [0xB3, U+00B7], [0xB4, U+00A9], [0xB5, U+00A7], [0xB6, U+00B6], [0xB7, U+00BC], [0xB8, U+00BD], [0xB9, U+00BE], [0xBA, U+00AC], [0xBB, U+007C], [0xBC, U+00AF], [0xBD, U+00A8], [0xBE, U+005C], [0xBF, U+00D7], [0xC0, U+00DE], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+007E], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+00F5], [0xD0, U+00E6], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+00B9], [0xDB, U+00FB], [0xDC, U+00FC], [0xDD, U+00F9], [0xDE, U+00FA], [0xDF, U+00FF], [0xE0, U+00B4], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+005E], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+00D5], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+00DC], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+007F]
      IBM891,                         cp891 = 0x48u, csIBM891 = 0x48u,                                                                                                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F]
      IBM903,                         cp903 = 0x49u, csIBM903 = 0x49u,                                                                                                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F]
      IBM904,                         cp904 = 0x4Au, csIBBM904 = 0x4Au,                                                                                                                                          // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+00A2], [0xFD, U+00AC], [0xFE, U+00A6]
      IBM905,                         CP905 = 0x4Bu, csIBM905 = 0x4Bu, ebcdic_cp_tr = 0x4Bu,                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x40, U+0020], [0x42, U+00E2], [0x43, U+00E4], [0x44, U+00E0], [0x45, U+00E1], [0x47, U+010B], [0x48, U+007B], [0x49, U+00F1], [0x4A, U+00C7], [0x4B, U+002E], [0x4C, U+003C], [0x4D, U+0028], [0x4E, U+002B], [0x4F, U+0021], [0x50, U+0026], [0x51, U+00E9], [0x52, U+00EA], [0x53, U+00EB], [0x54, U+00E8], [0x55, U+00ED], [0x56, U+00EE], [0x57, U+00EF], [0x58, U+00EC], [0x59, U+00DF], [0x5A, U+011E], [0x5B, U+0130], [0x5C, U+002A], [0x5D, U+0029], [0x5E, U+003B], [0x5F, U+005E], [0x60, U+002D], [0x61, U+002F], [0x62, U+00C2], [0x63, U+00C4], [0x64, U+00C0], [0x65, U+00C1], [0x67, U+010A], [0x68, U+005B], [0x69, U+00D1], [0x6A, U+015F], [0x6B, U+002C], [0x6C, U+0025], [0x6D, U+005F], [0x6E, U+003E], [0x6F, U+003F], [0x71, U+00C9], [0x72, U+00CA], [0x73, U+00CB], [0x74, U+00C8], [0x75, U+00CD], [0x76, U+00CE], [0x77, U+00CF], [0x78, U+00CC], [0x79, U+0131], [0x7A, U+003A], [0x7B, U+00D6], [0x7C, U+015E], [0x7D, U+0027], [0x7E, U+003D], [0x7F, U+00DC], [0x80, U+02D8], [0x81, U+0061], [0x82, U+0062], [0x83, U+0063], [0x84, U+0064], [0x85, U+0065], [0x86, U+0066], [0x87, U+0067], [0x88, U+0068], [0x89, U+0069], [0x8A, U+0127], [0x8B, U+0109], [0x8C, U+015D], [0x8D, U+016D], [0x8F, U+007C], [0x90, U+00B0], [0x91, U+006A], [0x92, U+006B], [0x93, U+006C], [0x94, U+006D], [0x95, U+006E], [0x96, U+006F], [0x97, U+0070], [0x98, U+0071], [0x99, U+0072], [0x9A, U+0125], [0x9B, U+011D], [0x9C, U+0135], [0x9D, U+02DB], [0x9F, U+00A4], [0xA0, U+00B5], [0xA1, U+00F6], [0xA2, U+0073], [0xA3, U+0074], [0xA4, U+0075], [0xA5, U+0076], [0xA6, U+0077], [0xA7, U+0078], [0xA8, U+0079], [0xA9, U+007A], [0xAA, U+0126], [0xAB, U+0108], [0xAC, U+015C], [0xAD, U+016C], [0xAF, U+0040], [0xB0, U+00B7], [0xB1, U+00A3], [0xB2, U+017C], [0xB3, U+007D], [0xB4, U+017B], [0xB5, U+00A7], [0xB6, U+005D], [0xB8, U+00BD], [0xB9, U+0024], [0xBA, U+0124], [0xBB, U+011C], [0xBC, U+0134], [0xBD, U+00A8], [0xBE, U+00B4], [0xBF, U+00D7], [0xC0, U+00E7], [0xC1, U+0041], [0xC2, U+0042], [0xC3, U+0043], [0xC4, U+0044], [0xC5, U+0045], [0xC6, U+0046], [0xC7, U+0047], [0xC8, U+0048], [0xC9, U+0049], [0xCA, U+00AD], [0xCB, U+00F4], [0xCC, U+007E], [0xCD, U+00F2], [0xCE, U+00F3], [0xCF, U+0121], [0xD0, U+011F], [0xD1, U+004A], [0xD2, U+004B], [0xD3, U+004C], [0xD4, U+004D], [0xD5, U+004E], [0xD6, U+004F], [0xD7, U+0050], [0xD8, U+0051], [0xD9, U+0052], [0xDA, U+0060], [0xDB, U+00FB], [0xDC, U+005C], [0xDD, U+00F9], [0xDE, U+00FA], [0xE0, U+00FC], [0xE1, U+00F7], [0xE2, U+0053], [0xE3, U+0054], [0xE4, U+0055], [0xE5, U+0056], [0xE6, U+0057], [0xE7, U+0058], [0xE8, U+0059], [0xE9, U+005A], [0xEA, U+00B2], [0xEB, U+00D4], [0xEC, U+0023], [0xED, U+00D2], [0xEE, U+00D3], [0xEF, U+0120], [0xF0, U+0030], [0xF1, U+0031], [0xF2, U+0032], [0xF3, U+0033], [0xF4, U+0034], [0xF5, U+0035], [0xF6, U+0036], [0xF7, U+0037], [0xF8, U+0038], [0xF9, U+0039], [0xFA, U+00B3], [0xFB, U+00DB], [0xFC, U+0022], [0xFD, U+00D9], [0xFE, U+00DA], [0xFF, U+007F]
      IEC_P27_1,                      csISO143IECP271 = 0x4Cu, iso_ir_143 = 0x4Cu,                                                                                                                               // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+02C7], [0xA1, U+2261], [0xA2, U+2227], [0xA3, U+2228], [0xA4, U+2229], [0xA5, U+222A], [0xA6, U+2282], [0xA7, U+2283], [0xA8, U+21D0], [0xA9, U+21D2], [0xAA, U+2234], [0xAB, U+2235], [0xAC, U+2208], [0xAD, U+220B], [0xAE, U+2286], [0xAF, U+2287], [0xB0, U+222B], [0xB1, U+222E], [0xB2, U+221E], [0xB3, U+2207], [0xB4, U+2202], [0xB5, U+223C], [0xB6, U+2248], [0xB7, U+2243], [0xB8, U+2245], [0xB9, U+2264], [0xBA, U+2260], [0xBB, U+2265], [0xBC, U+2194], [0xBD, U+00AC], [0xBE, U+2200], [0xBF, U+2203], [0xC0, U+05D0], [0xC1, U+25A1], [0xC2, U+2225], [0xC3, U+0393], [0xC4, U+0394], [0xC5, U+22A5], [0xC6, U+2220], [0xC7, U+221F], [0xC8, U+0398], [0xC9, U+2329], [0xCA, U+232A], [0xCB, U+039B], [0xCC, U+2032], [0xCD, U+2033], [0xCE, U+039E], [0xCF, U+2213], [0xD0, U+03A0], [0xD1, U+00B2], [0xD2, U+03A3], [0xD3, U+00D7], [0xD4, U+00B3], [0xD5, U+03A5], [0xD6, U+03A6], [0xD7, U+00B7], [0xD8, U+03A8], [0xD9, U+03A9], [0xDA, U+2205], [0xDB, U+E025], [0xDC, U+221A], [0xDD, U+E01D], [0xDE, U+221D], [0xDF, U+00B1], [0xE0, U+00B0], [0xE1, U+03B1], [0xE2, U+03B2], [0xE3, U+03B3], [0xE4, U+03B4], [0xE5, U+03B5], [0xE6, U+03B6], [0xE7, U+03B7], [0xE8, U+03B8], [0xE9, U+03B9], [0xEA, U+03BA], [0xEB, U+03BB], [0xEC, U+03BC], [0xED, U+03BD], [0xEE, U+03BE], [0xEF, U+2030], [0xF0, U+03C0], [0xF1, U+03C1], [0xF2, U+03C3], [0xF3, U+00F7], [0xF4, U+03C4], [0xF5, U+03C5], [0xF6, U+03C6], [0xF7, U+03C7], [0xF8, U+03C8], [0xF9, U+03C9], [0xFA, U+2020], [0xFB, U+2190], [0xFC, U+2191], [0xFD, U+2192], [0xFE, U+2193], [0xFF, U+00AF]
      INIS,                           csISO49INIS = 0x4Du, iso_ir_49 = 0x4Du,                                                                                                                                    // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x24, U+0024], [0x25, U+0025], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5D, U+005D], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7C, U+007C], [0x7F, U+007F]
      INVARIANT,                      csINVARIANT = 0x4Eu,                                                                                                                                                       // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5F, U+005F], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7F, U+007F]
      ISO_10367_box,                  csISO10367Box = 0x4Fu, iso_ir_155 = 0x4Fu,                                                                                                                                 // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xC0, U+2503], [0xC1, U+2501], [0xC2, U+250F], [0xC3, U+2513], [0xC4, U+2517], [0xC5, U+251B], [0xC6, U+2523], [0xC7, U+252B], [0xC8, U+2533], [0xC9, U+253B], [0xCA, U+254B], [0xCB, U+E003], [0xCC, U+2584], [0xCD, U+2588], [0xCE, U+25AA], [0xD0, U+2502], [0xD1, U+2500], [0xD2, U+250C], [0xD3, U+2510], [0xD4, U+2514], [0xD5, U+2518], [0xD6, U+251C], [0xD7, U+2524], [0xD8, U+252C], [0xD9, U+2534], [0xDA, U+253C], [0xDB, U+2591], [0xDC, U+2592], [0xDD, U+2593]
      ISO_2033_1983,                  csISO2033 = 0x50u, e13b = 0x50u, iso_ir_98 = 0x50u,                                                                                                                        // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+2446], [0x3B, U+2447], [0x3C, U+2448], [0x3D, U+2449], [0x7F, U+007F]
      ISO_646_basic_1983,             csISO646basic1983 = 0x51u, ref = 0x51u,                                                                                                                                    // --> [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5F, U+005F], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A]
      ISO_646_irv_1983,               csISO2IntlRefVersion = 0x52u, irv = 0x52u, iso_ir_2 = 0x52u,                                                                                                               // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+00A4], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+00AF], [0x7F, U+007F]
      ISO_6937_2_25,                  csISO6937Add = 0x53u, iso_ir_152 = 0x53u,                                                                                                                                  // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+00A4], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xAA, U+201C], [0xAC, U+2190], [0xAD, U+2191], [0xAE, U+2192], [0xAF, U+2193], [0xBA, U+201D], [0xD4, U+2122], [0xD5, U+2669], [0xDC, U+215B], [0xDD, U+215C], [0xDE, U+215D], [0xDF, U+215E], [0xE0, U+2126], [0xE6, U+0132], [0xE7, U+013F], [0xEA, U+0152], [0xEC, U+0174], [0xED, U+0176], [0xEE, U+0178], [0xEF, U+0149], [0xF6, U+0133], [0xF7, U+0140], [0xFA, U+0153], [0xFC, U+0175], [0xFD, U+0177]
      ISO_8859_10,                    csISOLatin6 = 0x54u, iso_ir_157 = 0x54u, ISO_8859_10_1992 = 0x54u, l6 = 0x54u, latin6 = 0x54u,                                                                             // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+0104], [0xA2, U+0112], [0xA3, U+0122], [0xA4, U+012A], [0xA5, U+0128], [0xA6, U+0136], [0xA7, U+00A7], [0xA8, U+013B], [0xA9, U+0110], [0xAA, U+0160], [0xAB, U+0166], [0xAC, U+017D], [0xAD, U+00AD], [0xAE, U+016A], [0xAF, U+014A], [0xB0, U+00B0], [0xB1, U+0105], [0xB2, U+0113], [0xB3, U+0123], [0xB4, U+012B], [0xB5, U+0129], [0xB6, U+0137], [0xB7, U+00B7], [0xB8, U+013C], [0xB9, U+0111], [0xBA, U+0161], [0xBB, U+0167], [0xBC, U+017E], [0xBD, U+2015], [0xBE, U+016B], [0xBF, U+014B], [0xC0, U+0100], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+00C3], [0xC4, U+00C4], [0xC5, U+00C5], [0xC6, U+00C6], [0xC7, U+012E], [0xC8, U+010C], [0xC9, U+00C9], [0xCA, U+0118], [0xCB, U+00CB], [0xCC, U+0116], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+00CF], [0xD0, U+00D0], [0xD1, U+0145], [0xD2, U+014C], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+00D5], [0xD6, U+00D6], [0xD7, U+0168], [0xD8, U+00D8], [0xD9, U+0172], [0xDA, U+00DA], [0xDB, U+00DB], [0xDC, U+00DC], [0xDD, U+00DD], [0xDE, U+00DE], [0xDF, U+00DF], [0xE0, U+0101], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+00E3], [0xE4, U+00E4], [0xE5, U+00E5], [0xE6, U+00E6], [0xE7, U+012F], [0xE8, U+010D], [0xE9, U+00E9], [0xEA, U+0119], [0xEB, U+00EB], [0xEC, U+0117], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+00EF], [0xF0, U+00F0], [0xF1, U+0146], [0xF2, U+014D], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+00F5], [0xF6, U+00F6], [0xF7, U+0169], [0xF8, U+00F8], [0xF9, U+0173], [0xFA, U+00FA], [0xFB, U+00FB], [0xFC, U+00FC], [0xFD, U+00FD], [0xFE, U+00FE], [0xFF, U+0138]
      ISO_8859_13,                    csISO885913 = 0x55u,                                                                                                                                                       // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+201D], [0xA2, U+00A2], [0xA3, U+00A3], [0xA4, U+00A4], [0xA5, U+201E], [0xA6, U+00A6], [0xA7, U+00A7], [0xA8, U+00D8], [0xA9, U+00A9], [0xAA, U+0156], [0xAB, U+00AB], [0xAC, U+00AC], [0xAD, U+00AD], [0xAE, U+00AE], [0xAF, U+00C6], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+00B2], [0xB3, U+00B3], [0xB4, U+201C], [0xB5, U+00B5], [0xB6, U+00B6], [0xB7, U+00B7], [0xB8, U+00F8], [0xB9, U+00B9], [0xBA, U+0157], [0xBB, U+00BB], [0xBC, U+00BC], [0xBD, U+00BD], [0xBE, U+00BE], [0xBF, U+00E6], [0xC0, U+0104], [0xC1, U+012E], [0xC2, U+0100], [0xC3, U+0106], [0xC4, U+00C4], [0xC5, U+00C5], [0xC6, U+0118], [0xC7, U+0112], [0xC8, U+010C], [0xC9, U+00C9], [0xCA, U+0179], [0xCB, U+0116], [0xCC, U+0122], [0xCD, U+0136], [0xCE, U+012A], [0xCF, U+013B], [0xD0, U+0160], [0xD1, U+0143], [0xD2, U+0145], [0xD3, U+00D3], [0xD4, U+014C], [0xD5, U+00D5], [0xD6, U+00D6], [0xD7, U+00D7], [0xD8, U+0172], [0xD9, U+0141], [0xDA, U+015A], [0xDB, U+016A], [0xDC, U+00DC], [0xDD, U+017B], [0xDE, U+017D], [0xDF, U+00DF], [0xE0, U+0105], [0xE1, U+012F], [0xE2, U+0101], [0xE3, U+0107], [0xE4, U+00E4], [0xE5, U+00E5], [0xE6, U+0119], [0xE7, U+0113], [0xE8, U+010D], [0xE9, U+00E9], [0xEA, U+017A], [0xEB, U+0117], [0xEC, U+0123], [0xED, U+0137], [0xEE, U+012B], [0xEF, U+013C], [0xF0, U+0161], [0xF1, U+0144], [0xF2, U+0146], [0xF3, U+00F3], [0xF4, U+014D], [0xF5, U+00F5], [0xF6, U+00F6], [0xF7, U+00F7], [0xF8, U+0173], [0xF9, U+0142], [0xFA, U+015B], [0xFB, U+016B], [0xFC, U+00FC], [0xFD, U+017C], [0xFE, U+017E], [0xFF, U+2019]
      ISO_8859_14,                    csISO885914 = 0x56u, iso_celtic = 0x56u, iso_ir_199 = 0x56u, ISO_8859_14_1998 = 0x56u, l8 = 0x56u, latin8 = 0x56u,                                                         // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+1E02], [0xA2, U+1E03], [0xA3, U+00A3], [0xA4, U+010A], [0xA5, U+010B], [0xA6, U+1E0A], [0xA7, U+00A7], [0xA8, U+1E80], [0xA9, U+00A9], [0xAA, U+1E82], [0xAB, U+1E0B], [0xAC, U+1EF2], [0xAD, U+00AD], [0xAE, U+00AE], [0xAF, U+0178], [0xB0, U+1E1E], [0xB1, U+1E1F], [0xB2, U+0120], [0xB3, U+0121], [0xB4, U+1E40], [0xB5, U+1E41], [0xB6, U+00B6], [0xB7, U+1E56], [0xB8, U+1E81], [0xB9, U+1E57], [0xBA, U+1E83], [0xBB, U+1E60], [0xBC, U+1EF3], [0xBD, U+1E84], [0xBE, U+1E85], [0xBF, U+1E61], [0xC0, U+00C0], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+00C3], [0xC4, U+00C4], [0xC5, U+00C5], [0xC6, U+00C6], [0xC7, U+00C7], [0xC8, U+00C8], [0xC9, U+00C9], [0xCA, U+00CA], [0xCB, U+00CB], [0xCC, U+00CC], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+00CF], [0xD0, U+0174], [0xD1, U+00D1], [0xD2, U+00D2], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+00D5], [0xD6, U+00D6], [0xD7, U+1E6A], [0xD8, U+00D8], [0xD9, U+00D9], [0xDA, U+00DA], [0xDB, U+00DB], [0xDC, U+00DC], [0xDD, U+00DD], [0xDE, U+0176], [0xDF, U+00DF], [0xE0, U+00E0], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+00E3], [0xE4, U+00E4], [0xE5, U+00E5], [0xE6, U+00E6], [0xE7, U+00E7], [0xE8, U+00E8], [0xE9, U+00E9], [0xEA, U+00EA], [0xEB, U+00EB], [0xEC, U+00EC], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+00EF], [0xF0, U+0175], [0xF1, U+00F1], [0xF2, U+00F2], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+00F5], [0xF6, U+00F6], [0xF7, U+1E6B], [0xF8, U+00F8], [0xF9, U+00F9], [0xFA, U+00FA], [0xFB, U+00FB], [0xFC, U+00FC], [0xFD, U+00FD], [0xFE, U+0177], [0xFF, U+00FF]
      ISO_8859_15,                    csISO885915 = 0x57u, Latin_9 = 0x57u,                                                                                                                                      // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+00A1], [0xA2, U+00A2], [0xA3, U+00A3], [0xA4, U+20AC], [0xA5, U+00A5], [0xA6, U+0160], [0xA7, U+00A7], [0xA8, U+0161], [0xA9, U+00A9], [0xAA, U+00AA], [0xAB, U+00AB], [0xAC, U+00AC], [0xAD, U+00AD], [0xAE, U+00AE], [0xAF, U+00AF], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+00B2], [0xB3, U+00B3], [0xB4, U+017D], [0xB5, U+00B5], [0xB6, U+00B6], [0xB7, U+00B7], [0xB8, U+017E], [0xB9, U+00B9], [0xBA, U+00BA], [0xBB, U+00BB], [0xBC, U+0152], [0xBD, U+0153], [0xBE, U+0178], [0xBF, U+00BF], [0xC0, U+00C0], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+00C3], [0xC4, U+00C4], [0xC5, U+00C5], [0xC6, U+00C6], [0xC7, U+00C7], [0xC8, U+00C8], [0xC9, U+00C9], [0xCA, U+00CA], [0xCB, U+00CB], [0xCC, U+00CC], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+00CF], [0xD0, U+00D0], [0xD1, U+00D1], [0xD2, U+00D2], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+00D5], [0xD6, U+00D6], [0xD7, U+00D7], [0xD8, U+00D8], [0xD9, U+00D9], [0xDA, U+00DA], [0xDB, U+00DB], [0xDC, U+00DC], [0xDD, U+00DD], [0xDE, U+00DE], [0xDF, U+00DF], [0xE0, U+00E0], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+00E3], [0xE4, U+00E4], [0xE5, U+00E5], [0xE6, U+00E6], [0xE7, U+00E7], [0xE8, U+00E8], [0xE9, U+00E9], [0xEA, U+00EA], [0xEB, U+00EB], [0xEC, U+00EC], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+00EF], [0xF0, U+00F0], [0xF1, U+00F1], [0xF2, U+00F2], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+00F5], [0xF6, U+00F6], [0xF7, U+00F7], [0xF8, U+00F8], [0xF9, U+00F9], [0xFA, U+00FA], [0xFB, U+00FB], [0xFC, U+00FC], [0xFD, U+00FD], [0xFE, U+00FE], [0xFF, U+00FF]
      ISO_8859_16,                    csISO885916 = 0x58u, iso_ir_226 = 0x58u, ISO_8859_16_2001 = 0x58u, l10 = 0x58u, latin10 = 0x58u,                                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+0104], [0xA2, U+0105], [0xA3, U+0141], [0xA4, U+20AC], [0xA5, U+201E], [0xA6, U+0160], [0xA7, U+00A7], [0xA8, U+0161], [0xA9, U+00A9], [0xAA, U+0218], [0xAB, U+00AB], [0xAC, U+0179], [0xAD, U+00AD], [0xAE, U+017A], [0xAF, U+017B], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+010C], [0xB3, U+0142], [0xB4, U+017D], [0xB5, U+201D], [0xB6, U+00B6], [0xB7, U+00B7], [0xB8, U+017E], [0xB9, U+010D], [0xBA, U+0219], [0xBB, U+00BB], [0xBC, U+0152], [0xBD, U+0153], [0xBE, U+0178], [0xBF, U+017C], [0xC0, U+00C0], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+0102], [0xC4, U+00C4], [0xC5, U+0106], [0xC6, U+00C6], [0xC7, U+00C7], [0xC8, U+00C8], [0xC9, U+00C9], [0xCA, U+00CA], [0xCB, U+00CB], [0xCC, U+00CC], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+00CF], [0xD0, U+0110], [0xD1, U+0143], [0xD2, U+00D2], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+0150], [0xD6, U+00D6], [0xD7, U+015A], [0xD8, U+0170], [0xD9, U+00D9], [0xDA, U+00DA], [0xDB, U+00DB], [0xDC, U+00DC], [0xDD, U+0118], [0xDE, U+021A], [0xDF, U+00DF], [0xE0, U+00E0], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+0103], [0xE4, U+00E4], [0xE5, U+0107], [0xE6, U+00E6], [0xE7, U+00E7], [0xE8, U+00E8], [0xE9, U+00E9], [0xEA, U+00EA], [0xEB, U+00EB], [0xEC, U+00EC], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+00EF], [0xF0, U+0111], [0xF1, U+0144], [0xF2, U+00F2], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+0151], [0xF6, U+00F6], [0xF7, U+015B], [0xF8, U+0171], [0xF9, U+00F9], [0xFA, U+00FA], [0xFB, U+00FB], [0xFC, U+00FC], [0xFD, U+0119], [0xFE, U+021B], [0xFF, U+00FF]
      ISO_8859_1_1987,                CP819 = 0x59u, csISOLatin1 = 0x59u, IBM819 = 0x59u, ISO_8859_1 = 0x59u, iso_ir_100 = 0x59u, l1 = 0x59u, latin1 = 0x59u,                                                    // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+00A1], [0xA2, U+00A2], [0xA3, U+00A3], [0xA4, U+00A4], [0xA5, U+00A5], [0xA6, U+00A6], [0xA7, U+00A7], [0xA8, U+00A8], [0xA9, U+00A9], [0xAA, U+00AA], [0xAB, U+00AB], [0xAC, U+00AC], [0xAD, U+00AD], [0xAE, U+00AE], [0xAF, U+00AF], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+00B2], [0xB3, U+00B3], [0xB4, U+00B4], [0xB5, U+00B5], [0xB6, U+00B6], [0xB7, U+00B7], [0xB8, U+00B8], [0xB9, U+00B9], [0xBA, U+00BA], [0xBB, U+00BB], [0xBC, U+00BC], [0xBD, U+00BD], [0xBE, U+00BE], [0xBF, U+00BF], [0xC0, U+00C0], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+00C3], [0xC4, U+00C4], [0xC5, U+00C5], [0xC6, U+00C6], [0xC7, U+00C7], [0xC8, U+00C8], [0xC9, U+00C9], [0xCA, U+00CA], [0xCB, U+00CB], [0xCC, U+00CC], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+00CF], [0xD0, U+00D0], [0xD1, U+00D1], [0xD2, U+00D2], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+00D5], [0xD6, U+00D6], [0xD7, U+00D7], [0xD8, U+00D8], [0xD9, U+00D9], [0xDA, U+00DA], [0xDB, U+00DB], [0xDC, U+00DC], [0xDD, U+00DD], [0xDE, U+00DE], [0xDF, U+00DF], [0xE0, U+00E0], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+00E3], [0xE4, U+00E4], [0xE5, U+00E5], [0xE6, U+00E6], [0xE7, U+00E7], [0xE8, U+00E8], [0xE9, U+00E9], [0xEA, U+00EA], [0xEB, U+00EB], [0xEC, U+00EC], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+00EF], [0xF0, U+00F0], [0xF1, U+00F1], [0xF2, U+00F2], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+00F5], [0xF6, U+00F6], [0xF7, U+00F7], [0xF8, U+00F8], [0xF9, U+00F9], [0xFA, U+00FA], [0xFB, U+00FB], [0xFC, U+00FC], [0xFD, U+00FD], [0xFE, U+00FE], [0xFF, U+00FF]
      ISO_8859_1_Windows_3_1_Latin_1, csWindows31Latin1 = 0x5Au,                                                                                                                                                 // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0xA0, U+00A0], [0xA1, U+02C7], [0xA2, U+02D8], [0xA3, U+0141], [0xA4, U+00A4], [0xA5, U+0104], [0xA6, U+00A6], [0xA7, U+00A7], [0xA8, U+00A8], [0xA9, U+00A9], [0xAA, U+015E], [0xAB, U+00AB], [0xAC, U+00AC], [0xAD, U+00AD], [0xAE, U+00AE], [0xAF, U+017B], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+02DB], [0xB3, U+0142], [0xB4, U+00B4], [0xB5, U+00B5], [0xB6, U+00B6], [0xB7, U+00B7], [0xB8, U+00B8], [0xB9, U+0105], [0xBA, U+015F], [0xBB, U+00BB], [0xBC, U+013D], [0xBD, U+02DD], [0xBE, U+013E], [0xBF, U+017C], [0xC0, U+0154], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+0102], [0xC4, U+00C4], [0xC5, U+0139], [0xC6, U+0106], [0xC7, U+00C7], [0xC8, U+010C], [0xC9, U+00C9], [0xCA, U+0118], [0xCB, U+00CB], [0xCC, U+011A], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+010E], [0xD0, U+0110], [0xD1, U+0143], [0xD2, U+0147], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+0150], [0xD6, U+00D6], [0xD7, U+00D7], [0xD8, U+0158], [0xD9, U+016E], [0xDA, U+00DA], [0xDB, U+0170], [0xDC, U+00DC], [0xDD, U+00DD], [0xDE, U+0162], [0xDF, U+00DF], [0xE0, U+0155], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+0103], [0xE4, U+00E4], [0xE5, U+013A], [0xE6, U+0107], [0xE7, U+00E7], [0xE8, U+010D], [0xE9, U+00E9], [0xEA, U+0119], [0xEB, U+00EB], [0xEC, U+011B], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+010F], [0xF0, U+0111], [0xF1, U+0144], [0xF2, U+0148], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+0151], [0xF6, U+00F6], [0xF7, U+00F7], [0xF8, U+0159], [0xF9, U+016F], [0xFA, U+00FA], [0xFB, U+0171], [0xFC, U+00FC], [0xFD, U+00FD], [0xFE, U+0163], [0xFF, U+02D9]
      ISO_8859_2_1987,                csISOLatin2 = 0x5Bu, ISO_8859_2 = 0x5Bu, iso_ir_101 = 0x5Bu, l2 = 0x5Bu, latin2 = 0x5Bu,                                                                                   // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+0104], [0xA2, U+02D8], [0xA3, U+0141], [0xA4, U+00A4], [0xA5, U+013D], [0xA6, U+015A], [0xA7, U+00A7], [0xA8, U+00A8], [0xA9, U+0160], [0xAA, U+015E], [0xAB, U+0164], [0xAC, U+0179], [0xAD, U+00AD], [0xAE, U+017D], [0xAF, U+017B], [0xB0, U+00B0], [0xB1, U+0105], [0xB2, U+02DB], [0xB3, U+0142], [0xB4, U+00B4], [0xB5, U+013E], [0xB6, U+015B], [0xB7, U+02C7], [0xB8, U+00B8], [0xB9, U+0161], [0xBA, U+015F], [0xBB, U+0165], [0xBC, U+017A], [0xBD, U+02DD], [0xBE, U+017E], [0xBF, U+017C], [0xC0, U+0154], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+0102], [0xC4, U+00C4], [0xC5, U+0139], [0xC6, U+0106], [0xC7, U+00C7], [0xC8, U+010C], [0xC9, U+00C9], [0xCA, U+0118], [0xCB, U+00CB], [0xCC, U+011A], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+010E], [0xD0, U+0110], [0xD1, U+0143], [0xD2, U+0147], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+0150], [0xD6, U+00D6], [0xD7, U+00D7], [0xD8, U+0158], [0xD9, U+016E], [0xDA, U+00DA], [0xDB, U+0170], [0xDC, U+00DC], [0xDD, U+00DD], [0xDE, U+0162], [0xDF, U+00DF], [0xE0, U+0155], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+0103], [0xE4, U+00E4], [0xE5, U+013A], [0xE6, U+0107], [0xE7, U+00E7], [0xE8, U+010D], [0xE9, U+00E9], [0xEA, U+0119], [0xEB, U+00EB], [0xEC, U+011B], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+010F], [0xF0, U+0111], [0xF1, U+0144], [0xF2, U+0148], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+0151], [0xF6, U+00F6], [0xF7, U+00F7], [0xF8, U+0159], [0xF9, U+016F], [0xFA, U+00FA], [0xFB, U+0171], [0xFC, U+00FC], [0xFD, U+00FD], [0xFE, U+0163], [0xFF, U+02D9]
      ISO_8859_3_1988,                csISOLatin3 = 0x5Cu, ISO_8859_3 = 0x5Cu, iso_ir_109 = 0x5Cu, l3 = 0x5Cu, latin3 = 0x5Cu,                                                                                   // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+0126], [0xA2, U+02D8], [0xA3, U+00A3], [0xA4, U+00A4], [0xA6, U+0124], [0xA7, U+00A7], [0xA8, U+00A8], [0xA9, U+0130], [0xAA, U+015E], [0xAB, U+011E], [0xAC, U+0134], [0xAD, U+00AD], [0xAF, U+017B], [0xB0, U+00B0], [0xB1, U+0127], [0xB2, U+00B2], [0xB3, U+00B3], [0xB4, U+00B4], [0xB5, U+00B5], [0xB6, U+0125], [0xB7, U+00B7], [0xB8, U+00B8], [0xB9, U+0131], [0xBA, U+015F], [0xBB, U+011F], [0xBC, U+0135], [0xBD, U+00BD], [0xBF, U+017C], [0xC0, U+00C0], [0xC1, U+00C1], [0xC2, U+00C2], [0xC4, U+00C4], [0xC5, U+010A], [0xC6, U+0108], [0xC7, U+00C7], [0xC8, U+00C8], [0xC9, U+00C9], [0xCA, U+00CA], [0xCB, U+00CB], [0xCC, U+00CC], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+00CF], [0xD1, U+00D1], [0xD2, U+00D2], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+0120], [0xD6, U+00D6], [0xD7, U+00D7], [0xD8, U+011C], [0xD9, U+00D9], [0xDA, U+00DA], [0xDB, U+00DB], [0xDC, U+00DC], [0xDD, U+016C], [0xDE, U+015C], [0xDF, U+00DF], [0xE0, U+00E0], [0xE1, U+00E1], [0xE2, U+00E2], [0xE4, U+00E4], [0xE5, U+010B], [0xE6, U+0109], [0xE7, U+00E7], [0xE8, U+00E8], [0xE9, U+00E9], [0xEA, U+00EA], [0xEB, U+00EB], [0xEC, U+00EC], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+00EF], [0xF1, U+00F1], [0xF2, U+00F2], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+0121], [0xF6, U+00F6], [0xF7, U+00F7], [0xF8, U+011D], [0xF9, U+00F9], [0xFA, U+00FA], [0xFB, U+00FB], [0xFC, U+00FC], [0xFD, U+016D], [0xFE, U+015D], [0xFF, U+02D9]
      ISO_8859_4_1988,                csISOLatin4 = 0x5Du, ISO_8859_4 = 0x5Du, iso_ir_110 = 0x5Du, l4 = 0x5Du, latin4 = 0x5Du,                                                                                   // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+0104], [0xA2, U+0138], [0xA3, U+0156], [0xA4, U+00A4], [0xA5, U+0128], [0xA6, U+013B], [0xA7, U+00A7], [0xA8, U+00A8], [0xA9, U+0160], [0xAA, U+0112], [0xAB, U+0122], [0xAC, U+0166], [0xAD, U+00AD], [0xAE, U+017D], [0xAF, U+00AF], [0xB0, U+00B0], [0xB1, U+0105], [0xB2, U+02DB], [0xB3, U+0157], [0xB4, U+00B4], [0xB5, U+0129], [0xB6, U+013C], [0xB7, U+02C7], [0xB8, U+00B8], [0xB9, U+0161], [0xBA, U+0113], [0xBB, U+0123], [0xBC, U+0167], [0xBD, U+014A], [0xBE, U+017E], [0xBF, U+014B], [0xC0, U+0100], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+00C3], [0xC4, U+00C4], [0xC5, U+00C5], [0xC6, U+00C6], [0xC7, U+012E], [0xC8, U+010C], [0xC9, U+00C9], [0xCA, U+0118], [0xCB, U+00CB], [0xCC, U+0116], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+012A], [0xD0, U+0110], [0xD1, U+0145], [0xD2, U+014C], [0xD3, U+0136], [0xD4, U+00D4], [0xD5, U+00D5], [0xD6, U+00D6], [0xD7, U+00D7], [0xD8, U+00D8], [0xD9, U+0172], [0xDA, U+00DA], [0xDB, U+00DB], [0xDC, U+00DC], [0xDD, U+0168], [0xDE, U+016A], [0xDF, U+00DF], [0xE0, U+0101], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+00E3], [0xE4, U+00E4], [0xE5, U+00E5], [0xE6, U+00E6], [0xE7, U+012F], [0xE8, U+010D], [0xE9, U+00E9], [0xEA, U+0119], [0xEB, U+00EB], [0xEC, U+0117], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+012B], [0xF0, U+0111], [0xF1, U+0146], [0xF2, U+014D], [0xF3, U+0137], [0xF4, U+00F4], [0xF5, U+00F5], [0xF6, U+00F6], [0xF7, U+00F7], [0xF8, U+00F8], [0xF9, U+0173], [0xFA, U+00FA], [0xFB, U+00FB], [0xFC, U+00FC], [0xFD, U+0169], [0xFE, U+016B], [0xFF, U+02D9]
      ISO_8859_5_1988,                csISOLatinCyrillic = 0x5Eu, cyrillic = 0x5Eu, ISO_8859_5 = 0x5Eu, iso_ir_144 = 0x5Eu,                                                                                      // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+0401], [0xA2, U+0402], [0xA3, U+0403], [0xA4, U+0404], [0xA5, U+0405], [0xA6, U+0406], [0xA7, U+0407], [0xA8, U+0408], [0xA9, U+0409], [0xAA, U+040A], [0xAB, U+040B], [0xAC, U+040C], [0xAD, U+00AD], [0xAE, U+040E], [0xAF, U+040F], [0xB0, U+0410], [0xB1, U+0411], [0xB2, U+0412], [0xB3, U+0413], [0xB4, U+0414], [0xB5, U+0415], [0xB6, U+0416], [0xB7, U+0417], [0xB8, U+0418], [0xB9, U+0419], [0xBA, U+041A], [0xBB, U+041B], [0xBC, U+041C], [0xBD, U+041D], [0xBE, U+041E], [0xBF, U+041F], [0xC0, U+0420], [0xC1, U+0421], [0xC2, U+0422], [0xC3, U+0423], [0xC4, U+0424], [0xC5, U+0425], [0xC6, U+0426], [0xC7, U+0427], [0xC8, U+0428], [0xC9, U+0429], [0xCA, U+042A], [0xCB, U+042B], [0xCC, U+042C], [0xCD, U+042D], [0xCE, U+042E], [0xCF, U+042F], [0xD0, U+0430], [0xD1, U+0431], [0xD2, U+0432], [0xD3, U+0433], [0xD4, U+0434], [0xD5, U+0435], [0xD6, U+0436], [0xD7, U+0437], [0xD8, U+0438], [0xD9, U+0439], [0xDA, U+043A], [0xDB, U+043B], [0xDC, U+043C], [0xDD, U+043D], [0xDE, U+043E], [0xDF, U+043F], [0xE0, U+0440], [0xE1, U+0441], [0xE2, U+0442], [0xE3, U+0443], [0xE4, U+0444], [0xE5, U+0445], [0xE6, U+0446], [0xE7, U+0447], [0xE8, U+0448], [0xE9, U+0449], [0xEA, U+044A], [0xEB, U+044B], [0xEC, U+044C], [0xED, U+044D], [0xEE, U+044E], [0xEF, U+044F], [0xF0, U+2116], [0xF1, U+0451], [0xF2, U+0452], [0xF3, U+0453], [0xF4, U+0454], [0xF5, U+0455], [0xF6, U+0456], [0xF7, U+0457], [0xF8, U+0458], [0xF9, U+0459], [0xFA, U+045A], [0xFB, U+045B], [0xFC, U+045C], [0xFD, U+00A7], [0xFE, U+045E], [0xFF, U+045F]
      ISO_8859_6_1987,                arabic = 0x5Fu, ASMO_708 = 0x5Fu, csISOLatinArabic = 0x5Fu, ECMA_114 = 0x5Fu, ISO_8859_6 = 0x5Fu, iso_ir_127 = 0x5Fu,                                                      // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA4, U+00A4], [0xAC, U+060C], [0xAD, U+00AD], [0xBB, U+061B], [0xBF, U+061F], [0xC1, U+0621], [0xC2, U+0622], [0xC3, U+0623], [0xC4, U+0624], [0xC5, U+0625], [0xC6, U+0626], [0xC7, U+0627], [0xC8, U+0628], [0xC9, U+0629], [0xCA, U+062A], [0xCB, U+062B], [0xCC, U+062C], [0xCD, U+062D], [0xCE, U+062E], [0xCF, U+062F], [0xD0, U+0630], [0xD1, U+0631], [0xD2, U+0632], [0xD3, U+0633], [0xD4, U+0634], [0xD5, U+0635], [0xD6, U+0636], [0xD7, U+0637], [0xD8, U+0638], [0xD9, U+0639], [0xDA, U+063A], [0xE0, U+0640], [0xE1, U+0641], [0xE2, U+0642], [0xE3, U+0643], [0xE4, U+0644], [0xE5, U+0645], [0xE6, U+0646], [0xE7, U+0647], [0xE8, U+0648], [0xE9, U+0649], [0xEA, U+064A], [0xEB, U+064B], [0xEC, U+064C], [0xED, U+064D], [0xEE, U+064E], [0xEF, U+064F], [0xF0, U+0650], [0xF1, U+0651], [0xF2, U+0652]
      ISO_8859_6_E,                   csISO88596E = 0x60u,                                                                                                                                                       // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA4, U+00A4], [0xAD, U+00AD], [0xAC, U+060C], [0xBB, U+061B], [0xBF, U+061F], [0xC1, U+0621], [0xC2, U+0622], [0xC3, U+0623], [0xC4, U+0624], [0xC5, U+0625], [0xC6, U+0626], [0xC7, U+0627], [0xC8, U+0628], [0xC9, U+0629], [0xCA, U+062A], [0xCB, U+062B], [0xCC, U+062C], [0xCD, U+062D], [0xCE, U+062E], [0xCF, U+062F], [0xD0, U+0630], [0xD1, U+0631], [0xD2, U+0632], [0xD3, U+0633], [0xD4, U+0634], [0xD5, U+0635], [0xD6, U+0636], [0xD7, U+0637], [0xD8, U+0638], [0xD9, U+0639], [0xDA, U+063A], [0xE0, U+0640], [0xE1, U+0641], [0xE2, U+0642], [0xE3, U+0643], [0xE4, U+0644], [0xE5, U+0645], [0xE6, U+0646], [0xE7, U+0647], [0xE8, U+0648], [0xE9, U+0649], [0xEA, U+064A], [0xEB, U+064B], [0xEC, U+064C], [0xED, U+064D], [0xEE, U+064E], [0xEF, U+064F], [0xF0, U+0650], [0xF1, U+0651], [0xF2, U+0652]
      ISO_8859_6_I,                   csISO88596I = 0x61u,                                                                                                                                                       // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA4, U+00A4], [0xAD, U+00AD], [0xAC, U+060C], [0xBB, U+061B], [0xBF, U+061F], [0xC1, U+0621], [0xC2, U+0622], [0xC3, U+0623], [0xC4, U+0624], [0xC5, U+0625], [0xC6, U+0626], [0xC7, U+0627], [0xC8, U+0628], [0xC9, U+0629], [0xCA, U+062A], [0xCB, U+062B], [0xCC, U+062C], [0xCD, U+062D], [0xCE, U+062E], [0xCF, U+062F], [0xD0, U+0630], [0xD1, U+0631], [0xD2, U+0632], [0xD3, U+0633], [0xD4, U+0634], [0xD5, U+0635], [0xD6, U+0636], [0xD7, U+0637], [0xD8, U+0638], [0xD9, U+0639], [0xDA, U+063A], [0xE0, U+0640], [0xE1, U+0641], [0xE2, U+0642], [0xE3, U+0643], [0xE4, U+0644], [0xE5, U+0645], [0xE6, U+0646], [0xE7, U+0647], [0xE8, U+0648], [0xE9, U+0649], [0xEA, U+064A], [0xEB, U+064B], [0xEC, U+064C], [0xED, U+064D], [0xEE, U+064E], [0xEF, U+064F], [0xF0, U+0650], [0xF1, U+0651], [0xF2, U+0652]
      ISO_8859_7_1987,                csISOLatinGreek = 0x62u, ECMA_118 = 0x62u, ELOT_928 = 0x62u, greek = 0x62u, greek8 = 0x62u, ISO_8859_7 = 0x62u, iso_ir_126 = 0x62u,                                        // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+201B], [0xA2, U+2019], [0xA3, U+00A3], [0xA6, U+00A6], [0xA7, U+00A7], [0xA8, U+00A8], [0xA9, U+00A9], [0xAB, U+00AB], [0xAC, U+00AC], [0xAD, U+00AD], [0xAF, U+2014], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+00B2], [0xB3, U+00B3], [0xB4, U+00B4], [0xB5, U+03F4], [0xB6, U+0386], [0xB7, U+00B7], [0xB8, U+0388], [0xB9, U+0389], [0xBA, U+038A], [0xBB, U+00BB], [0xBC, U+038C], [0xBD, U+00BD], [0xBE, U+038E], [0xBF, U+038F], [0xC0, U+0390], [0xC1, U+0391], [0xC2, U+0392], [0xC3, U+0393], [0xC4, U+0394], [0xC5, U+0395], [0xC6, U+0396], [0xC7, U+0397], [0xC8, U+0398], [0xC9, U+0399], [0xCA, U+039A], [0xCB, U+039B], [0xCC, U+039C], [0xCD, U+039D], [0xCE, U+039E], [0xCF, U+039F], [0xD0, U+03A0], [0xD1, U+03A1], [0xD3, U+03A3], [0xD4, U+03A4], [0xD5, U+03A5], [0xD6, U+03A6], [0xD7, U+03A7], [0xD8, U+03A8], [0xD9, U+03A9], [0xDA, U+03AA], [0xDB, U+03AB], [0xDC, U+03AC], [0xDD, U+03AD], [0xDE, U+03AE], [0xDF, U+03AF], [0xE0, U+03B0], [0xE1, U+03B1], [0xE2, U+03B2], [0xE3, U+03B3], [0xE4, U+03B4], [0xE5, U+03B5], [0xE6, U+03B6], [0xE7, U+03B7], [0xE8, U+03B8], [0xE9, U+03B9], [0xEA, U+03BA], [0xEB, U+03BB], [0xEC, U+03BC], [0xED, U+03BD], [0xEE, U+03BE], [0xEF, U+03BF], [0xF0, U+03C0], [0xF1, U+03C1], [0xF2, U+03C2], [0xF3, U+03C3], [0xF4, U+03C4], [0xF5, U+03C5], [0xF6, U+03C6], [0xF7, U+03C7], [0xF8, U+03C8], [0xF9, U+03C9], [0xFA, U+03CA], [0xFB, U+03CB], [0xFC, U+03CC], [0xFD, U+03CD], [0xFE, U+03CE]
      ISO_8859_9_1989,                csISOLatin5 = 0x63u, ISO_8859_9 = 0x63u, iso_ir_148 = 0x63u, l5 = 0x63u, latin5 = 0x63u,                                                                                   // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+00A1], [0xA2, U+00A2], [0xA3, U+00A3], [0xA4, U+00A4], [0xA5, U+00A5], [0xA6, U+00A6], [0xA7, U+00A7], [0xA8, U+00A8], [0xA9, U+00A9], [0xAA, U+00AA], [0xAB, U+00AB], [0xAC, U+00AC], [0xAD, U+00AD], [0xAE, U+00AE], [0xAF, U+00AF], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+00B2], [0xB3, U+00B3], [0xB4, U+00B4], [0xB5, U+00B5], [0xB6, U+00B6], [0xB7, U+00B7], [0xB8, U+00B8], [0xB9, U+00B9], [0xBA, U+00BA], [0xBB, U+00BB], [0xBC, U+00BC], [0xBD, U+00BD], [0xBE, U+00BE], [0xBF, U+00BF], [0xC0, U+00C0], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+00C3], [0xC4, U+00C4], [0xC5, U+00C5], [0xC6, U+00C6], [0xC7, U+00C7], [0xC8, U+00C8], [0xC9, U+00C9], [0xCA, U+00CA], [0xCB, U+00CB], [0xCC, U+00CC], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+00CF], [0xD0, U+011E], [0xD1, U+00D1], [0xD2, U+00D2], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+00D5], [0xD6, U+00D6], [0xD7, U+00D7], [0xD8, U+00D8], [0xD9, U+00D9], [0xDA, U+00DA], [0xDB, U+00DB], [0xDC, U+00DC], [0xDD, U+0130], [0xDE, U+015E], [0xDF, U+00DF], [0xE0, U+00E0], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+00E3], [0xE4, U+00E4], [0xE5, U+00E5], [0xE6, U+00E6], [0xE7, U+00E7], [0xE8, U+00E8], [0xE9, U+00E9], [0xEA, U+0119], [0xEB, U+00EB], [0xEC, U+0117], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+012B], [0xF0, U+011F], [0xF1, U+00F1], [0xF2, U+00F2], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+00F5], [0xF6, U+00F6], [0xF7, U+00F7], [0xF8, U+00F8], [0xF9, U+00F9], [0xFA, U+00FA], [0xFB, U+00FB], [0xFC, U+00FC], [0xFD, U+0131], [0xFE, U+015F], [0xFF, U+00FF]
      ISO_8859_supp,                  csISO8859Supp = 0x64u, iso_ir_154 = 0x64u, latin1_2_5 = 0x64u,                                                                                                             // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA2, U+0100], [0xA3, U+0108], [0xA4, U+010A], [0xA6, U+0116], [0xA7, U+0112], [0xA8, U+011C], [0xA9, U+2018], [0xAA, U+201C], [0xAB, U+2122], [0xAC, U+2190], [0xAD, U+2191], [0xAE, U+2192], [0xAF, U+2193], [0xB2, U+0101], [0xB3, U+0109], [0xB4, U+010B], [0xB5, U+00F0], [0xB6, U+0117], [0xB7, U+0113], [0xB8, U+011D], [0xB9, U+2019], [0xBA, U+201D], [0xBB, U+2669], [0xBC, U+215B], [0xBD, U+215C], [0xBE, U+215D], [0xBF, U+215E], [0xC1, U+011E], [0xC2, U+0120], [0xC3, U+0122], [0xC4, U+0124], [0xC5, U+0126], [0xC6, U+0128], [0xC7, U+0130], [0xC8, U+012A], [0xC9, U+012E], [0xCA, U+0132], [0xCB, U+0134], [0xCC, U+0136], [0xCD, U+013B], [0xCE, U+013F], [0xCF, U+0145], [0xD0, U+2014], [0xD1, U+014A], [0xD2, U+014C], [0xD3, U+0152], [0xD4, U+0156], [0xD5, U+015C], [0xD6, U+0166], [0xD7, U+00DE], [0xD8, U+0168], [0xD9, U+016C], [0xDA, U+016A], [0xDB, U+0172], [0xDC, U+0174], [0xDD, U+00DD], [0xDE, U+0176], [0xDF, U+0178], [0xE0, U+2126], [0xE1, U+011F], [0xE2, U+0121], [0xE3, U+0123], [0xE4, U+0125], [0xE5, U+0127], [0xE6, U+0129], [0xE7, U+0131], [0xE8, U+012B], [0xE9, U+012F], [0xEA, U+0133], [0xEB, U+0135], [0xEC, U+0137], [0xED, U+013C], [0xEE, U+0140], [0xEF, U+0146], [0xF0, U+0138], [0xF1, U+014B], [0xF2, U+014D], [0xF3, U+0153], [0xF4, U+0157], [0xF5, U+015D], [0xF6, U+0167], [0xF7, U+00FE], [0xF8, U+0169], [0xF9, U+016D], [0xFA, U+016B], [0xFB, U+0173], [0xFC, U+0175], [0xFD, U+00FD], [0xFE, U+0177], [0xFF, U+0149]
      IT,                             csISO15Italian = 0x65u, iso_ir_15 = 0x65u, ISO646_IT = 0x65u,                                                                                                              // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+00A3], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+00A7], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00B0], [0x5C, U+00E7], [0x5D, U+00E9], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+00F9], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E0], [0x7C, U+00F2], [0x7D, U+00E8], [0x7E, U+00EC], [0x7F, U+007F]
      JIS_C6220_1969_ro,              csISO14JISC6220ro = 0x66u, iso_ir_14 = 0x66u, ISO646_JP = 0x66u, jp = 0x66u,                                                                                               // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+00A5], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+00AF], [0x7F, U+007F]
      JIS_C6229_1984_a,               csISO91JISC62291984a = 0x67u, iso_ir_91 = 0x67u, jp_ocr_a = 0x67u,                                                                                                         // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x22, U+0022], [0x23, U+00A3], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+2440], [0x3D, U+003D], [0x3E, U+2441], [0x3F, U+003F], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5C, U+00A5], [0x5D, U+2442], [0x5E, U+005E], [0x5F, U+005F], [0x7C, U+2443], [0x7F, U+007F]
      JIS_C6229_1984_b,               csISO92JISC62991984b = 0x68u, iso_ir_92 = 0x68u, ISO646_JP_OCR_B = 0x68u, jp_ocr_b = 0x68u,                                                                                // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+2329], [0x5C, U+00A5], [0x5D, U+232A], [0x5E, U+005E], [0x5F, U+005F], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7F, U+007F]
      JIS_C6229_1984_b_add,           csISO93JIS62291984badd = 0x69u, iso_ir_93 = 0x69u, jp_ocr_b_add = 0x69u,                                                                                                   // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x23, U+00A3], [0x24, U+00A4], [0x25, U+005C], [0x27, U+00A7], [0x7F, U+007F]
      JIS_C6229_1984_hand,            csISO94JIS62291984hand = 0x6Au, iso_ir_94 = 0x6Au, jp_ocr_hand = 0x6Au,                                                                                                    // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+2329], [0x5C, U+00A5], [0x5D, U+232A], [0x5E, U+005E], [0x5F, U+005F], [0x7C, U+007C], [0x7F, U+007F]
      JIS_C6229_1984_hand_add,        csISO95JIS62291984handadd = 0x6Bu, iso_ir_95 = 0x6Bu, jp_ocr_hand_add = 0x6Bu,                                                                                             // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x25, U+005C], [0x7F, U+007F]
      JIS_X0201,                      csHalfWidthKatakana = 0x6Cu, X0201 = 0x6Cu,                                                                                                                                // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+00A5], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+00AF], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+3002], [0xA2, U+300C], [0xA3, U+300D], [0xA4, U+3001], [0xA5, U+30FB], [0xA6, U+30F2], [0xA7, U+30A1], [0xA8, U+30A3], [0xA9, U+30A5], [0xAA, U+30A7], [0xAB, U+30A9], [0xAC, U+30E3], [0xAD, U+30E5], [0xAE, U+30E7], [0xAF, U+30C3], [0xB0, U+30FC], [0xB1, U+30A2], [0xB2, U+30A4], [0xB3, U+30A6], [0xB4, U+30A8], [0xB5, U+30AA], [0xB6, U+30AB], [0xB7, U+30AD], [0xB8, U+30AF], [0xB9, U+30B1], [0xBA, U+30B3], [0xBB, U+30B5], [0xBC, U+30B7], [0xBD, U+30B9], [0xBE, U+30BB], [0xBF, U+30BD], [0xC0, U+30BF], [0xC1, U+30C1], [0xC2, U+30C4], [0xC3, U+30C6], [0xC4, U+30C8], [0xC5, U+30CA], [0xC6, U+30CB], [0xC7, U+30CC], [0xC8, U+30CD], [0xC9, U+30CE], [0xCA, U+30CF], [0xCB, U+30D2], [0xCC, U+30D5], [0xCD, U+30D8], [0xCE, U+30DB], [0xCF, U+30DE], [0xD0, U+30DF], [0xD1, U+30E0], [0xD2, U+30E1], [0xD3, U+30E2], [0xD4, U+30E4], [0xD5, U+30E6], [0xD6, U+30E8], [0xD7, U+30E9], [0xD8, U+30EA], [0xD9, U+30EB], [0xDA, U+30EC], [0xDB, U+30ED], [0xDC, U+30EF], [0xDD, U+30F3], [0xDE, U+309B], [0xDF, U+309C]
      JUS_I_B1_002,                   csISO141JUSIB1002 = 0x6Du, iso_ir_141 = 0x6Du, ISO646_YU = 0x6Du, js = 0x6Du, yu = 0x6Du,                                                                                  // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+017D], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+0160], [0x5C, U+0110], [0x5D, U+0106], [0x5E, U+010C], [0x5F, U+005F], [0x60, U+017E], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+0161], [0x7C, U+0111], [0x7D, U+0107], [0x7E, U+010D], [0x7F, U+007F]
      KOI7_switched,                  csKOI7switched = 0x6Eu,                                                                                                                                                    // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+042E], [0x61, U+0410], [0x62, U+0411], [0x63, U+0426], [0x64, U+0414], [0x65, U+0415], [0x66, U+0424], [0x67, U+0413], [0x68, U+0425], [0x69, U+0418], [0x6A, U+0419], [0x6B, U+041A], [0x6C, U+041B], [0x6D, U+041C], [0x6E, U+041D], [0x6F, U+041E], [0x70, U+041F], [0x71, U+042F], [0x72, U+0420], [0x73, U+0421], [0x74, U+0422], [0x75, U+0423], [0x76, U+0416], [0x77, U+0412], [0x78, U+042C], [0x79, U+042B], [0x7A, U+0417], [0x7B, U+0428], [0x7C, U+042D], [0x7D, U+0429], [0x7E, U+0427], [0x7F, U+007F]
      KOI8_R,                         csKOI8R = 0x6Fu,                                                                                                                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x80, U+2500], [0x81, U+2502], [0x82, U+250C], [0x83, U+2510], [0x84, U+2514], [0x85, U+2518], [0x86, U+251C], [0x87, U+2524], [0x88, U+252C], [0x89, U+2534], [0x8A, U+253C], [0x8B, U+2580], [0x8C, U+2584], [0x8D, U+2588], [0x8E, U+258C], [0x8F, U+2590], [0x90, U+2591], [0x91, U+2592], [0x92, U+2593], [0x93, U+2320], [0x94, U+25A0], [0x95, U+2219], [0x96, U+221A], [0x97, U+2248], [0x98, U+2264], [0x99, U+2265], [0x9A, U+00A0], [0x9B, U+2321], [0x9C, U+00B0], [0x9D, U+00B2], [0x9E, U+00B7], [0x9F, U+00F7], [0xA0, U+2550], [0xA1, U+2551], [0xA2, U+2552], [0xA3, U+0451], [0xA4, U+2553], [0xA5, U+2554], [0xA6, U+2555], [0xA7, U+2556], [0xA8, U+2557], [0xA9, U+2558], [0xAA, U+2559], [0xAB, U+255A], [0xAC, U+255B], [0xAD, U+255C], [0xAE, U+255D], [0xAF, U+255E], [0xB0, U+255F], [0xB1, U+2560], [0xB2, U+2561], [0xB3, U+0401], [0xB4, U+2562], [0xB5, U+2563], [0xB6, U+2564], [0xB7, U+2565], [0xB8, U+2566], [0xB9, U+2567], [0xBA, U+2568], [0xBB, U+2569], [0xBC, U+256A], [0xBD, U+256B], [0xBE, U+256C], [0xBF, U+00A9], [0xC0, U+044E], [0xC1, U+0430], [0xC2, U+0431], [0xC3, U+0446], [0xC4, U+0434], [0xC5, U+0435], [0xC6, U+0444], [0xC7, U+0433], [0xC8, U+0445], [0xC9, U+0438], [0xCA, U+0439], [0xCB, U+043A], [0xCC, U+043B], [0xCD, U+043C], [0xCE, U+043D], [0xCF, U+043E], [0xD0, U+043F], [0xD1, U+044F], [0xD2, U+0440], [0xD3, U+0441], [0xD4, U+0442], [0xD5, U+0443], [0xD6, U+0436], [0xD7, U+0432], [0xD8, U+044C], [0xD9, U+044B], [0xDA, U+0437], [0xDB, U+0448], [0xDC, U+044D], [0xDD, U+0449], [0xDE, U+0447], [0xDF, U+044A], [0xE0, U+042E], [0xE1, U+0410], [0xE2, U+0411], [0xE3, U+0426], [0xE4, U+0414], [0xE5, U+0415], [0xE6, U+0424], [0xE7, U+0413], [0xE8, U+0425], [0xE9, U+0418], [0xEA, U+0419], [0xEB, U+041A], [0xEC, U+041B], [0xED, U+041C], [0xEE, U+041D], [0xEF, U+041E], [0xF0, U+041F], [0xF1, U+042F], [0xF2, U+0420], [0xF3, U+0421], [0xF4, U+0422], [0xF5, U+0423], [0xF6, U+0416], [0xF7, U+0412], [0xF8, U+042C], [0xF9, U+042B], [0xFA, U+0417], [0xFB, U+0428], [0xFC, U+042D], [0xFD, U+0429], [0xFE, U+0427], [0xFF, U+042A]
      KOI8_U,                         csKOI8U = 0x70u,                                                                                                                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x80, U+2500], [0x81, U+2502], [0x82, U+250C], [0x83, U+2510], [0x84, U+2514], [0x85, U+2518], [0x86, U+251C], [0x87, U+2524], [0x88, U+252C], [0x89, U+2534], [0x8A, U+253C], [0x8B, U+2580], [0x8C, U+2584], [0x8D, U+2588], [0x8E, U+258C], [0x8F, U+2590], [0x90, U+2591], [0x91, U+2592], [0x92, U+2593], [0x93, U+2320], [0x94, U+25A0], [0x95, U+2219], [0x96, U+221A], [0x97, U+2248], [0x98, U+2264], [0x99, U+2265], [0x9A, U+00A0], [0x9B, U+2321], [0x9C, U+00B0], [0x9D, U+00B2], [0x9E, U+00B7], [0x9F, U+00F7], [0xA0, U+2550], [0xA1, U+2551], [0xA2, U+2552], [0xA3, U+0451], [0xA4, U+0454], [0xA5, U+2554], [0xA6, U+0456], [0xA7, U+0457], [0xA8, U+2557], [0xA9, U+2558], [0xAA, U+2559], [0xAB, U+255A], [0xAC, U+255B], [0xAD, U+0491], [0xAE, U+255D], [0xAF, U+255E], [0xB0, U+255F], [0xB1, U+2560], [0xB2, U+2561], [0xB3, U+0401], [0xB4, U+0404], [0xB5, U+2563], [0xB6, U+0406], [0xB7, U+0407], [0xB8, U+2566], [0xB9, U+2567], [0xBA, U+2568], [0xBB, U+2569], [0xBC, U+256A], [0xBD, U+0490], [0xBE, U+256C], [0xBF, U+00A9], [0xC0, U+044E], [0xC1, U+0430], [0xC2, U+0431], [0xC3, U+0446], [0xC4, U+0434], [0xC5, U+0435], [0xC6, U+0444], [0xC7, U+0433], [0xC8, U+0445], [0xC9, U+0438], [0xCA, U+0439], [0xCB, U+043A], [0xCC, U+043B], [0xCD, U+043C], [0xCE, U+043D], [0xCF, U+043E], [0xD0, U+043F], [0xD1, U+044F], [0xD2, U+0440], [0xD3, U+0441], [0xD4, U+0442], [0xD5, U+0443], [0xD6, U+0436], [0xD7, U+0432], [0xD8, U+044C], [0xD9, U+044B], [0xDA, U+0437], [0xDB, U+0448], [0xDC, U+044D], [0xDD, U+0449], [0xDE, U+0447], [0xDF, U+044A], [0xE0, U+042E], [0xE1, U+0410], [0xE2, U+0411], [0xE3, U+0426], [0xE4, U+0414], [0xE5, U+0415], [0xE6, U+0424], [0xE7, U+0413], [0xE8, U+0425], [0xE9, U+0418], [0xEA, U+0419], [0xEB, U+041A], [0xEC, U+041B], [0xED, U+041C], [0xEE, U+041D], [0xEF, U+041E], [0xF0, U+041F], [0xF1, U+042F], [0xF2, U+0420], [0xF3, U+0421], [0xF4, U+0422], [0xF5, U+0423], [0xF6, U+0416], [0xF7, U+0412], [0xF8, U+042C], [0xF9, U+042B], [0xFA, U+0417], [0xFB, U+0428], [0xFC, U+042D], [0xFD, U+0429], [0xFE, U+0427], [0xFF, U+042A]
      KSC5636,                        csKSC5636 = 0x71u, ISO646_KR = 0x71u,                                                                                                                                      // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+20A9], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F]
      KZ_1048,                        csKZ1048 = 0x72u, RK1048 = 0x72u, STRK1048_2002 = 0x72u,                                                                                                                   // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0402], [0x81, U+0403], [0x82, U+201A], [0x83, U+0453], [0x84, U+201E], [0x85, U+2026], [0x86, U+2020], [0x87, U+2021], [0x88, U+20AC], [0x89, U+2030], [0x8A, U+0409], [0x8B, U+2039], [0x8C, U+040A], [0x8D, U+049A], [0x8E, U+04BA], [0x8F, U+040F], [0x90, U+0452], [0x91, U+2018], [0x92, U+2019], [0x93, U+201C], [0x94, U+201D], [0x95, U+2022], [0x96, U+2013], [0x97, U+2014], [0x99, U+2122], [0x9A, U+0459], [0x9B, U+203A], [0x9C, U+045A], [0x9D, U+049B], [0x9E, U+04BB], [0x9F, U+045F], [0xA0, U+00A0], [0xA1, U+04B0], [0xA2, U+04B1], [0xA3, U+04D8], [0xA4, U+00A4], [0xA5, U+04E8], [0xA6, U+00A6], [0xA7, U+00A7], [0xA8, U+0401], [0xA9, U+00A9], [0xAA, U+0492], [0xAB, U+00AB], [0xAC, U+00AC], [0xAD, U+00AD], [0xAE, U+00AE], [0xAF, U+04AE], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+0406], [0xB3, U+0456], [0xB4, U+04E9], [0xB5, U+00B5], [0xB6, U+00B6], [0xB7, U+00B7], [0xB8, U+0451], [0xB9, U+2116], [0xBA, U+0493], [0xBB, U+00BB], [0xBC, U+04D9], [0xBD, U+04A2], [0xBE, U+04A3], [0xBF, U+04AF], [0xC0, U+0410], [0xC1, U+0411], [0xC2, U+0412], [0xC3, U+0413], [0xC4, U+0414], [0xC5, U+0415], [0xC6, U+0416], [0xC7, U+0417], [0xC8, U+0418], [0xC9, U+0419], [0xCA, U+041A], [0xCB, U+041B], [0xCC, U+041C], [0xCD, U+041D], [0xCE, U+041E], [0xCF, U+041F], [0xD0, U+0420], [0xD1, U+0421], [0xD2, U+0422], [0xD3, U+0423], [0xD4, U+0424], [0xD5, U+0425], [0xD6, U+0426], [0xD7, U+0427], [0xD8, U+0428], [0xD9, U+0429], [0xDA, U+042A], [0xDB, U+042B], [0xDC, U+042C], [0xDD, U+042D], [0xDE, U+042E], [0xDF, U+042F], [0xE0, U+0430], [0xE1, U+0431], [0xE2, U+0432], [0xE3, U+0433], [0xE4, U+0434], [0xE5, U+0435], [0xE6, U+0436], [0xE7, U+0437], [0xE8, U+0438], [0xE9, U+0439], [0xEA, U+043A], [0xEB, U+043B], [0xEC, U+043C], [0xED, U+043D], [0xEE, U+043E], [0xEF, U+043F], [0xF0, U+0440], [0xF1, U+0441], [0xF2, U+0442], [0xF3, U+0443], [0xF4, U+0444], [0xF5, U+0445], [0xF6, U+0446], [0xF7, U+0447], [0xF8, U+0448], [0xF9, U+0449], [0xFA, U+044A], [0xFB, U+044B], [0xFC, U+044C], [0xFD, U+044D], [0xFE, U+044E], [0xFF, U+044F]
      latin_greek,                    csISO27LatinGreek1 = 0x73u, iso_ir_27 = 0x73u,                                                                                                                             // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+00A3], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0391], [0x62, U+0392], [0x63, U+03A8], [0x64, U+0394], [0x65, U+0395], [0x66, U+03A6], [0x67, U+0393], [0x68, U+0397], [0x69, U+0399], [0x6A, U+039E], [0x6B, U+039A], [0x6C, U+039B], [0x6D, U+039C], [0x6E, U+039D], [0x6F, U+039F], [0x70, U+03A0], [0x72, U+03A1], [0x73, U+03A3], [0x74, U+03A4], [0x75, U+0398], [0x76, U+03A9], [0x77, U+00B7], [0x78, U+03A7], [0x79, U+03A5], [0x7A, U+0396], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+00A8], [0x7F, U+007F]
      Latin_greek_1,                  csISO19LatinGreek = 0x74u, iso_ir_19 = 0x74u,                                                                                                                              // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+039E], [0x22, U+0022], [0x23, U+0393], [0x24, U+00A4], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+03A8], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+03A0], [0x40, U+0394], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+03A9], [0x5C, U+0398], [0x5D, U+03A6], [0x5E, U+039B], [0x5F, U+03A3], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+00AF], [0x7F, U+007F]
      latin_lap,                      csISO158Lap = 0x75u, iso_ir_158 = 0x75u, lap = 0x75u,                                                                                                                      // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00B4], [0xB0, U+02BF], [0xC0, U+0102], [0xC1, U+00C2], [0xC2, U+00C0], [0xC3, U+0100], [0xC4, U+01DE], [0xC5, U+01E0], [0xC6, U+01E2], [0xC7, U+0114], [0xC8, U+00C8], [0xC9, U+0112], [0xCA, U+01E4], [0xCB, U+01E6], [0xCC, U+01E8], [0xCD, U+014E], [0xCE, U+00D2], [0xCF, U+01EA], [0xD0, U+01EC], [0xD1, U+016A], [0xD2, U+01B7], [0xD3, U+01EE], [0xE0, U+0103], [0xE1, U+00E2], [0xE2, U+00E0], [0xE3, U+0101], [0xE4, U+01DF], [0xE5, U+01E1], [0xE6, U+01E3], [0xE7, U+0115], [0xE8, U+00E8], [0xE9, U+0113], [0xEA, U+01E5], [0xEB, U+01E7], [0xEC, U+01E9], [0xED, U+014F], [0xEE, U+00F2], [0xEF, U+01EB], [0xF0, U+01ED], [0xF1, U+016B], [0xF2, U+E01E], [0xF3, U+01EF]
      macintosh,                      csMacintosh = 0x76u, mac = 0x76u,                                                                                                                                          // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+00C4], [0x81, U+00C5], [0x82, U+00C7], [0x83, U+00C9], [0x84, U+00D1], [0x85, U+00D6], [0x86, U+00DC], [0x87, U+00E1], [0x88, U+00E0], [0x89, U+00E2], [0x8A, U+00E4], [0x8B, U+00E3], [0x8C, U+00E5], [0x8D, U+00E7], [0x8E, U+00E9], [0x8F, U+00E8], [0x90, U+00EA], [0x91, U+00EB], [0x92, U+00ED], [0x93, U+00EC], [0x94, U+00EE], [0x95, U+00EF], [0x96, U+00F1], [0x97, U+00F3], [0x98, U+00F2], [0x99, U+00F4], [0x9A, U+00F6], [0x9B, U+00F5], [0x9C, U+00FA], [0x9D, U+00F9], [0x9E, U+00FB], [0x9F, U+00FC], [0xA0, U+2020], [0xA1, U+00B0], [0xA2, U+00A2], [0xA3, U+00A3], [0xA4, U+00A7], [0xA5, U+2219], [0xA6, U+00B6], [0xA7, U+00DF], [0xA8, U+00AE], [0xA9, U+00A9], [0xAA, U+2122], [0xAB, U+00B4], [0xAC, U+00A8], [0xAD, U+2260], [0xAE, U+00C6], [0xAF, U+00D8], [0xB0, U+221E], [0xB1, U+00B1], [0xB2, U+2264], [0xB3, U+2265], [0xB4, U+00A5], [0xB5, U+00B5], [0xB6, U+2202], [0xB7, U+2211], [0xB8, U+220F], [0xB9, U+03C0], [0xBA, U+222B], [0xBB, U+00AA], [0xBC, U+00BA], [0xBD, U+03A9], [0xBE, U+00E6], [0xBF, U+00F8], [0xC0, U+00BF], [0xC1, U+00A1], [0xC2, U+00AC], [0xC3, U+221A], [0xC4, U+0192], [0xC5, U+2248], [0xC6, U+0394], [0xC7, U+00AB], [0xC8, U+00BB], [0xC9, U+22EF], [0xCA, U+00A0], [0xCB, U+00C0], [0xCC, U+00C3], [0xCD, U+00D5], [0xCE, U+0152], [0xCF, U+0153], [0xD0, U+2014], [0xD1, U+2013], [0xD2, U+201C], [0xD3, U+201D], [0xD4, U+2018], [0xD5, U+2019], [0xD6, U+00F7], [0xD7, U+25C6], [0xD8, U+00FF], [0xD9, U+0178], [0xDA, U+2044], [0xDB, U+00A4], [0xDC, U+2039], [0xDD, U+203A], [0xDE, U+FB01], [0xDF, U+FB02], [0xE0, U+2021], [0xE1, U+00B7], [0xE2, U+201A], [0xE3, U+201E], [0xE4, U+2030], [0xE5, U+00C2], [0xE6, U+00CA], [0xE7, U+00C1], [0xE8, U+00CB], [0xE9, U+00C8], [0xEA, U+00CD], [0xEB, U+00CE], [0xEC, U+00CF], [0xED, U+00CC], [0xEE, U+00D3], [0xEF, U+00D4], [0xF1, U+00D2], [0xF2, U+00DA], [0xF3, U+00DB], [0xF4, U+00D9], [0xF5, U+0131], [0xF8, U+00AF], [0xF9, U+02D8], [0xFA, U+02D9], [0xFB, U+02DA], [0xFC, U+00B8], [0xFD, U+02DD], [0xFE, U+02DB], [0xFF, U+02C7]
      MSZ_7795_3,                     csISO86Hungarian = 0x77u, hu = 0x77u, iso_ir_86 = 0x77u, ISO646_HU = 0x77u,                                                                                                // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+00A4], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+00C1], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00C9], [0x5C, U+00D6], [0x5D, U+00DC], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+00E1], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E9], [0x7C, U+00F6], [0x7D, U+00FC], [0x7E, U+02DD], [0x7F, U+007F]
      NATS_DANO,                      csNATSDANO = 0x78u, iso_ir_9_1 = 0x78u,                                                                                                                                    // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+00AB], [0x23, U+00BB], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+E002], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00C6], [0x5C, U+00D8], [0x5D, U+00C5], [0x5E, U+25A0], [0x5F, U+005F], [0x60, U+E003], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E6], [0x7C, U+00F8], [0x7D, U+00E5], [0x7E, U+2013], [0x7F, U+007F]
      NATS_DANO_ADD,                  csNATSDANOADD = 0x79u, iso_ir_9_2 = 0x79u,                                                                                                                                 // --> [0x41, U+00C0], [0x44, U+0110], [0x45, U+00C9], [0x50, U+00DE], [0x55, U+00DC], [0x5B, U+00C4], [0x5C, U+00D6], [0x61, U+00E0], [0x64, U+0111], [0x65, U+00E9], [0x70, U+00FE], [0x75, U+00FC], [0x7B, U+00E4], [0x7C, U+00F6]
      NATS_SEFI,                      csNATSSEFI = 0x7Au, iso_ir_8_1 = 0x7Au,                                                                                                                                    // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+E002], [0x21, U+0041], [0x22, U+0042], [0x23, U+0043], [0x24, U+0044], [0x25, U+0045], [0x26, U+0046], [0x27, U+0047], [0x28, U+0048], [0x29, U+0049], [0x2A, U+004A], [0x2B, U+004B], [0x2C, U+004C], [0x2D, U+004D], [0x2E, U+004E], [0x2F, U+004F], [0x30, U+0050], [0x31, U+0051], [0x32, U+0052], [0x33, U+0053], [0x34, U+0054], [0x35, U+0055], [0x36, U+0056], [0x37, U+0057], [0x38, U+0058], [0x39, U+0059], [0x3A, U+005A], [0x3B, U+00C4], [0x3C, U+00D6], [0x3D, U+00C5], [0x3E, U+25A0], [0x3F, U+005F], [0x40, U+E003], [0x41, U+0061], [0x42, U+0062], [0x43, U+0063], [0x44, U+0064], [0x45, U+0065], [0x46, U+0066], [0x47, U+0067], [0x48, U+0068], [0x49, U+0069], [0x4A, U+006A], [0x4B, U+006B], [0x4C, U+006C], [0x4D, U+006D], [0x4E, U+006E], [0x4F, U+006F], [0x50, U+0070], [0x51, U+0071], [0x52, U+0072], [0x53, U+0073], [0x54, U+0074], [0x55, U+0075], [0x56, U+0076], [0x57, U+0077], [0x58, U+0078], [0x59, U+0079], [0x5A, U+007A], [0x5B, U+00E4], [0x5C, U+00F6], [0x5D, U+00E5], [0x5E, U+2013], [0x5F, U+007F]
      NATS_SEFI_ADD,                  csNATSSEFIADD = 0x7Bu, iso_ir_8_2 = 0x7Bu,                                                                                                                                 // --> [0x41, U+00C0], [0x44, U+0110], [0x45, U+00C9], [0x50, U+00DE], [0x55, U+00DC], [0x5B, U+00C6], [0x5C, U+00D8], [0x61, U+00E0], [0x64, U+0111], [0x65, U+00E9], [0x70, U+00FE], [0x75, U+00FC], [0x7B, U+00E6], [0x7C, U+00F8]
      NC_NC00_10_81,                  csISO151Cuba = 0x7Cu, cuba = 0x7Cu, iso_ir_151 = 0x7Cu, ISO646_CU = 0x7Cu,                                                                                                 // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+00A4], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00A1], [0x5C, U+00D1], [0x5D, U+005D], [0x5E, U+00BF], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00B4], [0x7C, U+00F1], [0x7D, U+005B], [0x7E, U+00A8], [0x7F, U+007F]
      NF_Z_62_010,                    csISO69French = 0x7Du, fr = 0x7Du, iso_ir_69 = 0x7Du, ISO646_FR = 0x7Du,                                                                                                   // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+00A3], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+00E0], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00B0], [0x5C, U+00E7], [0x5D, U+00A7], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+00B5], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E9], [0x7C, U+00F9], [0x7D, U+00E8], [0x7E, U+00A8], [0x7F, U+007F]
      NF_Z_62_010_1973,               csISO25French = 0x7Eu, iso_ir_25 = 0x7Eu, ISO646_FR1 = 0x7Eu,                                                                                                              // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+00A3], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+00E0], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00B0], [0x5C, U+00E7], [0x5D, U+00A7], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E9], [0x7C, U+00F9], [0x7D, U+00E8], [0x7E, U+00A8], [0x7F, U+007F]
      NS_4551_1,                      csISO60DanishNorwegian = 0x7Fu, csISO60Norwegian = 0x7Fu, iso_ir_60 = 0x7Fu, ISO646_NO = 0x7Fu, no = 0x7Fu,                                                                // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00C6], [0x5C, U+00D8], [0x5D, U+00C5], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E6], [0x7C, U+00F8], [0x7D, U+00E5], [0x7E, U+00AF], [0x7F, U+007F]
      NS_4551_2,                      csISO61Norwegian2 = 0x80u, iso_ir_61 = 0x80u, ISO646_NO2 = 0x80u, no2 = 0x80u,                                                                                             // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+00B6], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00C6], [0x5C, U+00D8], [0x5D, U+00C5], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E6], [0x7C, U+00F8], [0x7D, U+00E5], [0x7E, U+007C], [0x7F, U+007F]
      PT,                             csISO16Portuguese = 0x81u, iso_ir_16 = 0x81u, ISO646_PT = 0x81u,                                                                                                           // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+00A7], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00C3], [0x5C, U+00C7], [0x5D, U+00D5], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E3], [0x7C, U+00E7], [0x7D, U+00F5], [0x7E, U+00B0], [0x7F, U+007F]
      PT2,                            csISO84Portuguese2 = 0x82u, iso_ir_84 = 0x82u, ISO646_PT2 = 0x82u,                                                                                                         // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+00B4], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00C3], [0x5C, U+00C7], [0x5D, U+00D5], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E3], [0x7C, U+00E7], [0x7D, U+00F5], [0x7E, U+00AF], [0x7F, U+007F]
      SEN_850200_B,                   csISO10Swedish = 0x83u, FI = 0x83u, iso_ir_10 = 0x83u, ISO646_FI = 0x83u, ISO646_SE = 0x83u, se = 0x83u,                                                                   // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+00A4], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00C4], [0x5C, U+00D6], [0x5D, U+00C5], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E4], [0x7C, U+00F6], [0x7D, U+00E5], [0x7E, U+00AF], [0x7F, U+007F]
      SEN_850200_C,                   csISO11SwedishForNames = 0x84u, iso_ir_11 = 0x84u, ISO646_SE2 = 0x84u, se2 = 0x84u,                                                                                        // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+00A4], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+00C9], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00C4], [0x5C, U+00D6], [0x5D, U+00C5], [0x5E, U+00DC], [0x5F, U+005F], [0x60, U+00E9], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E4], [0x7C, U+00F6], [0x7D, U+00E5], [0x7E, U+00FC], [0x7F, U+007F]
      T_61_7bit,                      csISO102T617bit = 0x85u, iso_ir_102 = 0x85u,                                                                                                                               // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+00A4], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5D, U+005D], [0x5F, U+005F], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7C, U+007C], [0x7F, U+007F]
      T_61_8bit,                      csISO103T618bit = 0x86u, iso_ir_103 = 0x86u, T_61 = 0x86u,                                                                                                                 // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5D, U+005D], [0x5F, U+005F], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7C, U+007C], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+00A1], [0xA2, U+00A2], [0xA3, U+00A3], [0xA4, U+0024], [0xA5, U+00A5], [0xA6, U+0023], [0xA7, U+00A7], [0xA8, U+00A4], [0xAB, U+00AB], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+00B2], [0xB3, U+00B3], [0xB4, U+00D7], [0xB5, U+00B5], [0xB6, U+00B6], [0xB7, U+00B7], [0xB8, U+00F7], [0xBB, U+00BB], [0xBC, U+00BC], [0xBD, U+00BD], [0xBE, U+00BE], [0xBF, U+00BF], [0xE0, U+2126], [0xE1, U+00C6], [0xE2, U+00D0], [0xE3, U+00AA], [0xE4, U+0126], [0xE6, U+0132], [0xE7, U+013F], [0xE8, U+0141], [0xE9, U+00D8], [0xEA, U+0152], [0xEB, U+00BA], [0xEC, U+00DE], [0xED, U+0166], [0xEE, U+014A], [0xEF, U+0149], [0xF0, U+0138], [0xF1, U+00E6], [0xF2, U+0111], [0xF3, U+00F0], [0xF4, U+0127], [0xF5, U+0131], [0xF6, U+0133], [0xF7, U+0140], [0xF8, U+0142], [0xF9, U+00F8], [0xFA, U+0153], [0xFB, U+00DF], [0xFC, U+00FE], [0xFD, U+0167], [0xFE, U+014B]
      TIS_620,                        csTIS620 = 0x87u, ISO_8859_11 = 0x87u,                                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+0E01], [0xA2, U+0E02], [0xA3, U+0E03], [0xA4, U+0E04], [0xA5, U+0E05], [0xA6, U+0E06], [0xA7, U+0E07], [0xA8, U+0E08], [0xA9, U+0E09], [0xAA, U+0E0A], [0xAB, U+0E0B], [0xAC, U+0E0C], [0xAD, U+0E0D], [0xAE, U+0E0E], [0xAF, U+0E0F], [0xB0, U+0E10], [0xB1, U+0E11], [0xB2, U+0E12], [0xB3, U+0E13], [0xB4, U+0E14], [0xB5, U+0E15], [0xB6, U+0E16], [0xB7, U+0E17], [0xB8, U+0E18], [0xB9, U+0E19], [0xBA, U+0E1A], [0xBB, U+0E1B], [0xBC, U+0E1C], [0xBD, U+0E1D], [0xBE, U+0E1E], [0xBF, U+0E1F], [0xC0, U+0E20], [0xC1, U+0E21], [0xC2, U+0E22], [0xC3, U+0E23], [0xC4, U+0E24], [0xC5, U+0E25], [0xC6, U+0E26], [0xC7, U+0E27], [0xC8, U+0E28], [0xC9, U+0E29], [0xCA, U+0E2A], [0xCB, U+0E2B], [0xCC, U+0E2C], [0xCD, U+0E2D], [0xCE, U+0E2E], [0xCF, U+0E2F], [0xD0, U+0E30], [0xD1, U+0E31], [0xD2, U+0E32], [0xD3, U+0E33], [0xD4, U+0E34], [0xD5, U+0E35], [0xD6, U+0E36], [0xD7, U+0E37], [0xD8, U+0E38], [0xD9, U+0E39], [0xDA, U+0E3A], [0xDF, U+0E3F], [0xE0, U+0E40], [0xE1, U+0E41], [0xE2, U+0E42], [0xE3, U+0E43], [0xE4, U+0E44], [0xE5, U+0E45], [0xE6, U+0E46], [0xE7, U+0E47], [0xE8, U+0E48], [0xE9, U+0E49], [0xEA, U+0E4A], [0xEB, U+0E4B], [0xEC, U+0E4C], [0xED, U+0E4D], [0xEE, U+0E4E], [0xEF, U+0E4F], [0xF0, U+0E50], [0xF1, U+0E51], [0xF2, U+0E52], [0xF3, U+0E53], [0xF4, U+0E54], [0xF5, U+0E55], [0xF6, U+0E56], [0xF7, U+0E57], [0xF8, U+0E58], [0xF9, U+0E59], [0xFA, U+0E5A], [0xFB, U+0E5B]
      US_ASCII,                       ANSI_X3_4_1968 = 0x88u, ANSI_X3_4_1986 = 0x88u, cp367 = 0x88u, csASCII = 0x88u, IBM367 = 0x88u, iso_ir_6 = 0x88u, ISO646_US = 0x88u, ISO_646_irv_1991 = 0x88u, us = 0x88u, // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F]
      us_dk,                          csUSDK = 0x89u,                                                                                                                                                            // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00C6], [0x5C, U+00D8], [0x5D, U+00C5], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E6], [0x7C, U+00F8], [0x7D, U+00E5], [0x7E, U+007E], [0x7F, U+007F]
      UTF_16,                         csUTF16 = 0x8Au,                                                                                                                                                           //
      UTF_16BE,                       csUTF16BE = 0x8Bu,                                                                                                                                                         //
      UTF_16LE,                       csUTF16LE = 0x8Cu,                                                                                                                                                         //
      UTF_32,                         csUTF32 = 0x8Du,                                                                                                                                                           //
      UTF_32BE,                       csUTF32BE = 0x8Eu,                                                                                                                                                         //
      UTF_32LE,                       csUTF32LE = 0x8Fu,                                                                                                                                                         //
      UTF_8,                          csUTF8 = 0x90u,                                                                                                                                                            //
      VISCII,                         csVISCII = 0x91u,                                                                                                                                                          // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+1EB2], [0x03, U+0003], [0x04, U+0004], [0x05, U+1EB4], [0x06, U+1EAA], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+1EF6], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+1EF8], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+1EF4], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+1EA0], [0x81, U+1EAE], [0x82, U+1EB0], [0x83, U+1EB6], [0x84, U+1EA4], [0x85, U+1EA6], [0x86, U+1EA8], [0x87, U+1EAC], [0x88, U+1EBC], [0x89, U+1EB8], [0x8A, U+1EBE], [0x8B, U+1EC0], [0x8C, U+1EC2], [0x8D, U+1EC4], [0x8E, U+1EC6], [0x8F, U+1ED0], [0x90, U+1ED2], [0x91, U+1ED4], [0x92, U+1ED6], [0x93, U+1ED8], [0x94, U+1EE2], [0x95, U+1EDA], [0x96, U+1EDC], [0x97, U+1EDE], [0x98, U+1ECA], [0x99, U+1ECE], [0x9A, U+1ECC], [0x9B, U+1EC8], [0x9C, U+1EE6], [0x9D, U+0168], [0x9E, U+1EE4], [0x9F, U+1EF2], [0xA0, U+00D5], [0xA1, U+1EAF], [0xA2, U+1EB1], [0xA3, U+1EB7], [0xA4, U+1EA5], [0xA5, U+1EA7], [0xA6, U+1EA9], [0xA7, U+1EAD], [0xA8, U+1EBD], [0xA9, U+1EB9], [0xAA, U+1EBF], [0xAB, U+1EC1], [0xAC, U+1EC3], [0xAD, U+1EC5], [0xAE, U+1EC7], [0xAF, U+1ED1], [0xB0, U+1ED3], [0xB1, U+1ED5], [0xB2, U+1ED7], [0xB3, U+1EE0], [0xB4, U+01A0], [0xB5, U+1ED9], [0xB6, U+1EDD], [0xB7, U+1EDF], [0xB8, U+1ECB], [0xB9, U+1EF0], [0xBA, U+1EE8], [0xBB, U+1EEA], [0xBC, U+1EEC], [0xBD, U+01A1], [0xBE, U+1EDB], [0xBF, U+01AF], [0xC0, U+00C0], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+00C3], [0xC4, U+1EA2], [0xC5, U+0102], [0xC6, U+1EB3], [0xC7, U+1EB5], [0xC8, U+00C8], [0xC9, U+00C9], [0xCA, U+00CA], [0xCB, U+1EBA], [0xCC, U+00CC], [0xCD, U+00CD], [0xCE, U+0128], [0xCF, U+1EF3], [0xD0, U+0110], [0xD1, U+1EE9], [0xD2, U+00D2], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+1EA1], [0xD6, U+1EF7], [0xD7, U+1EEB], [0xD8, U+1EED], [0xD9, U+00D9], [0xDA, U+00DA], [0xDB, U+1EF9], [0xDC, U+1EF5], [0xDD, U+00DD], [0xDE, U+1EE1], [0xDF, U+01B0], [0xE0, U+00E0], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+00E3], [0xE4, U+1EA3], [0xE5, U+0103], [0xE6, U+1EEF], [0xE7, U+1EAB], [0xE8, U+00E8], [0xE9, U+00E9], [0xEA, U+00EA], [0xEB, U+1EBB], [0xEC, U+00EC], [0xED, U+00ED], [0xEE, U+0129], [0xEF, U+1EC9], [0xF0, U+0111], [0xF1, U+1EF1], [0xF2, U+00F2], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+00F5], [0xF6, U+1ECF], [0xF7, U+1ECD], [0xF8, U+1EE5], [0xF9, U+00F9], [0xFA, U+00FA], [0xFB, U+0169], [0xFC, U+1EE7], [0xFD, U+00FD], [0xFE, U+1EE3], [0xFF, U+1EEE]
      windows_1250,                   cswindows1250 = 0x92u,                                                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+20AC], [0x82, U+201A], [0x84, U+201E], [0x85, U+2026], [0x86, U+2020], [0x87, U+2021], [0x89, U+2030], [0x8A, U+0160], [0x8B, U+2039], [0x8C, U+015A], [0x8D, U+0164], [0x8E, U+017D], [0x8F, U+0179], [0x91, U+2018], [0x92, U+2019], [0x93, U+201C], [0x94, U+201D], [0x95, U+2022], [0x96, U+2013], [0x97, U+2014], [0x99, U+2122], [0x9A, U+0161], [0x9B, U+203A], [0x9C, U+015B], [0x9D, U+0165], [0x9E, U+017E], [0x9F, U+017A], [0xA0, U+00A0], [0xA1, U+02C7], [0xA2, U+02D8], [0xA3, U+0141], [0xA4, U+00A4], [0xA5, U+0104], [0xA6, U+00A6], [0xA7, U+00A7], [0xA8, U+00A8], [0xA9, U+00A9], [0xAA, U+015E], [0xAB, U+00AB], [0xAC, U+00AC], [0xAD, U+00AD], [0xAE, U+00AE], [0xAF, U+017B], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+02DB], [0xB3, U+0142], [0xB4, U+00B4], [0xB5, U+00B5], [0xB6, U+00B6], [0xB7, U+00B7], [0xB8, U+00B8], [0xB9, U+0105], [0xBA, U+015F], [0xBB, U+00BB], [0xBC, U+013D], [0xBD, U+02DD], [0xBE, U+013E], [0xBF, U+017C], [0xC0, U+0154], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+0102], [0xC4, U+00C4], [0xC5, U+0139], [0xC6, U+0106], [0xC7, U+00C7], [0xC8, U+010C], [0xC9, U+00C9], [0xCA, U+0118], [0xCB, U+00CB], [0xCC, U+011A], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+010E], [0xD0, U+0110], [0xD1, U+0143], [0xD2, U+0147], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+0150], [0xD6, U+00D6], [0xD7, U+00D7], [0xD8, U+0158], [0xD9, U+016E], [0xDA, U+00DA], [0xDB, U+0170], [0xDC, U+00DC], [0xDD, U+00DD], [0xDE, U+0162], [0xDF, U+00DF], [0xE0, U+0155], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+0103], [0xE4, U+00E4], [0xE5, U+013A], [0xE6, U+0107], [0xE7, U+00E7], [0xE8, U+010D], [0xE9, U+00E9], [0xEA, U+0119], [0xEB, U+00EB], [0xEC, U+011B], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+010F], [0xF0, U+0111], [0xF1, U+0144], [0xF2, U+0148], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+0151], [0xF6, U+00F6], [0xF7, U+00F7], [0xF8, U+0159], [0xF9, U+016F], [0xFA, U+00FA], [0xFB, U+0171], [0xFC, U+00FC], [0xFD, U+00FD], [0xFE, U+0163], [0xFF, U+02D9]
      windows_1252,                   cswindows1252 = 0x93u,                                                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+20AC], [0x82, U+201A], [0x83, U+0192], [0x84, U+201E], [0x85, U+2026], [0x86, U+2020], [0x87, U+2021], [0x88, U+02C6], [0x89, U+2030], [0x8A, U+0160], [0x8B, U+2039], [0x8C, U+0152], [0x8E, U+017D], [0x91, U+2018], [0x92, U+2019], [0x93, U+201C], [0x94, U+201D], [0x95, U+2022], [0x96, U+2013], [0x97, U+2014], [0x98, U+02DC], [0x99, U+2122], [0x9A, U+0161], [0x9B, U+203A], [0x9C, U+0153], [0x9E, U+017E], [0x9F, U+0178], [0xA0, U+00A0], [0xA1, U+00A1], [0xA2, U+00A2], [0xA3, U+00A3], [0xA4, U+00A4], [0xA5, U+00A5], [0xA6, U+00A6], [0xA7, U+00A7], [0xA8, U+00A8], [0xA9, U+00A9], [0xAA, U+00AA], [0xAB, U+00AB], [0xAC, U+00AC], [0xAD, U+00AD], [0xAE, U+00AE], [0xAF, U+00AF], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+00B2], [0xB3, U+00B3], [0xB4, U+00B4], [0xB5, U+00B5], [0xB6, U+00B6], [0xB7, U+00B7], [0xB8, U+00B8], [0xB9, U+00B9], [0xBA, U+00BA], [0xBB, U+00BB], [0xBC, U+00BC], [0xBD, U+00BD], [0xBE, U+00BE], [0xBF, U+00BF], [0xC0, U+00C0], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+00C3], [0xC4, U+00C4], [0xC5, U+00C5], [0xC6, U+00C6], [0xC7, U+00C7], [0xC8, U+00C8], [0xC9, U+00C9], [0xCA, U+00CA], [0xCB, U+00CB], [0xCC, U+00CC], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+00CF], [0xD0, U+00D0], [0xD1, U+00D1], [0xD2, U+00D2], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+00D5], [0xD6, U+00D6], [0xD7, U+00D7], [0xD8, U+00D8], [0xD9, U+00D9], [0xDA, U+00DA], [0xDB, U+00DB], [0xDC, U+00DC], [0xDD, U+00DD], [0xDE, U+00DE], [0xDF, U+00DF], [0xE0, U+00E0], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+00E3], [0xE4, U+00E4], [0xE5, U+00E5], [0xE6, U+00E6], [0xE7, U+00E7], [0xE8, U+00E8], [0xE9, U+00E9], [0xEA, U+00EA], [0xEB, U+00EB], [0xEC, U+00EC], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+00EF], [0xF0, U+00F0], [0xF1, U+00F1], [0xF2, U+00F2], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+00F5], [0xF6, U+00F6], [0xF7, U+00F7], [0xF8, U+00F8], [0xF9, U+00F9], [0xFA, U+00FA], [0xFB, U+00FB], [0xFC, U+00FC], [0xFD, U+00FD], [0xFE, U+00FE], [0xFF, U+00FF]
      windows_1254,                   cswindows1254 = 0x94u,                                                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+20AC], [0x82, U+201A], [0x83, U+0192], [0x84, U+201E], [0x85, U+2026], [0x86, U+2020], [0x87, U+2021], [0x88, U+02C6], [0x89, U+2030], [0x8A, U+0160], [0x8B, U+2039], [0x8C, U+0152], [0x91, U+2018], [0x92, U+2019], [0x93, U+201C], [0x94, U+201D], [0x95, U+2022], [0x96, U+2013], [0x97, U+2014], [0x98, U+02DC], [0x99, U+2122], [0x9A, U+0161], [0x9B, U+203A], [0x9C, U+0153], [0x9F, U+0178], [0xA0, U+00A0], [0xA1, U+00A1], [0xA2, U+00A2], [0xA3, U+00A3], [0xA4, U+00A4], [0xA5, U+00A5], [0xA6, U+00A6], [0xA7, U+00A7], [0xA8, U+00A8], [0xA9, U+00A9], [0xAA, U+00AA], [0xAB, U+00AB], [0xAC, U+00AC], [0xAD, U+00AD], [0xAE, U+00AE], [0xAF, U+00AF], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+00B2], [0xB3, U+00B3], [0xB4, U+00B4], [0xB5, U+00B5], [0xB6, U+00B6], [0xB7, U+00B7], [0xB8, U+00B8], [0xB9, U+00B9], [0xBA, U+00BA], [0xBB, U+00BB], [0xBC, U+00BC], [0xBD, U+00BD], [0xBE, U+00BE], [0xBF, U+00BF], [0xC0, U+00C0], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+00C3], [0xC4, U+00C4], [0xC5, U+00C5], [0xC6, U+00C6], [0xC7, U+00C7], [0xC8, U+00C8], [0xC9, U+00C9], [0xCA, U+00CA], [0xCB, U+00CB], [0xCC, U+00CC], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+00CF], [0xD0, U+011E], [0xD1, U+00D1], [0xD2, U+00D2], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+00D5], [0xD6, U+00D6], [0xD7, U+00D7], [0xD8, U+00D8], [0xD9, U+00D9], [0xDA, U+00DA], [0xDB, U+00DB], [0xDC, U+00DC], [0xDD, U+0130], [0xDE, U+015E], [0xDF, U+00DF], [0xE0, U+00E0], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+00E3], [0xE4, U+00E4], [0xE5, U+00E5], [0xE6, U+00E6], [0xE7, U+00E7], [0xE8, U+00E8], [0xE9, U+00E9], [0xEA, U+00EA], [0xEB, U+00EB], [0xEC, U+00EC], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+00EF], [0xF0, U+011F], [0xF1, U+00F1], [0xF2, U+00F2], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+00F5], [0xF6, U+00F6], [0xF7, U+00F7], [0xF8, U+00F8], [0xF9, U+00F9], [0xFA, U+00FA], [0xFB, U+00FB], [0xFC, U+00FC], [0xFD, U+0131], [0xFE, U+015F], [0xFF, U+00FF]
      windows_1257,                   cswindows1257 = 0x95u,                                                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+20AC], [0x82, U+201A], [0x84, U+201E], [0x85, U+2026], [0x86, U+2020], [0x87, U+2021], [0x89, U+2030], [0x8B, U+2039], [0x8D, U+00A8], [0x8E, U+02C7], [0x8F, U+00B8], [0x91, U+2018], [0x92, U+2019], [0x93, U+201C], [0x94, U+201D], [0x95, U+2022], [0x96, U+2013], [0x97, U+2014], [0x99, U+2122], [0x9B, U+203A], [0x9D, U+00AF], [0x9E, U+02DB], [0xA0, U+00A0], [0xA2, U+00A2], [0xA3, U+00A3], [0xA4, U+00A4], [0xA6, U+00A6], [0xA7, U+00A7], [0xA8, U+00D8], [0xA9, U+00A9], [0xAA, U+0156], [0xAB, U+00AB], [0xAC, U+00AC], [0xAD, U+00AD], [0xAE, U+00AE], [0xAF, U+00C6], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+00B2], [0xB3, U+00B3], [0xB4, U+00B4], [0xB5, U+00B5], [0xB6, U+00B6], [0xB7, U+00B7], [0xB8, U+00F8], [0xB9, U+00B9], [0xBA, U+0157], [0xBB, U+00BB], [0xBC, U+00BC], [0xBD, U+00BD], [0xBE, U+00BE], [0xBF, U+00E6], [0xC0, U+0104], [0xC1, U+012E], [0xC2, U+0100], [0xC3, U+0106], [0xC4, U+00C4], [0xC5, U+00C5], [0xC6, U+0118], [0xC7, U+0112], [0xC8, U+010C], [0xC9, U+00C9], [0xCA, U+0179], [0xCB, U+0116], [0xCC, U+0122], [0xCD, U+0136], [0xCE, U+012A], [0xCF, U+013B], [0xD0, U+0160], [0xD1, U+0143], [0xD2, U+0145], [0xD3, U+00D3], [0xD4, U+014C], [0xD5, U+00D5], [0xD6, U+00D6], [0xD7, U+00D7], [0xD8, U+0172], [0xD9, U+0141], [0xDA, U+015A], [0xDB, U+016A], [0xDC, U+00DC], [0xDD, U+017B], [0xDE, U+017D], [0xDF, U+00DF], [0xE0, U+0105], [0xE1, U+012F], [0xE2, U+0101], [0xE3, U+0107], [0xE4, U+00E4], [0xE5, U+00E5], [0xE6, U+0119], [0xE7, U+0113], [0xE8, U+010D], [0xE9, U+00E9], [0xEA, U+017A], [0xEB, U+0117], [0xEC, U+0123], [0xED, U+0137], [0xEE, U+012B], [0xEF, U+013C], [0xF0, U+0161], [0xF1, U+0144], [0xF2, U+0146], [0xF3, U+00F3], [0xF4, U+014D], [0xF5, U+00F5], [0xF6, U+00F6], [0xF7, U+00F7], [0xF8, U+0173], [0xF9, U+0142], [0xFA, U+015B], [0xFB, U+016B], [0xFC, U+00FC], [0xFD, U+017C], [0xFE, U+017E], [0xFF, U+02D9]
      windows_1258,                   cswindows1258 = 0x96u,                                                                                                                                                     // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+005B], [0x5C, U+005C], [0x5D, U+005D], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+007B], [0x7C, U+007C], [0x7D, U+007D], [0x7E, U+007E], [0x7F, U+007F], [0x80, U+20AC], [0x82, U+201A], [0x83, U+0192], [0x84, U+201E], [0x85, U+2026], [0x86, U+2020], [0x87, U+2021], [0x88, U+02C6], [0x89, U+2030], [0x8B, U+2039], [0x8C, U+0152], [0x91, U+2018], [0x92, U+2019], [0x93, U+201C], [0x94, U+201D], [0x95, U+2022], [0x96, U+2013], [0x97, U+2014], [0x98, U+02DC], [0x99, U+2122], [0x9B, U+203A], [0x9C, U+0153], [0x9F, U+0178], [0xA0, U+00A0], [0xA1, U+00A1], [0xA2, U+00A2], [0xA3, U+00A3], [0xA4, U+00A4], [0xA5, U+00A5], [0xA6, U+00A6], [0xA7, U+00A7], [0xA8, U+00A8], [0xA9, U+00A9], [0xAA, U+00AA], [0xAB, U+00AB], [0xAC, U+00AC], [0xAD, U+00AD], [0xAE, U+00AE], [0xAF, U+00AF], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+00B2], [0xB3, U+00B3], [0xB4, U+00B4], [0xB5, U+00B5], [0xB6, U+00B6], [0xB7, U+00B7], [0xB8, U+00B8], [0xB9, U+00B9], [0xBA, U+00BA], [0xBB, U+00BB], [0xBC, U+00BC], [0xBD, U+00BD], [0xBE, U+00BE], [0xBF, U+00BF], [0xC0, U+00C0], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+0102], [0xC4, U+00C4], [0xC5, U+00C5], [0xC6, U+00C6], [0xC7, U+00C7], [0xC8, U+00C8], [0xC9, U+00C9], [0xCA, U+00CA], [0xCB, U+00CB], [0xCC, U+0300], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+00CF], [0xD0, U+0110], [0xD1, U+00D1], [0xD2, U+0309], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+01A0], [0xD6, U+00D6], [0xD7, U+00D7], [0xD8, U+00D8], [0xD9, U+00D9], [0xDA, U+00DA], [0xDB, U+00DB], [0xDC, U+00DC], [0xDD, U+01AF], [0xDE, U+0303], [0xDF, U+00DF], [0xE0, U+00E0], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+0103], [0xE4, U+00E4], [0xE5, U+00E5], [0xE6, U+00E6], [0xE7, U+00E7], [0xE8, U+00E8], [0xE9, U+00E9], [0xEA, U+00EA], [0xEB, U+00EB], [0xEC, U+0301], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+00EF], [0xF0, U+0111], [0xF1, U+00F1], [0xF2, U+0323], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+01A1], [0xF6, U+00F6], [0xF7, U+00F7], [0xF8, U+00F8], [0xF9, U+00F9], [0xFA, U+00FA], [0xFB, U+00FB], [0xFC, U+00FC], [0xFD, U+01B0], [0xFE, U+20AB], [0xFF, U+00FF]
      x_DIN_66303,                                                                                                                                                                                               // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+00A7], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00C4], [0x5C, U+00D6], [0x5D, U+00DC], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E4], [0x7C, U+00F6], [0x7D, U+00FC], [0x7E, U+00DF], [0x7F, U+007F], [0x80, U+0080], [0x81, U+0081], [0x82, U+0082], [0x83, U+0083], [0x84, U+0084], [0x85, U+0085], [0x86, U+0086], [0x87, U+0087], [0x88, U+0088], [0x89, U+0089], [0x8A, U+008A], [0x8B, U+008B], [0x8C, U+008C], [0x8D, U+008D], [0x8E, U+008E], [0x8F, U+008F], [0x90, U+0090], [0x91, U+0091], [0x92, U+0092], [0x93, U+0093], [0x94, U+0094], [0x95, U+0095], [0x96, U+0096], [0x97, U+0097], [0x98, U+0098], [0x99, U+0099], [0x9A, U+009A], [0x9B, U+009B], [0x9C, U+009C], [0x9D, U+009D], [0x9E, U+009E], [0x9F, U+009F], [0xA0, U+00A0], [0xA1, U+00A1], [0xA2, U+00A2], [0xA3, U+00A3], [0xA4, U+00A4], [0xA5, U+00A5], [0xA6, U+00A6], [0xA7, U+0040], [0xA8, U+00A8], [0xA9, U+00A9], [0xAA, U+00AA], [0xAB, U+00AB], [0xAC, U+00AC], [0xAD, U+00AD], [0xAE, U+00AE], [0xAF, U+00AF], [0xB0, U+00B0], [0xB1, U+00B1], [0xB2, U+00B2], [0xB3, U+00B3], [0xB4, U+00B4], [0xB5, U+00B5], [0xB6, U+00B6], [0xB7, U+00B7], [0xB8, U+00B8], [0xB9, U+00B9], [0xBA, U+00BA], [0xBB, U+00BB], [0xBC, U+00BC], [0xBD, U+00BD], [0xBE, U+00BE], [0xBF, U+00BF], [0xC0, U+00C0], [0xC1, U+00C1], [0xC2, U+00C2], [0xC3, U+00C3], [0xC4, U+005B], [0xC5, U+00C5], [0xC6, U+00C6], [0xC7, U+00C7], [0xC8, U+00C8], [0xC9, U+00C9], [0xCA, U+00CA], [0xCB, U+00CB], [0xCC, U+00CC], [0xCD, U+00CD], [0xCE, U+00CE], [0xCF, U+00CF], [0xD0, U+00D0], [0xD1, U+00D1], [0xD2, U+00D2], [0xD3, U+00D3], [0xD4, U+00D4], [0xD5, U+00D5], [0xD6, U+005C], [0xD7, U+00D7], [0xD8, U+00D8], [0xD9, U+00D9], [0xDA, U+00DA], [0xDB, U+00DB], [0xDC, U+005D], [0xDD, U+00DD], [0xDE, U+00DE], [0xDF, U+007E], [0xE0, U+00E0], [0xE1, U+00E1], [0xE2, U+00E2], [0xE3, U+00E3], [0xE4, U+007B], [0xE5, U+00E5], [0xE6, U+00E6], [0xE7, U+00E7], [0xE8, U+00E8], [0xE9, U+00E9], [0xEA, U+00EA], [0xEB, U+00EB], [0xEC, U+00EC], [0xED, U+00ED], [0xEE, U+00EE], [0xEF, U+00EF], [0xF0, U+00F0], [0xF1, U+00F1], [0xF2, U+00F2], [0xF3, U+00F3], [0xF4, U+00F4], [0xF5, U+00F5], [0xF6, U+007C], [0xF7, U+00F7], [0xF8, U+00F8], [0xF9, U+00F9], [0xFA, U+00FA], [0xFB, U+00FB], [0xFC, U+007D], [0xFD, U+00FD], [0xFE, U+00FE], [0xFF, U+00FF]

      Adobe_Symbol_Encoding                         = 0x00u, csHPPSMath = 0x00u,
      Amiga_1251                                    = 0x00u,
      ANSI_X3_110_1983                              = 0x00u, CSA_T500_1983 = 0x00u, csISO99NAPLPS = 0x00u, iso_ir_99 = 0x00u, NAPLPS = 0x00u,
      ASMO_449                                      = 0x00u, arabic7 = 0x00u, csISO89ASMO449 = 0x00u, iso_ir_89 = 0x00u, ISO_9036 = 0x00u,
      Big5                                          = 0x00u, csBig5 = 0x00u,
      Big5_HKSCS                                    = 0x00u, csBig5HKSCS = 0x00u,
      BOCU_1                                        = 0x00u, csBOCU_1 = 0x00u, csBOCU1 = 0x00u,
      BRF                                           = 0x00u, csBRF = 0x00u,
      CESU_8                                        = 0x00u, csCESU_8 = 0x00u, csCESU8 = 0x00u,
      CP50220                                       = 0x00u,
      CP51932                                       = 0x00u, csCP51932 = 0x00u,
      ECMA_cyrillic                                 = 0x00u, csISO111ECMACyrillic = 0x00u, iso_ir_111 = 0x00u, KOI8_E = 0x00u,
      EUC_KR                                        = 0x00u, csEUCKR = 0x00u,
      Extended_UNIX_Code_Fixed_Width_for_Japanese   = 0x00u, csEUCFixWidJapanese = 0x00u,
      Extended_UNIX_Code_Packed_Format_for_Japanese = 0x00u, csEUCPkdFmtJapanese = 0x00u, EUC_JP = 0x00u,
      GB18030                                       = 0x00u, csGB18030 = 0x00u,
      GB2312                                        = 0x00u, csGB2312 = 0x00u,
      GB_2312_80                                    = 0x00u, chinese = 0x00u, csISO58GB231280 = 0x00u, iso_ir_58 = 0x00u,
      GBK                                           = 0x00u, CP936 = 0x00u, csGBK = 0x00u, MS936 = 0x00u, windows_936 = 0x00u,
      GOST_19768_74                                 = 0x00u, csISO153GOST1976874 = 0x00u, iso_ir_153 = 0x00u, ST_SEV_358_88 = 0x00u,
      greek_ccitt                                   = 0x00u, csISO150 = 0x00u, csISO150GreekCCITT = 0x00u, iso_ir_150 = 0x00u,
      greek7                                        = 0x00u, csISO88Greek7 = 0x00u, iso_ir_88 = 0x00u,
      greek7_old                                    = 0x00u, csISO18Greek7Old = 0x00u, iso_ir_18 = 0x00u,
      HP_DeskTop                                    = 0x00u, csHPDesktop = 0x00u,
      HP_Legal                                      = 0x00u, csHPLegal = 0x00u,
      HP_Math8                                      = 0x00u, csHPMath8 = 0x00u,
      HP_Pi_font                                    = 0x00u, csHPPiFont = 0x00u,
      HZ_GB_2312                                    = 0x00u,
      IBM_Symbols                                   = 0x00u, csIBMSymbols = 0x00u,
      IBM_Thai                                      = 0x00u, csIBMThai = 0x00u,
      IBM420                                        = 0x00u, cp420 = 0x00u, csIBM420 = 0x00u, ebcdic_cp_ar1 = 0x00u,
      IBM423                                        = 0x00u, cp423 = 0x00u, csIBM423 = 0x00u, ebcdic_cp_gr = 0x00u,
      IBM424                                        = 0x00u, cp424 = 0x00u, csIBM424 = 0x00u, ebcdic_cp_he = 0x00u,
      IBM855                                        = 0x00u, cp855 = 0x00u, csIBM855 = 0x00u,
      IBM864                                        = 0x00u, cp864 = 0x00u, csIBM864 = 0x00u,
      IBM866                                        = 0x00u, cp866 = 0x00u, csIBM866 = 0x00u,
      IBM868                                        = 0x00u, cp_ar = 0x00u, CP868 = 0x00u, csIBM868 = 0x00u,
      IBM869                                        = 0x00u, cp_gr = 0x00u, cp869 = 0x00u, csIBM869 = 0x00u,
      IBM880                                        = 0x00u, cp880 = 0x00u, csIBM880 = 0x00u, EBCDIC_Cyrillic = 0x00u,
      IBM918                                        = 0x00u, CP918 = 0x00u, csIBM918 = 0x00u, ebcdic_cp_ar2 = 0x00u,
      INIS_8                                        = 0x00u, csISO50INIS8 = 0x00u, iso_ir_50 = 0x00u,
      INIS_cyrillic                                 = 0x00u, csISO51INISCyrillic = 0x00u, iso_ir_51 = 0x00u,
      ISO_10646_J_1                                 = 0x00u, csUnicodeJapanese = 0x00u,
      ISO_10646_UCS_2                               = 0x00u, csUnicode = 0x00u,
      ISO_10646_UCS_4                               = 0x00u, csUCS4 = 0x00u,
      ISO_10646_UCS_Basic                           = 0x00u, csUnicodeASCII = 0x00u,
      ISO_10646_Unicode_Latin1                      = 0x00u, csUnicodeLatin1 = 0x00u, ISO_10646 = 0x00u,
      ISO_10646_UTF_1                               = 0x00u, csISO10646UTF1 = 0x00u,
      ISO_11548_1                                   = 0x00u, csISO115481 = 0x00u, ISO_TR_11548_1 = 0x00u,
      ISO_2022_CN                                   = 0x00u, csISO2022CN = 0x00u,
      ISO_2022_CN_EXT                               = 0x00u, csISO2022CNEXT = 0x00u,
      ISO_2022_JP                                   = 0x00u, csISO2022JP = 0x00u,
      ISO_2022_JP_2                                 = 0x00u, csISO2022JP2 = 0x00u,
      ISO_2022_KR                                   = 0x00u, csISO2022KR = 0x00u,
      ISO_8859_1_Windows_3_0_Latin_1                = 0x00u, csWindows30Latin1 = 0x00u,
      ISO_8859_2_Windows_Latin_2                    = 0x00u, csWindows31Latin2 = 0x00u,
      ISO_8859_9_Windows_Latin_5                    = 0x00u, csWindows31Latin5 = 0x00u,
      iso_ir_90                                     = 0x00u, csISO90 = 0x00u,
      ISO_Unicode_IBM_1261                          = 0x00u, csUnicodeIBM1261 = 0x00u,
      ISO_Unicode_IBM_1264                          = 0x00u, csUnicodeIBM1264 = 0x00u,
      ISO_Unicode_IBM_1265                          = 0x00u, csUnicodeIBM1265 = 0x00u,
      ISO_Unicode_IBM_1268                          = 0x00u, csUnicodeIBM1268 = 0x00u,
      ISO_Unicode_IBM_1276                          = 0x00u, csUnicodeIBM1276 = 0x00u,
      ISO_5427                                      = 0x00u, csISO5427Cyrillic = 0x00u, iso_ir_37 = 0x00u,
      ISO_5427_1981                                 = 0x00u, csISO54271981 = 0x00u, iso_ir_54 = 0x00u, ISO5427Cyrillic1981 = 0x00u,
      ISO_5428_1980                                 = 0x00u, csISO5428Greek = 0x00u, iso_ir_55 = 0x00u,
      ISO_6937_2_add                                = 0x00u, csISOTextComm = 0x00u, iso_ir_142 = 0x00u,
      ISO_8859_8_E                                  = 0x00u, csISO88598E = 0x00u,
      ISO_8859_8_I                                  = 0x00u, csISO88598I = 0x00u,
      ISO_8859_8_1988                               = 0x00u, csISOLatinHebrew = 0x00u, hebrew = 0x00u, ISO_8859_8 = 0x00u, iso_ir_138 = 0x00u,
      JIS_C6220_1969_jp                             = 0x00u, csISO13JISC6220jp = 0x00u, iso_ir_13 = 0x00u, JIS_C6220_1969 = 0x00u, katakana = 0x00u, x0201_7 = 0x00u,
      JIS_C6226_1978                                = 0x00u, csISO42JISC62261978 = 0x00u, iso_ir_42 = 0x00u,
      JIS_C6226_1983                                = 0x00u, csISO87JISX0208 = 0x00u, iso_ir_87 = 0x00u, JIS_X0208_1983 = 0x00u, x0208 = 0x00u,
      JIS_C6229_1984_kana                           = 0x00u, csISO96JISC62291984kana = 0x00u, iso_ir_96 = 0x00u,
      JIS_Encoding                                  = 0x00u, csJISEncoding = 0x00u,
      JIS_X0212_1990                                = 0x00u, csISO159JISX02121990 = 0x00u, iso_ir_159 = 0x00u, x0212 = 0x00u,
      JUS_I_B1_003_mac                              = 0x00u, csISO147Macedonian = 0x00u, iso_ir_147 = 0x00u, macedonian = 0x00u,
      JUS_I_B1_003_serb                             = 0x00u, csISO146Serbian = 0x00u, iso_ir_146 = 0x00u, serbian = 0x00u,
      KS_C_5601_1987                                = 0x00u, csKSC56011987 = 0x00u, iso_ir_149 = 0x00u, korean = 0x00u, KS_C_5601_1989 = 0x00u, KSC_5601 = 0x00u,
      Microsoft_Publishing                          = 0x00u, csMicrosoftPublishing = 0x00u,
      MNEM                                          = 0x00u, csMnem = 0x00u,
      MNEMONIC                                      = 0x00u, csMnemonic = 0x00u,
      OSD_EBCDIC_DF03_IRV                           = 0x00u, csOSDEBCDICDF03IRV = 0x00u,
      OSD_EBCDIC_DF04_1                             = 0x00u, csOSDEBCDICDF041 = 0x00u,
      OSD_EBCDIC_DF04_15                            = 0x00u, csOSDEBCDICDF0415 = 0x00u,
      PC8_Danish_Norwegian                          = 0x00u, csPC8DanishNorwegian = 0x00u,
      PC8_Turkish                                   = 0x00u, csPC8Turkish = 0x00u,
      PTCP154                                       = 0x00u, CP154 = 0x00u, csPTCP154 = 0x00u, Cyrillic_Asian = 0x00u, PT154 = 0x00u,
      SCSU                                          = 0x00u, csSCSU = 0x00u,
      Shift_JIS                                     = 0x00u, csShiftJIS = 0x00u, MS_Kanji = 0x00u,
      T_101_G2                                      = 0x00u, csISO128T101G2 = 0x00u, iso_ir_128 = 0x00u,
      TSCII                                         = 0x00u, csTSCII = 0x00u,
      UNICODE_1_1                                   = 0x00u, csUnicode11 = 0x00u,
      UNICODE_1_1_UTF_7                             = 0x00u, csUnicode11UTF7 = 0x00u,
      UNKNOWN_8BIT                                  = 0x00u, csUnknown8BiT = 0x00u,
      UTF_7                                         = 0x00u, csUTF7 = 0x00u,
      Ventura_International                         = 0x00u, csVenturaInternational = 0x00u,
      Ventura_Math                                  = 0x00u, csVenturaMath = 0x00u,
      Ventura_US                                    = 0x00u, csVenturaUS = 0x00u,
      videotex_suppl                                = 0x00u, csISO70VideotexSupp1 = 0x00u, iso_ir_70 = 0x00u,
      VIQR                                          = 0x00u, csVIQR = 0x00u,
      windows_1251                                  = 0x00u, cswindows1251 = 0x00u,
      windows_1253                                  = 0x00u, cswindows1253 = 0x00u,
      windows_1255                                  = 0x00u, cswindows1255 = 0x00u,
      windows_1256                                  = 0x00u, cswindows1256 = 0x00u,
      Windows_31J                                   = 0x00u, csWindows31J = 0x00u,
      windows_874                                   = 0x00u, cswindows874 = 0x00u,
      x_Adobe_Zapf_Dingbats_Encoding                = 0x00u
    } type;

    // ... ->> Measured in code units
    template <typename type>
    constexpr static uint_fast8_t lengthof(type const source, std::size_t const sourceLength, typename encoding::type const encoding) noexcept {
      return
        encoding::UTF_32 == encoding ? lengthof(source, sourceLength, endianness::little_endian == endianness::get() ? encoding::UTF_32LE : encoding::UTF_32BE) :
        encoding::UTF_16 == encoding ? lengthof(source, sourceLength, endianness::little_endian == endianness::get() ? encoding::UTF_16LE : encoding::UTF_16BE) :
        encoding::UTF_8  == encoding ?
          bytes::get_bits<8u>(source, sourceLength, 0u, endianness::little_endian) <= 0x7Fu                                                                                      ? 1u :
          bytes::get_bits<8u>(source, sourceLength, 0u, endianness::little_endian) >= 0xC0u && bytes::get_bits<8u>(source, sourceLength, 0u, endianness::little_endian) <= 0xDFu ? 2u :
          bytes::get_bits<8u>(source, sourceLength, 0u, endianness::little_endian) >= 0xE0u && bytes::get_bits<8u>(source, sourceLength, 0u, endianness::little_endian) <= 0xEFu ? 3u :
          bytes::get_bits<8u>(source, sourceLength, 0u, endianness::little_endian) >= 0xF0u && bytes::get_bits<8u>(source, sourceLength, 0u, endianness::little_endian) <= 0xF7u ? 4u :
          0u :
        encoding::UTF_32LE == encoding ? 1u :
        encoding::UTF_32BE == encoding ? 1u :
        encoding::UTF_16LE == encoding ? 1u + (bytes::get_bits<16u>(source, sourceLength, 0u, endianness::little_endian) > 0xD7FFu && bytes::get_bits<16u>(source, sourceLength, 0u, endianness::little_endian) < 0xE000u) :
        encoding::UTF_16BE == encoding ? 1u + (bytes::get_bits<16u>(source, sourceLength, 0u, endianness::big_endian)    > 0xD7FFu && bytes::get_bits<16u>(source, sourceLength, 0u, endianness::big_endian)    < 0xE000u) :
      0x00u != static_cast<uint_least8_t>(encoding);
    }

    // ... ->> Measured in Unicode code points
    template <typename type>
    constexpr static uint_fast32_t valueof(type const source, uint_fast8_t const length, std::size_t const sourceLength, typename encoding::type const encoding) noexcept {
      return
        encoding::UTF_32 == encoding ? encoding::valueof(source, length, endianness::get() == endianness::little_endian ? encoding::UTF_32LE : encoding::UTF_32BE) :
        encoding::UTF_16 == encoding ? encoding::valueof(source, length, endianness::get() == endianness::little_endian ? encoding::UTF_16LE : encoding::UTF_16BE) :
        encoding::UTF_8  == encoding ?
          length == 1u ?
            bytes::get_bits<8u>(source, sourceLength) & 0x7Fu :
          length == 2u ?
            0x80u != (bytes::get_bits<8u>(source, sourceLength, 1u) & 0xC0u) ||
            0xC0u == (bytes::get_bits<8u>(source, sourceLength, 0u) & 0xE0u) ?
            0x000000u :
            ((bytes::get_bits<8u>(source, sourceLength, 1u) & 0x3Fu) << 0u) |
            ((bytes::get_bits<8u>(source, sourceLength, 0u) & 0x1Fu) << 6u) :
          length == 3u ?
            0x80u != (bytes::get_bits<8u>(source, sourceLength, 2u) & 0xC0u) ||
            0x80u != (bytes::get_bits<8u>(source, sourceLength, 1u) & 0xC0u) ||
            0xE0u == (bytes::get_bits<8u>(source, sourceLength, 0u) & 0xF0u) ?
            0x000000u :
            ((bytes::get_bits<8u>(source, sourceLength, 2u) & 0x3Fu) << 6u * 0u) |
            ((bytes::get_bits<8u>(source, sourceLength, 1u) & 0x3Fu) << 6u * 1u) |
            ((bytes::get_bits<8u>(source, sourceLength, 0u) & 0x0Fu) << 6u * 2u) :
          length == 4u ?
            0x80u != (bytes::get_bits<8u>(source, sourceLength, 3u) & 0xC0u) ||
            0x80u != (bytes::get_bits<8u>(source, sourceLength, 2u) & 0xC0u) ||
            0x80u != (bytes::get_bits<8u>(source, sourceLength, 1u) & 0xC0u) ||
            0xF0u == (bytes::get_bits<8u>(source, sourceLength, 0u) & 0xF8u) ?
            0x000000u :
            ((bytes::get_bits<8u>(source, sourceLength, 3u) & 0x3Fu) << 6u * 0u) |
            ((bytes::get_bits<8u>(source, sourceLength, 2u) & 0x3Fu) << 6u * 1u) |
            ((bytes::get_bits<8u>(source, sourceLength, 1u) & 0x3Fu) << 6u * 2u) |
            ((bytes::get_bits<8u>(source, sourceLength, 0u) & 0x07u) << 6u * 3u) :
          0x000000u :
        encoding::UTF_32LE == encoding ? bytes::get_bits<32u>(source, sourceLength, 0u, endianness::little_endian) :
        encoding::UTF_32BE == encoding ? bytes::get_bits<32u>(source, sourceLength, 0u, endianness::big_endian)    :
        encoding::UTF_16LE == encoding ? length == 1u ? bytes::get_bits<16u>(source, sourceLength, 0u, endianness::little_endian) : 0x110000u > (bytes::get_bits<16u>(source, sourceLength, 1u, endianness::little_endian) - 0xDC00u) + ((bytes::get_bits<16u>(source, sourceLength, 0u, endianness::little_endian) - 0xD800u) * 0x400u) ? (bytes::get_bits<16u>(source, sourceLength, 1u, endianness::little_endian) - 0xDC00u) + ((bytes::get_bits<16u>(source, sourceLength, 0u, endianness::little_endian) - 0xD800u) * 0x400u) : 0x000000u :
        encoding::UTF_16BE == encoding ? length == 1u ? bytes::get_bits<16u>(source, sourceLength, 0u, endianness::big_endian)    : 0x110000u > (bytes::get_bits<16u>(source, sourceLength, 1u, endianness::big_endian)    - 0xDC00u) + ((bytes::get_bits<16u>(source, sourceLength, 0u, endianness::big_endian)    - 0xD800u) * 0x400u) ? (bytes::get_bits<16u>(source, sourceLength, 1u, endianness::big_endian)    - 0xDC00u) + ((bytes::get_bits<16u>(source, sourceLength, 0u, endianness::big_endian)    - 0xD800u) * 0x400u) : 0x000000u :
        encoding::Adobe_Standard_Encoding == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x002215u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000192u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000A4u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x00201Cu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x002039u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x00203Au : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x00FB01u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x00FB02u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002013u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002020u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002021u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x002022u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x00201Au : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x00201Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00201Du : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x002026u : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x002030u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x0002CBu : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x0002C6u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x0002DCu : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x0002C9u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x0002D8u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x0002D9u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0002DAu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0002DDu : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0002D8u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0002C7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x002014u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000141u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000152u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000BAu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000131u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000142u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x000153u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DFu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::BS_4730 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x23u ? 0x0000A3u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000AFu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::BS_viewdata == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x23u ? 0x0000A3u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x002190u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000BDu : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x002192u : bytes::get_bits<7u>(source, sourceLength) == 0x5Eu ? 0x002191u : bytes::get_bits<7u>(source, sourceLength) == 0x5Fu ? 0x0025A1u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000BCu : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x002225u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000BEu : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000F7u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::CSA_Z243_4_1985_1 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x0000E0u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000E2u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000E7u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000EAu : bytes::get_bits<7u>(source, sourceLength) == 0x5Eu ? 0x0000EEu :
          bytes::get_bits<7u>(source, sourceLength) == 0x60u ? 0x0000F4u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E9u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F9u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000E8u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000FBu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::CSA_Z243_4_1985_2 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x0000E0u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000E2u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000E7u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000EAu : bytes::get_bits<7u>(source, sourceLength) == 0x5Eu ? 0x0000C9u :
          bytes::get_bits<7u>(source, sourceLength) == 0x60u ? 0x0000F4u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E9u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F9u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000E8u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000FBu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::CSA_Z243_4_1985_gr == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x0000B1u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x00207Du : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00207Eu : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x00207Au : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x00207Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x002070u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002074u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x002075u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x002076u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x002077u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x002078u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x002079u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0021D0u : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x002260u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x002265u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000DAu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x0000AEu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x0000B6u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x0003BCu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x002018u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x002019u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00201Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x00201Du : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000A6u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000FAu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x002510u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x002588u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::CSN_369103 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x24u ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x000104u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0002D8u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000141u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x00013Du : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x00015Au : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x00015Eu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x000164u : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x000179u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x00017Du : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x00017Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x000105u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0002DBu : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x000142u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x00013Eu : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x00015Bu : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0002C7u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00015Fu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x000165u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00017Au : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0002DDu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00017Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00017Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x000154u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000102u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000139u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000106u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x00010Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x000118u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00011Au : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00010Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000110u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000143u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000147u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000150u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000158u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x00016Eu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x000170u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x000162u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000155u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000103u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x00013Au : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000107u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x00010Du : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000119u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00011Bu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00010Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000111u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000144u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000148u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000151u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000159u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x00016Fu : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x000171u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x000163u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0002D9u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::DEC_MCS == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000152u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x000178u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000153u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::DIN_66003 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x0000A7u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000C4u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000D6u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000DCu :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E4u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F6u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000FCu : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000DFu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::dk_us   == encoding ? bytes::get_bits<7u>(source, sourceLength) :
        encoding::DS_2089 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000C6u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000D8u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000C5u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E6u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F8u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000E5u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::EBCDIC_AT_DE == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::EBCDIC_AT_DE_A == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x0000E4u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::EBCDIC_CA_FR == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::EBCDIC_DK_NO == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000A4u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::EBCDIC_DK_NO_A == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x0000E6u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::EBCDIC_ES == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0020A7u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::EBCDIC_ES_A == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0020A7u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x0000F1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::EBCDIC_ES_S == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::EBCDIC_FI_SE == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000A4u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::EBCDIC_FI_SE_A == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x0000E4u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::EBCDIC_FR == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::EBCDIC_IT == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::EBCDIC_PT == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F5u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000D5u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::EBCDIC_UK == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::EBCDIC_US == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ES == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x23u ? 0x0000A3u :
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x0000A7u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000A1u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000D1u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000BFu :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000B0u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F1u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000E7u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::ES2 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x002219u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000A1u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000D1u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000C7u : bytes::get_bits<7u>(source, sourceLength) == 0x5Eu ? 0x0000BFu :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000B4u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F1u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000E7u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000A8u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::GB_1988_80 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x24u ? 0x0000A5u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000AFu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::hp_roman8 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x002035u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x002227u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x00223Cu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0020A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000A4u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x000192u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000A2u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000FCu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000D4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x0000D5u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000F5u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x000178u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x0000B6u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x002014u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM00858 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x1Au ? 0x00001Cu : bytes::get_bits<8u>(source, sourceLength) == 0x1Cu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x00001Au :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000C5u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x0000FFu : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000D7u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x000192u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x0000AEu : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000BBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002593u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x002563u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002551u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002557u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00255Du : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x002510u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x00255Au : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x002554u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x002569u : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x002566u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x002560u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x002550u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00256Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x0020ACu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x002580u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0000F5u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0000D5u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000B4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000B1u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x002017u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x0000B6u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0000A0u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM00924 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x04u ? 0x00009Cu : bytes::get_bits<8u>(source, sourceLength) == 0x05u ? 0x000009u : bytes::get_bits<8u>(source, sourceLength) == 0x06u ? 0x000086u : bytes::get_bits<8u>(source, sourceLength) == 0x07u ? 0x00007Fu : bytes::get_bits<8u>(source, sourceLength) == 0x08u ? 0x000097u : bytes::get_bits<8u>(source, sourceLength) == 0x09u ? 0x00008Du : bytes::get_bits<8u>(source, sourceLength) == 0x0Au ? 0x00008Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x14u ? 0x00009Du : bytes::get_bits<8u>(source, sourceLength) == 0x15u ? 0x000085u : bytes::get_bits<8u>(source, sourceLength) == 0x16u ? 0x000008u : bytes::get_bits<8u>(source, sourceLength) == 0x17u ? 0x000087u : bytes::get_bits<8u>(source, sourceLength) == 0x1Au ? 0x000092u : bytes::get_bits<8u>(source, sourceLength) == 0x1Bu ? 0x00008Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x20u ? 0x000080u : bytes::get_bits<8u>(source, sourceLength) == 0x21u ? 0x000081u : bytes::get_bits<8u>(source, sourceLength) == 0x22u ? 0x000082u : bytes::get_bits<8u>(source, sourceLength) == 0x23u ? 0x000083u : bytes::get_bits<8u>(source, sourceLength) == 0x24u ? 0x000084u : bytes::get_bits<8u>(source, sourceLength) == 0x25u ? 0x00000Au : bytes::get_bits<8u>(source, sourceLength) == 0x26u ? 0x000017u : bytes::get_bits<8u>(source, sourceLength) == 0x27u ? 0x00001Bu : bytes::get_bits<8u>(source, sourceLength) == 0x28u ? 0x000088u : bytes::get_bits<8u>(source, sourceLength) == 0x29u ? 0x000089u : bytes::get_bits<8u>(source, sourceLength) == 0x2Au ? 0x00008Au : bytes::get_bits<8u>(source, sourceLength) == 0x2Bu ? 0x00008Bu : bytes::get_bits<8u>(source, sourceLength) == 0x2Cu ? 0x00008Cu : bytes::get_bits<8u>(source, sourceLength) == 0x2Du ? 0x000005u : bytes::get_bits<8u>(source, sourceLength) == 0x2Eu ? 0x000006u : bytes::get_bits<8u>(source, sourceLength) == 0x2Fu ? 0x000007u :
          bytes::get_bits<8u>(source, sourceLength) == 0x30u ? 0x000090u : bytes::get_bits<8u>(source, sourceLength) == 0x31u ? 0x000091u : bytes::get_bits<8u>(source, sourceLength) == 0x32u ? 0x000016u : bytes::get_bits<8u>(source, sourceLength) == 0x33u ? 0x000093u : bytes::get_bits<8u>(source, sourceLength) == 0x34u ? 0x000094u : bytes::get_bits<8u>(source, sourceLength) == 0x35u ? 0x000095u : bytes::get_bits<8u>(source, sourceLength) == 0x36u ? 0x000096u : bytes::get_bits<8u>(source, sourceLength) == 0x37u ? 0x000004u : bytes::get_bits<8u>(source, sourceLength) == 0x38u ? 0x000098u : bytes::get_bits<8u>(source, sourceLength) == 0x39u ? 0x000099u : bytes::get_bits<8u>(source, sourceLength) == 0x3Au ? 0x00009Au : bytes::get_bits<8u>(source, sourceLength) == 0x3Bu ? 0x00009Bu : bytes::get_bits<8u>(source, sourceLength) == 0x3Cu ? 0x000014u : bytes::get_bits<8u>(source, sourceLength) == 0x3Du ? 0x000015u : bytes::get_bits<8u>(source, sourceLength) == 0x3Eu ? 0x00009Eu : bytes::get_bits<8u>(source, sourceLength) == 0x3Fu ? 0x00001Au :
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x00017Eu : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0020ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x000152u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x000153u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x000178u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00017Du : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00009Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM01140 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x04u ? 0x00009Cu : bytes::get_bits<8u>(source, sourceLength) == 0x05u ? 0x000009u : bytes::get_bits<8u>(source, sourceLength) == 0x06u ? 0x000086u : bytes::get_bits<8u>(source, sourceLength) == 0x07u ? 0x00007Fu : bytes::get_bits<8u>(source, sourceLength) == 0x08u ? 0x000097u : bytes::get_bits<8u>(source, sourceLength) == 0x09u ? 0x00008Du : bytes::get_bits<8u>(source, sourceLength) == 0x0Au ? 0x00008Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x14u ? 0x00009Du : bytes::get_bits<8u>(source, sourceLength) == 0x15u ? 0x000085u : bytes::get_bits<8u>(source, sourceLength) == 0x16u ? 0x000008u : bytes::get_bits<8u>(source, sourceLength) == 0x17u ? 0x000087u : bytes::get_bits<8u>(source, sourceLength) == 0x1Au ? 0x000092u : bytes::get_bits<8u>(source, sourceLength) == 0x1Bu ? 0x00008Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x20u ? 0x000080u : bytes::get_bits<8u>(source, sourceLength) == 0x21u ? 0x000081u : bytes::get_bits<8u>(source, sourceLength) == 0x22u ? 0x000082u : bytes::get_bits<8u>(source, sourceLength) == 0x23u ? 0x000083u : bytes::get_bits<8u>(source, sourceLength) == 0x24u ? 0x000084u : bytes::get_bits<8u>(source, sourceLength) == 0x25u ? 0x00000Au : bytes::get_bits<8u>(source, sourceLength) == 0x26u ? 0x000017u : bytes::get_bits<8u>(source, sourceLength) == 0x27u ? 0x00001Bu : bytes::get_bits<8u>(source, sourceLength) == 0x28u ? 0x000088u : bytes::get_bits<8u>(source, sourceLength) == 0x29u ? 0x000089u : bytes::get_bits<8u>(source, sourceLength) == 0x2Au ? 0x00008Au : bytes::get_bits<8u>(source, sourceLength) == 0x2Bu ? 0x00008Bu : bytes::get_bits<8u>(source, sourceLength) == 0x2Cu ? 0x00008Cu : bytes::get_bits<8u>(source, sourceLength) == 0x2Du ? 0x000005u : bytes::get_bits<8u>(source, sourceLength) == 0x2Eu ? 0x000006u : bytes::get_bits<8u>(source, sourceLength) == 0x2Fu ? 0x000007u :
          bytes::get_bits<8u>(source, sourceLength) == 0x30u ? 0x000090u : bytes::get_bits<8u>(source, sourceLength) == 0x31u ? 0x000091u : bytes::get_bits<8u>(source, sourceLength) == 0x32u ? 0x000016u : bytes::get_bits<8u>(source, sourceLength) == 0x33u ? 0x000093u : bytes::get_bits<8u>(source, sourceLength) == 0x34u ? 0x000094u : bytes::get_bits<8u>(source, sourceLength) == 0x35u ? 0x000095u : bytes::get_bits<8u>(source, sourceLength) == 0x36u ? 0x000096u : bytes::get_bits<8u>(source, sourceLength) == 0x37u ? 0x000004u : bytes::get_bits<8u>(source, sourceLength) == 0x38u ? 0x000098u : bytes::get_bits<8u>(source, sourceLength) == 0x39u ? 0x000099u : bytes::get_bits<8u>(source, sourceLength) == 0x3Au ? 0x00009Au : bytes::get_bits<8u>(source, sourceLength) == 0x3Bu ? 0x00009Bu : bytes::get_bits<8u>(source, sourceLength) == 0x3Cu ? 0x000014u : bytes::get_bits<8u>(source, sourceLength) == 0x3Du ? 0x000015u : bytes::get_bits<8u>(source, sourceLength) == 0x3Eu ? 0x00009Eu : bytes::get_bits<8u>(source, sourceLength) == 0x3Fu ? 0x00001Au :
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0020ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x00005Eu : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00009Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM01141 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x04u ? 0x00009Cu : bytes::get_bits<8u>(source, sourceLength) == 0x05u ? 0x000009u : bytes::get_bits<8u>(source, sourceLength) == 0x06u ? 0x000086u : bytes::get_bits<8u>(source, sourceLength) == 0x07u ? 0x00007Fu : bytes::get_bits<8u>(source, sourceLength) == 0x08u ? 0x000097u : bytes::get_bits<8u>(source, sourceLength) == 0x09u ? 0x00008Du : bytes::get_bits<8u>(source, sourceLength) == 0x0Au ? 0x00008Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x14u ? 0x00009Du : bytes::get_bits<8u>(source, sourceLength) == 0x15u ? 0x000085u : bytes::get_bits<8u>(source, sourceLength) == 0x16u ? 0x000008u : bytes::get_bits<8u>(source, sourceLength) == 0x17u ? 0x000087u : bytes::get_bits<8u>(source, sourceLength) == 0x1Au ? 0x000092u : bytes::get_bits<8u>(source, sourceLength) == 0x1Bu ? 0x00008Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x20u ? 0x000080u : bytes::get_bits<8u>(source, sourceLength) == 0x21u ? 0x000081u : bytes::get_bits<8u>(source, sourceLength) == 0x22u ? 0x000082u : bytes::get_bits<8u>(source, sourceLength) == 0x23u ? 0x000083u : bytes::get_bits<8u>(source, sourceLength) == 0x24u ? 0x000084u : bytes::get_bits<8u>(source, sourceLength) == 0x25u ? 0x00000Au : bytes::get_bits<8u>(source, sourceLength) == 0x26u ? 0x000017u : bytes::get_bits<8u>(source, sourceLength) == 0x27u ? 0x00001Bu : bytes::get_bits<8u>(source, sourceLength) == 0x28u ? 0x000088u : bytes::get_bits<8u>(source, sourceLength) == 0x29u ? 0x000089u : bytes::get_bits<8u>(source, sourceLength) == 0x2Au ? 0x00008Au : bytes::get_bits<8u>(source, sourceLength) == 0x2Bu ? 0x00008Bu : bytes::get_bits<8u>(source, sourceLength) == 0x2Cu ? 0x00008Cu : bytes::get_bits<8u>(source, sourceLength) == 0x2Du ? 0x000005u : bytes::get_bits<8u>(source, sourceLength) == 0x2Eu ? 0x000006u : bytes::get_bits<8u>(source, sourceLength) == 0x2Fu ? 0x000007u :
          bytes::get_bits<8u>(source, sourceLength) == 0x30u ? 0x000090u : bytes::get_bits<8u>(source, sourceLength) == 0x31u ? 0x000091u : bytes::get_bits<8u>(source, sourceLength) == 0x32u ? 0x000016u : bytes::get_bits<8u>(source, sourceLength) == 0x33u ? 0x000093u : bytes::get_bits<8u>(source, sourceLength) == 0x34u ? 0x000094u : bytes::get_bits<8u>(source, sourceLength) == 0x35u ? 0x000095u : bytes::get_bits<8u>(source, sourceLength) == 0x36u ? 0x000096u : bytes::get_bits<8u>(source, sourceLength) == 0x37u ? 0x000004u : bytes::get_bits<8u>(source, sourceLength) == 0x38u ? 0x000098u : bytes::get_bits<8u>(source, sourceLength) == 0x39u ? 0x000099u : bytes::get_bits<8u>(source, sourceLength) == 0x3Au ? 0x00009Au : bytes::get_bits<8u>(source, sourceLength) == 0x3Bu ? 0x00009Bu : bytes::get_bits<8u>(source, sourceLength) == 0x3Cu ? 0x000014u : bytes::get_bits<8u>(source, sourceLength) == 0x3Du ? 0x000015u : bytes::get_bits<8u>(source, sourceLength) == 0x3Eu ? 0x00009Eu : bytes::get_bits<8u>(source, sourceLength) == 0x3Fu ? 0x00001Au :
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0020ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00009Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM01142 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x04u ? 0x00009Cu : bytes::get_bits<8u>(source, sourceLength) == 0x05u ? 0x000009u : bytes::get_bits<8u>(source, sourceLength) == 0x06u ? 0x000086u : bytes::get_bits<8u>(source, sourceLength) == 0x07u ? 0x00007Fu : bytes::get_bits<8u>(source, sourceLength) == 0x08u ? 0x000097u : bytes::get_bits<8u>(source, sourceLength) == 0x09u ? 0x00008Du : bytes::get_bits<8u>(source, sourceLength) == 0x0Au ? 0x00008Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x14u ? 0x00009Du : bytes::get_bits<8u>(source, sourceLength) == 0x15u ? 0x000085u : bytes::get_bits<8u>(source, sourceLength) == 0x16u ? 0x000008u : bytes::get_bits<8u>(source, sourceLength) == 0x17u ? 0x000087u : bytes::get_bits<8u>(source, sourceLength) == 0x1Au ? 0x000092u : bytes::get_bits<8u>(source, sourceLength) == 0x1Bu ? 0x00008Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x20u ? 0x000080u : bytes::get_bits<8u>(source, sourceLength) == 0x21u ? 0x000081u : bytes::get_bits<8u>(source, sourceLength) == 0x22u ? 0x000082u : bytes::get_bits<8u>(source, sourceLength) == 0x23u ? 0x000083u : bytes::get_bits<8u>(source, sourceLength) == 0x24u ? 0x000084u : bytes::get_bits<8u>(source, sourceLength) == 0x25u ? 0x00000Au : bytes::get_bits<8u>(source, sourceLength) == 0x26u ? 0x000017u : bytes::get_bits<8u>(source, sourceLength) == 0x27u ? 0x00001Bu : bytes::get_bits<8u>(source, sourceLength) == 0x28u ? 0x000088u : bytes::get_bits<8u>(source, sourceLength) == 0x29u ? 0x000089u : bytes::get_bits<8u>(source, sourceLength) == 0x2Au ? 0x00008Au : bytes::get_bits<8u>(source, sourceLength) == 0x2Bu ? 0x00008Bu : bytes::get_bits<8u>(source, sourceLength) == 0x2Cu ? 0x00008Cu : bytes::get_bits<8u>(source, sourceLength) == 0x2Du ? 0x000005u : bytes::get_bits<8u>(source, sourceLength) == 0x2Eu ? 0x000006u : bytes::get_bits<8u>(source, sourceLength) == 0x2Fu ? 0x000007u :
          bytes::get_bits<8u>(source, sourceLength) == 0x30u ? 0x000090u : bytes::get_bits<8u>(source, sourceLength) == 0x31u ? 0x000091u : bytes::get_bits<8u>(source, sourceLength) == 0x32u ? 0x000016u : bytes::get_bits<8u>(source, sourceLength) == 0x33u ? 0x000093u : bytes::get_bits<8u>(source, sourceLength) == 0x34u ? 0x000094u : bytes::get_bits<8u>(source, sourceLength) == 0x35u ? 0x000095u : bytes::get_bits<8u>(source, sourceLength) == 0x36u ? 0x000096u : bytes::get_bits<8u>(source, sourceLength) == 0x37u ? 0x000004u : bytes::get_bits<8u>(source, sourceLength) == 0x38u ? 0x000098u : bytes::get_bits<8u>(source, sourceLength) == 0x39u ? 0x000099u : bytes::get_bits<8u>(source, sourceLength) == 0x3Au ? 0x00009Au : bytes::get_bits<8u>(source, sourceLength) == 0x3Bu ? 0x00009Bu : bytes::get_bits<8u>(source, sourceLength) == 0x3Cu ? 0x000014u : bytes::get_bits<8u>(source, sourceLength) == 0x3Du ? 0x000015u : bytes::get_bits<8u>(source, sourceLength) == 0x3Eu ? 0x00009Eu : bytes::get_bits<8u>(source, sourceLength) == 0x3Fu ? 0x00001Au :
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0020ACu : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x00005Du :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00009Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM01143 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x04u ? 0x00009Cu : bytes::get_bits<8u>(source, sourceLength) == 0x05u ? 0x000009u : bytes::get_bits<8u>(source, sourceLength) == 0x06u ? 0x000086u : bytes::get_bits<8u>(source, sourceLength) == 0x07u ? 0x00007Fu : bytes::get_bits<8u>(source, sourceLength) == 0x08u ? 0x000097u : bytes::get_bits<8u>(source, sourceLength) == 0x09u ? 0x00008Du : bytes::get_bits<8u>(source, sourceLength) == 0x0Au ? 0x00008Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x14u ? 0x00009Du : bytes::get_bits<8u>(source, sourceLength) == 0x15u ? 0x000085u : bytes::get_bits<8u>(source, sourceLength) == 0x16u ? 0x000008u : bytes::get_bits<8u>(source, sourceLength) == 0x17u ? 0x000087u : bytes::get_bits<8u>(source, sourceLength) == 0x1Au ? 0x000092u : bytes::get_bits<8u>(source, sourceLength) == 0x1Bu ? 0x00008Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x20u ? 0x000080u : bytes::get_bits<8u>(source, sourceLength) == 0x21u ? 0x000081u : bytes::get_bits<8u>(source, sourceLength) == 0x22u ? 0x000082u : bytes::get_bits<8u>(source, sourceLength) == 0x23u ? 0x000083u : bytes::get_bits<8u>(source, sourceLength) == 0x24u ? 0x000084u : bytes::get_bits<8u>(source, sourceLength) == 0x25u ? 0x00000Au : bytes::get_bits<8u>(source, sourceLength) == 0x26u ? 0x000017u : bytes::get_bits<8u>(source, sourceLength) == 0x27u ? 0x00001Bu : bytes::get_bits<8u>(source, sourceLength) == 0x28u ? 0x000088u : bytes::get_bits<8u>(source, sourceLength) == 0x29u ? 0x000089u : bytes::get_bits<8u>(source, sourceLength) == 0x2Au ? 0x00008Au : bytes::get_bits<8u>(source, sourceLength) == 0x2Bu ? 0x00008Bu : bytes::get_bits<8u>(source, sourceLength) == 0x2Cu ? 0x00008Cu : bytes::get_bits<8u>(source, sourceLength) == 0x2Du ? 0x000005u : bytes::get_bits<8u>(source, sourceLength) == 0x2Eu ? 0x000006u : bytes::get_bits<8u>(source, sourceLength) == 0x2Fu ? 0x000007u :
          bytes::get_bits<8u>(source, sourceLength) == 0x30u ? 0x000090u : bytes::get_bits<8u>(source, sourceLength) == 0x31u ? 0x000091u : bytes::get_bits<8u>(source, sourceLength) == 0x32u ? 0x000016u : bytes::get_bits<8u>(source, sourceLength) == 0x33u ? 0x000093u : bytes::get_bits<8u>(source, sourceLength) == 0x34u ? 0x000094u : bytes::get_bits<8u>(source, sourceLength) == 0x35u ? 0x000095u : bytes::get_bits<8u>(source, sourceLength) == 0x36u ? 0x000096u : bytes::get_bits<8u>(source, sourceLength) == 0x37u ? 0x000004u : bytes::get_bits<8u>(source, sourceLength) == 0x38u ? 0x000098u : bytes::get_bits<8u>(source, sourceLength) == 0x39u ? 0x000099u : bytes::get_bits<8u>(source, sourceLength) == 0x3Au ? 0x00009Au : bytes::get_bits<8u>(source, sourceLength) == 0x3Bu ? 0x00009Bu : bytes::get_bits<8u>(source, sourceLength) == 0x3Cu ? 0x000014u : bytes::get_bits<8u>(source, sourceLength) == 0x3Du ? 0x000015u : bytes::get_bits<8u>(source, sourceLength) == 0x3Eu ? 0x00009Eu : bytes::get_bits<8u>(source, sourceLength) == 0x3Fu ? 0x00001Au :
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0020ACu : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x00005Du :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00009Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM01144 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x04u ? 0x00009Cu : bytes::get_bits<8u>(source, sourceLength) == 0x05u ? 0x000009u : bytes::get_bits<8u>(source, sourceLength) == 0x06u ? 0x000086u : bytes::get_bits<8u>(source, sourceLength) == 0x07u ? 0x00007Fu : bytes::get_bits<8u>(source, sourceLength) == 0x08u ? 0x000097u : bytes::get_bits<8u>(source, sourceLength) == 0x09u ? 0x00008Du : bytes::get_bits<8u>(source, sourceLength) == 0x0Au ? 0x00008Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x14u ? 0x00009Du : bytes::get_bits<8u>(source, sourceLength) == 0x15u ? 0x000085u : bytes::get_bits<8u>(source, sourceLength) == 0x16u ? 0x000008u : bytes::get_bits<8u>(source, sourceLength) == 0x17u ? 0x000087u : bytes::get_bits<8u>(source, sourceLength) == 0x1Au ? 0x000092u : bytes::get_bits<8u>(source, sourceLength) == 0x1Bu ? 0x00008Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x20u ? 0x000080u : bytes::get_bits<8u>(source, sourceLength) == 0x21u ? 0x000081u : bytes::get_bits<8u>(source, sourceLength) == 0x22u ? 0x000082u : bytes::get_bits<8u>(source, sourceLength) == 0x23u ? 0x000083u : bytes::get_bits<8u>(source, sourceLength) == 0x24u ? 0x000084u : bytes::get_bits<8u>(source, sourceLength) == 0x25u ? 0x00000Au : bytes::get_bits<8u>(source, sourceLength) == 0x26u ? 0x000017u : bytes::get_bits<8u>(source, sourceLength) == 0x27u ? 0x00001Bu : bytes::get_bits<8u>(source, sourceLength) == 0x28u ? 0x000088u : bytes::get_bits<8u>(source, sourceLength) == 0x29u ? 0x000089u : bytes::get_bits<8u>(source, sourceLength) == 0x2Au ? 0x00008Au : bytes::get_bits<8u>(source, sourceLength) == 0x2Bu ? 0x00008Bu : bytes::get_bits<8u>(source, sourceLength) == 0x2Cu ? 0x00008Cu : bytes::get_bits<8u>(source, sourceLength) == 0x2Du ? 0x000005u : bytes::get_bits<8u>(source, sourceLength) == 0x2Eu ? 0x000006u : bytes::get_bits<8u>(source, sourceLength) == 0x2Fu ? 0x000007u :
          bytes::get_bits<8u>(source, sourceLength) == 0x30u ? 0x000090u : bytes::get_bits<8u>(source, sourceLength) == 0x31u ? 0x000091u : bytes::get_bits<8u>(source, sourceLength) == 0x32u ? 0x000016u : bytes::get_bits<8u>(source, sourceLength) == 0x33u ? 0x000093u : bytes::get_bits<8u>(source, sourceLength) == 0x34u ? 0x000094u : bytes::get_bits<8u>(source, sourceLength) == 0x35u ? 0x000095u : bytes::get_bits<8u>(source, sourceLength) == 0x36u ? 0x000096u : bytes::get_bits<8u>(source, sourceLength) == 0x37u ? 0x000004u : bytes::get_bits<8u>(source, sourceLength) == 0x38u ? 0x000098u : bytes::get_bits<8u>(source, sourceLength) == 0x39u ? 0x000099u : bytes::get_bits<8u>(source, sourceLength) == 0x3Au ? 0x00009Au : bytes::get_bits<8u>(source, sourceLength) == 0x3Bu ? 0x00009Bu : bytes::get_bits<8u>(source, sourceLength) == 0x3Cu ? 0x000014u : bytes::get_bits<8u>(source, sourceLength) == 0x3Du ? 0x000015u : bytes::get_bits<8u>(source, sourceLength) == 0x3Eu ? 0x00009Eu : bytes::get_bits<8u>(source, sourceLength) == 0x3Fu ? 0x00001Au :
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0020ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00009Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM01145 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x04u ? 0x00009Cu : bytes::get_bits<8u>(source, sourceLength) == 0x05u ? 0x000009u : bytes::get_bits<8u>(source, sourceLength) == 0x06u ? 0x000086u : bytes::get_bits<8u>(source, sourceLength) == 0x07u ? 0x00007Fu : bytes::get_bits<8u>(source, sourceLength) == 0x08u ? 0x000097u : bytes::get_bits<8u>(source, sourceLength) == 0x09u ? 0x00008Du : bytes::get_bits<8u>(source, sourceLength) == 0x0Au ? 0x00008Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x14u ? 0x00009Du : bytes::get_bits<8u>(source, sourceLength) == 0x15u ? 0x000085u : bytes::get_bits<8u>(source, sourceLength) == 0x16u ? 0x000008u : bytes::get_bits<8u>(source, sourceLength) == 0x17u ? 0x000087u : bytes::get_bits<8u>(source, sourceLength) == 0x1Au ? 0x000092u : bytes::get_bits<8u>(source, sourceLength) == 0x1Bu ? 0x00008Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x20u ? 0x000080u : bytes::get_bits<8u>(source, sourceLength) == 0x21u ? 0x000081u : bytes::get_bits<8u>(source, sourceLength) == 0x22u ? 0x000082u : bytes::get_bits<8u>(source, sourceLength) == 0x23u ? 0x000083u : bytes::get_bits<8u>(source, sourceLength) == 0x24u ? 0x000084u : bytes::get_bits<8u>(source, sourceLength) == 0x25u ? 0x00000Au : bytes::get_bits<8u>(source, sourceLength) == 0x26u ? 0x000017u : bytes::get_bits<8u>(source, sourceLength) == 0x27u ? 0x00001Bu : bytes::get_bits<8u>(source, sourceLength) == 0x28u ? 0x000088u : bytes::get_bits<8u>(source, sourceLength) == 0x29u ? 0x000089u : bytes::get_bits<8u>(source, sourceLength) == 0x2Au ? 0x00008Au : bytes::get_bits<8u>(source, sourceLength) == 0x2Bu ? 0x00008Bu : bytes::get_bits<8u>(source, sourceLength) == 0x2Cu ? 0x00008Cu : bytes::get_bits<8u>(source, sourceLength) == 0x2Du ? 0x000005u : bytes::get_bits<8u>(source, sourceLength) == 0x2Eu ? 0x000006u : bytes::get_bits<8u>(source, sourceLength) == 0x2Fu ? 0x000007u :
          bytes::get_bits<8u>(source, sourceLength) == 0x30u ? 0x000090u : bytes::get_bits<8u>(source, sourceLength) == 0x31u ? 0x000091u : bytes::get_bits<8u>(source, sourceLength) == 0x32u ? 0x000016u : bytes::get_bits<8u>(source, sourceLength) == 0x33u ? 0x000093u : bytes::get_bits<8u>(source, sourceLength) == 0x34u ? 0x000094u : bytes::get_bits<8u>(source, sourceLength) == 0x35u ? 0x000095u : bytes::get_bits<8u>(source, sourceLength) == 0x36u ? 0x000096u : bytes::get_bits<8u>(source, sourceLength) == 0x37u ? 0x000004u : bytes::get_bits<8u>(source, sourceLength) == 0x38u ? 0x000098u : bytes::get_bits<8u>(source, sourceLength) == 0x39u ? 0x000099u : bytes::get_bits<8u>(source, sourceLength) == 0x3Au ? 0x00009Au : bytes::get_bits<8u>(source, sourceLength) == 0x3Bu ? 0x00009Bu : bytes::get_bits<8u>(source, sourceLength) == 0x3Cu ? 0x000014u : bytes::get_bits<8u>(source, sourceLength) == 0x3Du ? 0x000015u : bytes::get_bits<8u>(source, sourceLength) == 0x3Eu ? 0x00009Eu : bytes::get_bits<8u>(source, sourceLength) == 0x3Fu ? 0x00001Au :
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0020ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00005Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00009Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM01146 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x04u ? 0x00009Cu : bytes::get_bits<8u>(source, sourceLength) == 0x05u ? 0x000009u : bytes::get_bits<8u>(source, sourceLength) == 0x06u ? 0x000086u : bytes::get_bits<8u>(source, sourceLength) == 0x07u ? 0x00007Fu : bytes::get_bits<8u>(source, sourceLength) == 0x08u ? 0x000097u : bytes::get_bits<8u>(source, sourceLength) == 0x09u ? 0x00008Du : bytes::get_bits<8u>(source, sourceLength) == 0x0Au ? 0x00008Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x14u ? 0x00009Du : bytes::get_bits<8u>(source, sourceLength) == 0x15u ? 0x000085u : bytes::get_bits<8u>(source, sourceLength) == 0x16u ? 0x000008u : bytes::get_bits<8u>(source, sourceLength) == 0x17u ? 0x000087u : bytes::get_bits<8u>(source, sourceLength) == 0x1Au ? 0x000092u : bytes::get_bits<8u>(source, sourceLength) == 0x1Bu ? 0x00008Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x20u ? 0x000080u : bytes::get_bits<8u>(source, sourceLength) == 0x21u ? 0x000081u : bytes::get_bits<8u>(source, sourceLength) == 0x22u ? 0x000082u : bytes::get_bits<8u>(source, sourceLength) == 0x23u ? 0x000083u : bytes::get_bits<8u>(source, sourceLength) == 0x24u ? 0x000084u : bytes::get_bits<8u>(source, sourceLength) == 0x25u ? 0x00000Au : bytes::get_bits<8u>(source, sourceLength) == 0x26u ? 0x000017u : bytes::get_bits<8u>(source, sourceLength) == 0x27u ? 0x00001Bu : bytes::get_bits<8u>(source, sourceLength) == 0x28u ? 0x000088u : bytes::get_bits<8u>(source, sourceLength) == 0x29u ? 0x000089u : bytes::get_bits<8u>(source, sourceLength) == 0x2Au ? 0x00008Au : bytes::get_bits<8u>(source, sourceLength) == 0x2Bu ? 0x00008Bu : bytes::get_bits<8u>(source, sourceLength) == 0x2Cu ? 0x00008Cu : bytes::get_bits<8u>(source, sourceLength) == 0x2Du ? 0x000005u : bytes::get_bits<8u>(source, sourceLength) == 0x2Eu ? 0x000006u : bytes::get_bits<8u>(source, sourceLength) == 0x2Fu ? 0x000007u :
          bytes::get_bits<8u>(source, sourceLength) == 0x30u ? 0x000090u : bytes::get_bits<8u>(source, sourceLength) == 0x31u ? 0x000091u : bytes::get_bits<8u>(source, sourceLength) == 0x32u ? 0x000016u : bytes::get_bits<8u>(source, sourceLength) == 0x33u ? 0x000093u : bytes::get_bits<8u>(source, sourceLength) == 0x34u ? 0x000094u : bytes::get_bits<8u>(source, sourceLength) == 0x35u ? 0x000095u : bytes::get_bits<8u>(source, sourceLength) == 0x36u ? 0x000096u : bytes::get_bits<8u>(source, sourceLength) == 0x37u ? 0x000004u : bytes::get_bits<8u>(source, sourceLength) == 0x38u ? 0x000098u : bytes::get_bits<8u>(source, sourceLength) == 0x39u ? 0x000099u : bytes::get_bits<8u>(source, sourceLength) == 0x3Au ? 0x00009Au : bytes::get_bits<8u>(source, sourceLength) == 0x3Bu ? 0x00009Bu : bytes::get_bits<8u>(source, sourceLength) == 0x3Cu ? 0x000014u : bytes::get_bits<8u>(source, sourceLength) == 0x3Du ? 0x000015u : bytes::get_bits<8u>(source, sourceLength) == 0x3Eu ? 0x00009Eu : bytes::get_bits<8u>(source, sourceLength) == 0x3Fu ? 0x00001Au :
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0020ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00005Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00009Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM01147 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x04u ? 0x00009Cu : bytes::get_bits<8u>(source, sourceLength) == 0x05u ? 0x000009u : bytes::get_bits<8u>(source, sourceLength) == 0x06u ? 0x000086u : bytes::get_bits<8u>(source, sourceLength) == 0x07u ? 0x00007Fu : bytes::get_bits<8u>(source, sourceLength) == 0x08u ? 0x000097u : bytes::get_bits<8u>(source, sourceLength) == 0x09u ? 0x00008Du : bytes::get_bits<8u>(source, sourceLength) == 0x0Au ? 0x00008Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x14u ? 0x00009Du : bytes::get_bits<8u>(source, sourceLength) == 0x15u ? 0x000085u : bytes::get_bits<8u>(source, sourceLength) == 0x16u ? 0x000008u : bytes::get_bits<8u>(source, sourceLength) == 0x17u ? 0x000087u : bytes::get_bits<8u>(source, sourceLength) == 0x1Au ? 0x000092u : bytes::get_bits<8u>(source, sourceLength) == 0x1Bu ? 0x00008Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x20u ? 0x000080u : bytes::get_bits<8u>(source, sourceLength) == 0x21u ? 0x000081u : bytes::get_bits<8u>(source, sourceLength) == 0x22u ? 0x000082u : bytes::get_bits<8u>(source, sourceLength) == 0x23u ? 0x000083u : bytes::get_bits<8u>(source, sourceLength) == 0x24u ? 0x000084u : bytes::get_bits<8u>(source, sourceLength) == 0x25u ? 0x00000Au : bytes::get_bits<8u>(source, sourceLength) == 0x26u ? 0x000017u : bytes::get_bits<8u>(source, sourceLength) == 0x27u ? 0x00001Bu : bytes::get_bits<8u>(source, sourceLength) == 0x28u ? 0x000088u : bytes::get_bits<8u>(source, sourceLength) == 0x29u ? 0x000089u : bytes::get_bits<8u>(source, sourceLength) == 0x2Au ? 0x00008Au : bytes::get_bits<8u>(source, sourceLength) == 0x2Bu ? 0x00008Bu : bytes::get_bits<8u>(source, sourceLength) == 0x2Cu ? 0x00008Cu : bytes::get_bits<8u>(source, sourceLength) == 0x2Du ? 0x000005u : bytes::get_bits<8u>(source, sourceLength) == 0x2Eu ? 0x000006u : bytes::get_bits<8u>(source, sourceLength) == 0x2Fu ? 0x000007u :
          bytes::get_bits<8u>(source, sourceLength) == 0x30u ? 0x000090u : bytes::get_bits<8u>(source, sourceLength) == 0x31u ? 0x000091u : bytes::get_bits<8u>(source, sourceLength) == 0x32u ? 0x000016u : bytes::get_bits<8u>(source, sourceLength) == 0x33u ? 0x000093u : bytes::get_bits<8u>(source, sourceLength) == 0x34u ? 0x000094u : bytes::get_bits<8u>(source, sourceLength) == 0x35u ? 0x000095u : bytes::get_bits<8u>(source, sourceLength) == 0x36u ? 0x000096u : bytes::get_bits<8u>(source, sourceLength) == 0x37u ? 0x000004u : bytes::get_bits<8u>(source, sourceLength) == 0x38u ? 0x000098u : bytes::get_bits<8u>(source, sourceLength) == 0x39u ? 0x000099u : bytes::get_bits<8u>(source, sourceLength) == 0x3Au ? 0x00009Au : bytes::get_bits<8u>(source, sourceLength) == 0x3Bu ? 0x00009Bu : bytes::get_bits<8u>(source, sourceLength) == 0x3Cu ? 0x000014u : bytes::get_bits<8u>(source, sourceLength) == 0x3Du ? 0x000015u : bytes::get_bits<8u>(source, sourceLength) == 0x3Eu ? 0x00009Eu : bytes::get_bits<8u>(source, sourceLength) == 0x3Fu ? 0x00001Au :
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0020ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00009Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM01148 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x04u ? 0x00009Cu : bytes::get_bits<8u>(source, sourceLength) == 0x05u ? 0x000009u : bytes::get_bits<8u>(source, sourceLength) == 0x06u ? 0x000086u : bytes::get_bits<8u>(source, sourceLength) == 0x07u ? 0x00007Fu : bytes::get_bits<8u>(source, sourceLength) == 0x08u ? 0x000097u : bytes::get_bits<8u>(source, sourceLength) == 0x09u ? 0x00008Du : bytes::get_bits<8u>(source, sourceLength) == 0x0Au ? 0x00008Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x14u ? 0x00009Du : bytes::get_bits<8u>(source, sourceLength) == 0x15u ? 0x000085u : bytes::get_bits<8u>(source, sourceLength) == 0x16u ? 0x000008u : bytes::get_bits<8u>(source, sourceLength) == 0x17u ? 0x000087u : bytes::get_bits<8u>(source, sourceLength) == 0x1Au ? 0x000092u : bytes::get_bits<8u>(source, sourceLength) == 0x1Bu ? 0x00008Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x20u ? 0x000080u : bytes::get_bits<8u>(source, sourceLength) == 0x21u ? 0x000081u : bytes::get_bits<8u>(source, sourceLength) == 0x22u ? 0x000082u : bytes::get_bits<8u>(source, sourceLength) == 0x23u ? 0x000083u : bytes::get_bits<8u>(source, sourceLength) == 0x24u ? 0x000084u : bytes::get_bits<8u>(source, sourceLength) == 0x25u ? 0x00000Au : bytes::get_bits<8u>(source, sourceLength) == 0x26u ? 0x000017u : bytes::get_bits<8u>(source, sourceLength) == 0x27u ? 0x00001Bu : bytes::get_bits<8u>(source, sourceLength) == 0x28u ? 0x000088u : bytes::get_bits<8u>(source, sourceLength) == 0x29u ? 0x000089u : bytes::get_bits<8u>(source, sourceLength) == 0x2Au ? 0x00008Au : bytes::get_bits<8u>(source, sourceLength) == 0x2Bu ? 0x00008Bu : bytes::get_bits<8u>(source, sourceLength) == 0x2Cu ? 0x00008Cu : bytes::get_bits<8u>(source, sourceLength) == 0x2Du ? 0x000005u : bytes::get_bits<8u>(source, sourceLength) == 0x2Eu ? 0x000006u : bytes::get_bits<8u>(source, sourceLength) == 0x2Fu ? 0x000007u :
          bytes::get_bits<8u>(source, sourceLength) == 0x30u ? 0x000090u : bytes::get_bits<8u>(source, sourceLength) == 0x31u ? 0x000091u : bytes::get_bits<8u>(source, sourceLength) == 0x32u ? 0x000016u : bytes::get_bits<8u>(source, sourceLength) == 0x33u ? 0x000093u : bytes::get_bits<8u>(source, sourceLength) == 0x34u ? 0x000094u : bytes::get_bits<8u>(source, sourceLength) == 0x35u ? 0x000095u : bytes::get_bits<8u>(source, sourceLength) == 0x36u ? 0x000096u : bytes::get_bits<8u>(source, sourceLength) == 0x37u ? 0x000004u : bytes::get_bits<8u>(source, sourceLength) == 0x38u ? 0x000098u : bytes::get_bits<8u>(source, sourceLength) == 0x39u ? 0x000099u : bytes::get_bits<8u>(source, sourceLength) == 0x3Au ? 0x00009Au : bytes::get_bits<8u>(source, sourceLength) == 0x3Bu ? 0x00009Bu : bytes::get_bits<8u>(source, sourceLength) == 0x3Cu ? 0x000014u : bytes::get_bits<8u>(source, sourceLength) == 0x3Du ? 0x000015u : bytes::get_bits<8u>(source, sourceLength) == 0x3Eu ? 0x00009Eu : bytes::get_bits<8u>(source, sourceLength) == 0x3Fu ? 0x00001Au :
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0020ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00009Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM01149 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x04u ? 0x00009Cu : bytes::get_bits<8u>(source, sourceLength) == 0x05u ? 0x000009u : bytes::get_bits<8u>(source, sourceLength) == 0x06u ? 0x000086u : bytes::get_bits<8u>(source, sourceLength) == 0x07u ? 0x00007Fu : bytes::get_bits<8u>(source, sourceLength) == 0x08u ? 0x000097u : bytes::get_bits<8u>(source, sourceLength) == 0x09u ? 0x00008Du : bytes::get_bits<8u>(source, sourceLength) == 0x0Au ? 0x00008Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x14u ? 0x00009Du : bytes::get_bits<8u>(source, sourceLength) == 0x15u ? 0x000085u : bytes::get_bits<8u>(source, sourceLength) == 0x16u ? 0x000008u : bytes::get_bits<8u>(source, sourceLength) == 0x17u ? 0x000087u : bytes::get_bits<8u>(source, sourceLength) == 0x1Au ? 0x000092u : bytes::get_bits<8u>(source, sourceLength) == 0x1Bu ? 0x00008Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x20u ? 0x000080u : bytes::get_bits<8u>(source, sourceLength) == 0x21u ? 0x000081u : bytes::get_bits<8u>(source, sourceLength) == 0x22u ? 0x000082u : bytes::get_bits<8u>(source, sourceLength) == 0x23u ? 0x000083u : bytes::get_bits<8u>(source, sourceLength) == 0x24u ? 0x000084u : bytes::get_bits<8u>(source, sourceLength) == 0x25u ? 0x00000Au : bytes::get_bits<8u>(source, sourceLength) == 0x26u ? 0x000017u : bytes::get_bits<8u>(source, sourceLength) == 0x27u ? 0x00001Bu : bytes::get_bits<8u>(source, sourceLength) == 0x28u ? 0x000088u : bytes::get_bits<8u>(source, sourceLength) == 0x29u ? 0x000089u : bytes::get_bits<8u>(source, sourceLength) == 0x2Au ? 0x00008Au : bytes::get_bits<8u>(source, sourceLength) == 0x2Bu ? 0x00008Bu : bytes::get_bits<8u>(source, sourceLength) == 0x2Cu ? 0x00008Cu : bytes::get_bits<8u>(source, sourceLength) == 0x2Du ? 0x000005u : bytes::get_bits<8u>(source, sourceLength) == 0x2Eu ? 0x000006u : bytes::get_bits<8u>(source, sourceLength) == 0x2Fu ? 0x000007u :
          bytes::get_bits<8u>(source, sourceLength) == 0x30u ? 0x000090u : bytes::get_bits<8u>(source, sourceLength) == 0x31u ? 0x000091u : bytes::get_bits<8u>(source, sourceLength) == 0x32u ? 0x000016u : bytes::get_bits<8u>(source, sourceLength) == 0x33u ? 0x000093u : bytes::get_bits<8u>(source, sourceLength) == 0x34u ? 0x000094u : bytes::get_bits<8u>(source, sourceLength) == 0x35u ? 0x000095u : bytes::get_bits<8u>(source, sourceLength) == 0x36u ? 0x000096u : bytes::get_bits<8u>(source, sourceLength) == 0x37u ? 0x000004u : bytes::get_bits<8u>(source, sourceLength) == 0x38u ? 0x000098u : bytes::get_bits<8u>(source, sourceLength) == 0x39u ? 0x000099u : bytes::get_bits<8u>(source, sourceLength) == 0x3Au ? 0x00009Au : bytes::get_bits<8u>(source, sourceLength) == 0x3Bu ? 0x00009Bu : bytes::get_bits<8u>(source, sourceLength) == 0x3Cu ? 0x000014u : bytes::get_bits<8u>(source, sourceLength) == 0x3Du ? 0x000015u : bytes::get_bits<8u>(source, sourceLength) == 0x3Eu ? 0x00009Eu : bytes::get_bits<8u>(source, sourceLength) == 0x3Fu ? 0x00001Au :
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000D6u :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0020ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00005Eu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00009Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM037 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x00005Eu : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM038 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM1026 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x00011Eu : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000130u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x00015Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000131u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x00015Eu : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x0000DCu :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0002DBu : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x002014u : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00011Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x000022u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM1047 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x04u ? 0x00009Cu : bytes::get_bits<8u>(source, sourceLength) == 0x05u ? 0x000009u : bytes::get_bits<8u>(source, sourceLength) == 0x06u ? 0x000086u : bytes::get_bits<8u>(source, sourceLength) == 0x07u ? 0x00007Fu : bytes::get_bits<8u>(source, sourceLength) == 0x08u ? 0x000097u : bytes::get_bits<8u>(source, sourceLength) == 0x09u ? 0x00008Du : bytes::get_bits<8u>(source, sourceLength) == 0x0Au ? 0x00008Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x14u ? 0x00009Du : bytes::get_bits<8u>(source, sourceLength) == 0x15u ? 0x000085u : bytes::get_bits<8u>(source, sourceLength) == 0x16u ? 0x000008u : bytes::get_bits<8u>(source, sourceLength) == 0x17u ? 0x000087u : bytes::get_bits<8u>(source, sourceLength) == 0x1Au ? 0x000092u : bytes::get_bits<8u>(source, sourceLength) == 0x1Bu ? 0x00008Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x20u ? 0x000080u : bytes::get_bits<8u>(source, sourceLength) == 0x21u ? 0x000081u : bytes::get_bits<8u>(source, sourceLength) == 0x22u ? 0x000082u : bytes::get_bits<8u>(source, sourceLength) == 0x23u ? 0x000083u : bytes::get_bits<8u>(source, sourceLength) == 0x24u ? 0x000084u : bytes::get_bits<8u>(source, sourceLength) == 0x25u ? 0x00000Au : bytes::get_bits<8u>(source, sourceLength) == 0x26u ? 0x000017u : bytes::get_bits<8u>(source, sourceLength) == 0x27u ? 0x00001Bu : bytes::get_bits<8u>(source, sourceLength) == 0x28u ? 0x000088u : bytes::get_bits<8u>(source, sourceLength) == 0x29u ? 0x000089u : bytes::get_bits<8u>(source, sourceLength) == 0x2Au ? 0x00008Au : bytes::get_bits<8u>(source, sourceLength) == 0x2Bu ? 0x00008Bu : bytes::get_bits<8u>(source, sourceLength) == 0x2Cu ? 0x00008Cu : bytes::get_bits<8u>(source, sourceLength) == 0x2Du ? 0x000005u : bytes::get_bits<8u>(source, sourceLength) == 0x2Eu ? 0x000006u : bytes::get_bits<8u>(source, sourceLength) == 0x2Fu ? 0x000007u :
          bytes::get_bits<8u>(source, sourceLength) == 0x30u ? 0x000090u : bytes::get_bits<8u>(source, sourceLength) == 0x31u ? 0x000091u : bytes::get_bits<8u>(source, sourceLength) == 0x32u ? 0x000016u : bytes::get_bits<8u>(source, sourceLength) == 0x33u ? 0x000093u : bytes::get_bits<8u>(source, sourceLength) == 0x34u ? 0x000094u : bytes::get_bits<8u>(source, sourceLength) == 0x35u ? 0x000095u : bytes::get_bits<8u>(source, sourceLength) == 0x36u ? 0x000096u : bytes::get_bits<8u>(source, sourceLength) == 0x37u ? 0x000004u : bytes::get_bits<8u>(source, sourceLength) == 0x38u ? 0x000098u : bytes::get_bits<8u>(source, sourceLength) == 0x39u ? 0x000099u : bytes::get_bits<8u>(source, sourceLength) == 0x3Au ? 0x00009Au : bytes::get_bits<8u>(source, sourceLength) == 0x3Bu ? 0x00009Bu : bytes::get_bits<8u>(source, sourceLength) == 0x3Cu ? 0x000014u : bytes::get_bits<8u>(source, sourceLength) == 0x3Du ? 0x000015u : bytes::get_bits<8u>(source, sourceLength) == 0x3Eu ? 0x00009Eu : bytes::get_bits<8u>(source, sourceLength) == 0x3Fu ? 0x00001Au :
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00009Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM273 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM274 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM275 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000D5u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000F5u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM277 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000A4u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x00005Du :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM278 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000A4u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x00005Du :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM280 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM281 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM284 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00005Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM285 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00005Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM290 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x003002u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x00300Cu : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x00300Du : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x003001u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0030FBu : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0030F2u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0030A1u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0030A3u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0030A5u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0030A7u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0030A9u : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0030E3u : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0030E5u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0030E7u : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0030C3u : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0030FCu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x000021u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000ACu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x0030A2u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x0030A4u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x0030A6u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x0030A8u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x0030AAu : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x0030ABu : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x0030ADu : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0030AFu : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x0030B1u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0030B3u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0030B5u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0030B7u : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0030B9u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0030BBu :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0030BDu : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x0030BFu : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x0030C1u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x0030C4u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0030C6u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x0030C8u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x0030CAu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x0030CBu : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x0030CCu : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x0030CDu : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0030CEu : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0030CFu : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0030D2u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0030D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0030D8u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x0030DBu : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0030DEu : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x0030DFu : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x0030E0u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x0030E1u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0030E2u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x0030E4u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0030E6u : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0030E8u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0030E9u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0030EAu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0030EBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0030ECu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x0030EDu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0030EFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0030F3u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00309Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00309Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM297 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM437 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000C5u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x0000FFu : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0020A7u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x000192u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x002310u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000BBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002593u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x002525u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x002528u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x002512u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x002511u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x00252Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002503u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002513u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00251Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00251Au : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x002519u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x002510u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x00251Du : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x002520u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x002517u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x00250Fu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00253Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x002533u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x002523u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x002501u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00254Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x002537u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x002538u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00252Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x002530u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x002516u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x002515u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00250Du : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00250Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x002542u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x00253Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00258Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x002590u : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x002580u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0003B1u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0003B2u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000393u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0003C0u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0003A3u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0003C3u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0003BCu : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x0003C4u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0003A6u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000398u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0003A9u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0003B4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00221Eu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x002205u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0003B5u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x002229u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x002261u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000B1u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x002265u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x002264u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x002320u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x002321u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x002248u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x002218u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x002219u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x00221Au : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x00207Fu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0000A0u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM500 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM775 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x1Au ? 0x00001Cu : bytes::get_bits<8u>(source, sourceLength) == 0x1Cu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x00001Au :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x000106u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000101u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000123u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000107u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000142u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000113u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x000156u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x000157u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x00012Bu : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x000179u : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000C5u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00014Du : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x000122u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x00015Au : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x00015Bu : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000D7u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x000100u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x00012Au : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x00017Bu : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x00017Cu : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x00017Au : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x00201Du : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x0000AEu : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x000141u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000BBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002593u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x000104u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x00010Cu : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x000118u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x000116u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x002563u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002551u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002557u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00255Du : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00012Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x002510u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000172u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x00016Au : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x00255Au : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x002554u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x002569u : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x002566u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x002560u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x002550u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00256Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00017Du :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000105u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00010Du : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000119u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x000117u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00012Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x000173u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x00016Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x00017Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00258Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x002590u : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x002580u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x00014Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000143u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0000F5u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0000D5u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000144u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000136u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000137u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x00013Bu : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x00013Cu : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000146u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x000112u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x000145u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x002019u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000B1u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x00201Cu : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x0000B6u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x00201Eu : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x002219u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0000A0u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM850 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000C5u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x0000FFu : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000D7u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x000192u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x0000AEu : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000BBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002593u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x00252Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002503u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002513u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00251Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x002510u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x002517u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x00250Fu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00253Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x002533u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x002523u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x002501u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00254Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000131u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x002580u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0000F5u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0000D5u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0003BCu : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x002014u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000B4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000B1u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x0021D4u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x0000B6u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x0002DBu : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0002D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0000A0u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM851 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000386u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x000388u : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x000389u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x00038Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00038Cu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00038Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x00038Fu : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0003ACu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0003ADu : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0003AEu : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0003AFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0003CAu : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x000390u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0003CCu : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x0003CDu : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000391u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000392u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000393u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000394u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000395u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x000396u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x000397u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x000398u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x000399u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000BBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002593u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x00039Au : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x00039Bu : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x00039Du : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x00039Cu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x00252Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002503u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002513u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00251Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00039Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00039Fu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x002510u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x0003A0u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x0003A1u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x002517u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x00250Fu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00253Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x002533u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x002523u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x002501u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00254Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0003A3u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0003A4u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x0003A5u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x0003A6u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x0003A7u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x0003A8u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x0003A9u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x0003B1u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x0003B2u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x0003B3u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0003B4u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0003B5u : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x002580u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0003B6u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0003B7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x0003B8u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0003B9u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0003BAu : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0003BBu : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0003BCu : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x0003BDu : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0003BEu : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x0003BFu : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0003C0u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0003C1u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0003C3u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0003C2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0003C4u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000B4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000B1u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x0003C5u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x0003C6u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x0003C7u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x0003C8u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x0002DBu : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0003C9u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0003CBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0003B0u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0003CEu : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0000A0u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM852 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x00016Fu : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000107u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000142u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x000150u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x000151u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x000179u : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x000106u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x000139u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00013Au : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00013Du : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00013Eu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x00015Au : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x00015Bu : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x000164u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x000165u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x000141u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000D7u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x00010Du :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000104u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000105u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x00017Du : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x00017Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000118u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x000119u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x00017Au : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x00010Cu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x00015Fu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000BBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002593u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x00011Au : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x00015Eu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x00252Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002503u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002513u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00251Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00017Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00017Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x002510u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000102u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000103u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x002517u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x00250Fu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00253Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x002533u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x002523u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x002501u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00254Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000111u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000110u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00010Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00010Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000147u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x00011Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x000162u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x00016Eu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x002580u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000143u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000144u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000148u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000154u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000155u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x000170u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x000163u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000B4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0002DDu : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x0002C7u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x0002D8u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x0002DBu : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0002D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x000171u : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x000158u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x000159u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0000A0u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM857 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x000131u : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000C5u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000130u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x00015Eu : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x00015Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x00011Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x00011Fu : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x0000AEu : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000BBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002593u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x00252Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002503u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002513u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00251Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x002510u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x002517u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x00250Fu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00253Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x002533u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x002523u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x002501u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00254Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x002580u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0000F5u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0000D5u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0003BCu : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0000D7u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000FFu : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x002014u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000B4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000B1u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x0000B6u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x0002DBu : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0002D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0000A0u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM860 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000C2u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0000F5u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x0000D5u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0020A7u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000D2u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000BBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002593u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x002525u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x002528u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x002512u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x002511u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x00252Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002503u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002513u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00251Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00251Au : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x002519u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x002510u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x00251Du : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x002520u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x002517u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x00250Fu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00253Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x002533u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x002523u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x002501u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00254Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x002537u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x002538u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00252Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x002530u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x002516u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x002515u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00250Du : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00250Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x002542u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x00253Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00258Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x002590u : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x002580u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0003B1u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0003B2u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000393u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0003C0u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0003A3u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0003C3u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0003BCu : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x0003C4u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0003A6u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000398u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0003A9u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0003B4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00221Eu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x002205u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0003B5u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x002229u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x002261u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000B1u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x002265u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x002264u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x002320u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x002321u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x002248u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x002218u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x002219u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x00221Au : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x00207Fu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0000A0u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM861 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000C5u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0020A7u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000D2u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000BBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002593u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x002525u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x002528u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x002512u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x002511u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x00252Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002503u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002513u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00251Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00251Au : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x002519u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x002510u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x00251Du : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x002520u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x002517u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x00250Fu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00253Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x002533u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x002523u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x002501u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00254Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x002537u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x002538u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00252Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x002530u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x002516u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x002515u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00250Du : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00250Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x002542u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x00253Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00258Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x002590u : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x002580u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0003B1u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0003B2u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000393u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0003C0u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0003A3u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0003C3u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0003BCu : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x0003C4u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0003A6u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000398u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0003A9u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0003B4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00221Eu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x002205u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0003B5u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x002229u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x002261u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000B1u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x002265u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x002264u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x002320u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x002321u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x002248u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x002218u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x002219u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x00221Au : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x00207Fu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0000A0u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM862 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0005D0u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x0005D1u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x0005D2u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x0005D3u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x0005D4u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x0005D5u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x0005D6u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x0005D7u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0005D8u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x0005D9u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0005DAu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0005DBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0005DCu : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0005DDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0005DEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0005DFu :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0005E0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x0005E1u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x0005E2u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x0005E3u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0005E4u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x0005E5u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x0005E6u : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x0005E7u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x0005E8u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x0005E9u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0005EAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0020A7u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000D2u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000BBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002593u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x002525u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x002528u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x002512u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x002511u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x00252Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002503u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002513u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00251Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00251Au : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x002519u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x002510u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x00251Du : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x002520u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x002517u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x00250Fu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00253Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x002533u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x002523u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x002501u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00254Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x002537u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x002538u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00252Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x002530u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x002516u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x002515u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00250Du : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00250Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x002542u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x00253Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00258Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x002590u : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x002580u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0003B1u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0003B2u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000393u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0003C0u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0003A3u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0003C3u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0003BCu : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x0003C4u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0003A6u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000398u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0003A9u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0003B4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00221Eu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x002205u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0003B5u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x002229u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x002261u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000B1u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x002265u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x002264u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x002320u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x002321u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x002248u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x002218u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x002219u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x00221Au : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x00207Fu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0000A0u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM863 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x0000B6u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000A7u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x0000A4u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x000192u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x002310u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000BBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002593u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x002525u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x002528u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x002512u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x002511u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x00252Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002503u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002513u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00251Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00251Au : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x002519u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x002510u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x00251Du : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x002520u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x002517u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x00250Fu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00253Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x002533u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x002523u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x002501u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00254Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x002537u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x002538u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00252Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x002530u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x002516u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x002515u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00250Du : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00250Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x002542u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x00253Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00258Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x002590u : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x002580u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0003B1u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0003B2u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000393u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0003C0u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0003A3u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0003C3u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0003BCu : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x0003C4u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0003A6u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000398u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0003A9u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0003B4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00221Eu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x002205u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0003B5u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x002229u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x002261u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000B1u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x002265u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x002264u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x002320u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x002321u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x002248u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x002218u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x002219u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x00221Au : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x00207Fu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0000A0u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM865 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000C5u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x0000FFu : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0020A7u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x000192u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x002310u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000BBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002593u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x002525u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x002528u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x002512u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x002511u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x00252Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002503u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002513u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00251Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00251Au : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x002519u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x002510u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x00251Du : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x002520u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x002517u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x00250Fu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00253Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x002533u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x002523u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x002501u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00254Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x002537u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x002538u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00252Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x002530u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x002516u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x002515u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00250Du : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00250Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x002542u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x00253Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00258Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x002590u : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x002580u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0003B1u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0003B2u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000393u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0003C0u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0003A3u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0003C3u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0003BCu : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x0003C4u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0003A6u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000398u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0003A9u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0003B4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00221Eu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x002205u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0003B5u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x002229u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x002261u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000B1u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x002265u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x002264u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x002320u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x002321u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x002248u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x002218u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x002219u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x00221Au : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x00207Fu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0000A0u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM870 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x000103u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x00010Du : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x000107u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x00016Fu : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x00013Eu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x00013Au : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0002DDu : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x00010Cu : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x000106u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0002C7u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x00016Eu : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x00013Du : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x000139u : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0002D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x00015Bu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x000148u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x000111u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x000159u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x000142u : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x000144u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0002DBu : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x000105u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x00015Au : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x000147u : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x000110u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x000158u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x000104u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x00017Cu : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x00017Bu : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x00017Eu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x00017Au : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x00017Du : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x000179u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x000143u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x000155u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x000151u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00011Au : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x000171u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x000165u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x00011Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x00010Fu : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x000154u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x000150u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x00010Eu : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x000170u : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x000164u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM871 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x41u ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x46u ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x0000D6u :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x66u ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x0000A6u : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x70u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x000022u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000FDu : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x000040u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0000DDu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A9u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0000BCu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0000BEu : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0000F5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0000B9u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000FFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00005Eu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D5u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM891 == encoding ? bytes::get_bits<7u>(source, sourceLength) :
        encoding::IBM903 == encoding ? bytes::get_bits<7u>(source, sourceLength) :
        encoding::IBM904 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000A2u :
          bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000A6u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IBM905 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x000020u : bytes::get_bits<8u>(source, sourceLength) == 0x42u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x43u ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x44u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x45u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x47u ? 0x00010Bu : bytes::get_bits<8u>(source, sourceLength) == 0x48u ? 0x00007Bu : bytes::get_bits<8u>(source, sourceLength) == 0x49u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x4Au ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x4Bu ? 0x00002Eu : bytes::get_bits<8u>(source, sourceLength) == 0x4Cu ? 0x00003Cu : bytes::get_bits<8u>(source, sourceLength) == 0x4Du ? 0x000028u : bytes::get_bits<8u>(source, sourceLength) == 0x4Eu ? 0x00002Bu : bytes::get_bits<8u>(source, sourceLength) == 0x4Fu ? 0x000021u :
          bytes::get_bits<8u>(source, sourceLength) == 0x50u ? 0x000026u : bytes::get_bits<8u>(source, sourceLength) == 0x51u ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x52u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x53u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x54u ? 0x0000E8u : bytes::get_bits<8u>(source, sourceLength) == 0x55u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x56u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x57u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x58u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x59u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0x5Au ? 0x00011Eu : bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x000130u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x00002Au : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x000029u : bytes::get_bits<8u>(source, sourceLength) == 0x5Eu ? 0x00003Bu : bytes::get_bits<8u>(source, sourceLength) == 0x5Fu ? 0x00005Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0x60u ? 0x00002Du : bytes::get_bits<8u>(source, sourceLength) == 0x61u ? 0x00002Fu : bytes::get_bits<8u>(source, sourceLength) == 0x62u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0x63u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x64u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0x65u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0x67u ? 0x00010Au : bytes::get_bits<8u>(source, sourceLength) == 0x68u ? 0x00005Bu : bytes::get_bits<8u>(source, sourceLength) == 0x69u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x6Au ? 0x00015Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Bu ? 0x00002Cu : bytes::get_bits<8u>(source, sourceLength) == 0x6Cu ? 0x000025u : bytes::get_bits<8u>(source, sourceLength) == 0x6Du ? 0x00005Fu : bytes::get_bits<8u>(source, sourceLength) == 0x6Eu ? 0x00003Eu : bytes::get_bits<8u>(source, sourceLength) == 0x6Fu ? 0x00003Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x71u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x72u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0x73u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0x74u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0x75u ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0x76u ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0x77u ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0x78u ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0x79u ? 0x000131u : bytes::get_bits<8u>(source, sourceLength) == 0x7Au ? 0x00003Au : bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x00015Eu : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x000027u : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x00003Du : bytes::get_bits<8u>(source, sourceLength) == 0x7Fu ? 0x0000DCu :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0002D8u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000061u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x000062u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000063u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x000064u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x000065u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x000066u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x000067u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x000068u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x000069u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x000127u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x000109u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x00015Du : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x00016Du : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x00007Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x00006Au : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x00006Bu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00006Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00006Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x00006Eu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00006Fu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x000070u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x000071u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x000072u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x000125u : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x00011Du : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x000135u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0002DBu : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000073u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000074u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000075u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000076u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000077u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000078u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000079u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x00007Au : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x000126u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x000108u : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x00015Cu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x00016Cu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x000040u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0000A3u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x00017Cu : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x00007Du : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x00017Bu : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000BDu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x000124u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00011Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x000134u : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000D7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000041u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000042u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000043u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000044u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000045u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000046u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000047u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000048u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000049u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000ADu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00007Eu : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x000121u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00011Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00004Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00004Bu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00004Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00004Du : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00004Eu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00004Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000050u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000051u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000052u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x000060u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0000FAu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000053u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000054u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000055u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000056u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000057u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000058u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000059u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00005Au : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000D4u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x000120u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000030u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000031u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000032u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000033u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000034u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000035u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000036u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000037u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000038u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000039u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x000022u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00007Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IEC_P27_1 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0002C7u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x002261u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x002227u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x002228u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x002229u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x00222Au : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x002282u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x002283u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0021D0u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x0021D2u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x002234u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x002235u : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x002208u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x00220Bu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x002286u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x002287u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x00222Bu : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x00222Eu : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x00221Eu : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002207u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002202u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x00223Cu : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x002248u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x002243u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x002245u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x002264u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002260u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002265u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x002194u : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x002200u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x002203u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0005D0u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x0025A1u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x002225u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000393u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000394u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x0022A5u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x002220u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x00221Fu : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000398u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x002329u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00232Au : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x00039Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x002032u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x002033u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00039Eu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x002213u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0003A0u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x0003A3u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x0000D7u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x0000B3u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x0003A5u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x0003A6u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x0003A8u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x0003A9u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x002205u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x00E025u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00221Au : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00E01Du : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x00221Du : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0000B1u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0003B1u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x0003B2u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0003B3u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0003B4u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0003B5u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0003B6u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x0003B7u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0003B8u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x0003B9u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0003BAu : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0003BBu : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0003BCu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0003BDu : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0003BEu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x002030u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x0003C0u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0003C1u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x0003C3u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x0003C4u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x0003C5u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x0003C6u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x0003C7u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x0003C8u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0003C9u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x002020u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x002190u : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x002191u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x002192u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x002193u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0000AFu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::INIS      == encoding ? bytes::get_bits<7u>(source, sourceLength) :
        encoding::INVARIANT == encoding ? bytes::get_bits<7u>(source, sourceLength) :
        encoding::ISO_10367_box == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x002503u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x002501u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x00250Fu : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x002513u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x002517u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x00251Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x002523u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x00252Bu : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x002533u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x00253Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00254Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x00E003u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0025AAu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x002510u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x002593u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_2033_1983 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x3Au ? 0x002446u : bytes::get_bits<7u>(source, sourceLength) == 0x3Bu ? 0x002447u : bytes::get_bits<7u>(source, sourceLength) == 0x3Cu ? 0x002448u : bytes::get_bits<7u>(source, sourceLength) == 0x3Du ? 0x002449u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::ISO_646_basic_1983 == encoding ? bytes::get_bits<7u>(source, sourceLength) :
        encoding::ISO_646_irv_1983 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x24u ? 0x0000A4u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000AFu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::ISO_6937_2_25 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x24u ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x00201Cu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x002190u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x002191u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x002192u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x002193u :
          bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00201Du :
          bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x002122u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x002669u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00215Bu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00215Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x00215Du : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x00215Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x002126u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000132u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x00013Fu : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000152u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000174u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x000176u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x000178u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x000149u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000133u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000140u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x000153u : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x000175u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x000177u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_10 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x000104u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000112u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000122u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x00012Au : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000128u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000136u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x00013Bu : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x000110u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x000166u : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x00017Du : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x00016Au : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x00014Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x000105u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x000113u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x000123u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x00012Bu : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x000129u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x000137u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x00013Cu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x000111u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x000167u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00017Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x002015u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00016Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00014Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x000100u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x00012Eu : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x00010Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x000118u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x000116u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000145u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00014Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000168u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000172u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000101u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x00012Fu : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x00010Du : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000119u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000117u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000146u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x00014Du : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000169u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000173u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x000138u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_13 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x00201Du : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x00201Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x000156u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000C6u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x00201Cu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x000157u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000E6u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x000104u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x00012Eu : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000100u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000106u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000118u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000112u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x00010Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x000179u : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x000116u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x000122u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x000136u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00012Au : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00013Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000143u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000145u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00014Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000172u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000141u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00015Au : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x00016Au : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00017Bu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x00017Du :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000105u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x00012Fu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000101u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000107u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000119u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000113u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x00010Du : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x00017Au : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x000117u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000123u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x000137u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x00012Bu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00013Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000144u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000146u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x00014Du : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000173u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000142u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x00015Bu : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x00016Bu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x00017Cu : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x00017Eu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x002019u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_14 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x001E02u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x001E03u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x00010Au : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x00010Bu : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x001E0Au : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x001E80u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x001E82u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x001E0Bu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x001EF2u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x000178u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x001E1Eu : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x001E1Fu : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x000120u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x000121u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x001E40u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x001E41u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x001E56u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x001E81u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x001E57u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x001E83u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x001E60u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x001EF3u : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x001E84u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x001E85u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x001E61u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000174u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x001E6Au : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x000176u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000175u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x001E6Bu : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x000177u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_15 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0020ACu : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000161u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x00017Du : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x00017Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x000152u : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x000153u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x000178u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_16 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x000104u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000105u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000141u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0020ACu : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x00201Eu : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x000218u : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x000179u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x00017Au : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x00017Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x00010Cu : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x000142u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x00017Du : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x00201Du : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x00017Eu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x00010Du : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x000219u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x000152u : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x000153u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x000178u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00017Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000102u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000106u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000110u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000143u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000150u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x00015Au : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000170u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x000118u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x00021Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000103u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000107u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000111u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000144u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000151u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x00015Bu : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000171u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x000119u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x00021Bu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_1_1987 == encoding ? bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_1_Windows_3_1_Latin_1 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0002C7u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0002D8u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000141u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000104u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x00015Eu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x00017Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0002DBu : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x000142u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x000105u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00015Fu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00013Du : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0002DDu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00013Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00017Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x000154u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000102u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000139u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000106u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x00010Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x000118u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00011Au : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00010Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000110u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000143u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000147u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000150u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000158u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x00016Eu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x000170u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x000162u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000155u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000103u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x00013Au : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000107u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x00010Du : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000119u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00011Bu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00010Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000111u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000144u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000148u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000151u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000159u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x00016Fu : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x000171u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x000163u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0002D9u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_2_1987 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x000104u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0002D8u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000141u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x00013Du : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x00015Au : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x00015Eu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x000164u : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x000179u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x00017Du : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x00017Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x000105u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0002DBu : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x000142u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x00013Eu : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x00015Bu : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0002C7u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00015Fu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x000165u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00017Au : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0002DDu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00017Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00017Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x000154u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000102u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000139u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000106u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x00010Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x000118u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00011Au : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00010Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000110u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000143u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000147u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000150u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000158u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x00016Eu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x000170u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x000162u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000155u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000103u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x00013Au : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000107u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x00010Du : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000119u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00011Bu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00010Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000111u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000144u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000148u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000151u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000159u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x00016Fu : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x000171u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x000163u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0002D9u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_3_1988 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x000126u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0002D8u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000124u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x000130u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x00015Eu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x00011Eu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x000134u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x00017Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x000127u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x000125u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x000131u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00015Fu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00011Fu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x000135u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00017Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x00010Au : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000108u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000120u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x00011Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00016Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x00015Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x00010Bu : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000109u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000121u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x00011Du : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x00016Du : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x00015Du : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0002D9u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_4_1988 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x000104u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000138u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000156u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000128u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x00013Bu : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x000112u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x000122u : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x000166u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x00017Du :
          bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x000105u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0002DBu : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x000157u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x000129u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x00013Cu : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0002C7u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x000113u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x000123u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x000167u : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00014Au : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00017Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00014Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x000100u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x00012Eu : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x00010Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x000118u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x000116u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00012Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000110u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000145u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00014Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x000136u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000172u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x000168u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x00016Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000101u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x00012Fu : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x00010Du : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000119u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000117u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00012Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000111u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000146u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x00014Du : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000137u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000173u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x000169u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x00016Bu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0002D9u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_5_1988 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x000401u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000402u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000403u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000404u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000405u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000406u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000407u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000408u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x000409u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x00040Au : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x00040Bu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x00040Cu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x00040Eu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x00040Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x000410u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x000411u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x000412u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x000413u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x000414u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x000415u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x000416u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x000417u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x000418u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x000419u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00041Au : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00041Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00041Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00041Du : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00041Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00041Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x000420u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000421u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000422u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000423u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000424u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000425u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000426u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000427u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000428u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000429u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00042Au : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x00042Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00042Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x00042Du : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00042Eu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00042Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000430u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000431u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000432u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x000433u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x000434u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000435u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x000436u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000437u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000438u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000439u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00043Au : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x00043Bu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00043Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00043Du : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x00043Eu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x00043Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000440u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x000441u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000442u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000443u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000444u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000445u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000446u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000447u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000448u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000449u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x00044Au : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x00044Bu : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00044Cu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x00044Du : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x00044Eu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00044Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x002116u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000451u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000452u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000453u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000454u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000455u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000456u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000457u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000458u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000459u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x00045Au : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x00045Bu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x00045Cu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x00045Eu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00045Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_6_1987 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x00060Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00061Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00061Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000621u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000622u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000623u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000624u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000625u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000626u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000627u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000628u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000629u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00062Au : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x00062Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00062Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x00062Du : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00062Eu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00062Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000630u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000631u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000632u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x000633u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x000634u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000635u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x000636u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000637u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000638u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000639u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00063Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000640u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x000641u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000642u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000643u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000644u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000645u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000646u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000647u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000648u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000649u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x00064Au : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x00064Bu : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00064Cu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x00064Du : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x00064Eu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00064Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000650u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000651u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000652u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_6_E == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x00060Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00061Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00061Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000621u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000622u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000623u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000624u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000625u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000626u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000627u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000628u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000629u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00062Au : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x00062Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00062Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x00062Du : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00062Eu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00062Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000630u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000631u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000632u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x000633u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x000634u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000635u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x000636u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000637u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000638u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000639u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00063Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000640u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x000641u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000642u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000643u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000644u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000645u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000646u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000647u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000648u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000649u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x00064Au : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x00064Bu : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00064Cu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x00064Du : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x00064Eu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00064Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000650u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000651u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000652u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_6_I == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x00060Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x00061Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00061Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000621u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000622u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000623u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000624u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000625u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000626u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000627u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000628u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000629u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00062Au : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x00062Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00062Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x00062Du : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00062Eu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00062Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000630u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000631u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000632u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x000633u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x000634u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000635u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x000636u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000637u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000638u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000639u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00063Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000640u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x000641u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000642u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000643u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000644u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000645u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000646u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000647u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000648u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000649u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x00064Au : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x00064Bu : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00064Cu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x00064Du : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x00064Eu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00064Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000650u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000651u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000652u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_7_1987 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x00201Bu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x002019u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x002014u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0003F4u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x000386u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x000388u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x000389u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00038Au : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00038Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00038Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00038Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x000390u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000391u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000392u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000393u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000394u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000395u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000396u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000397u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000398u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000399u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00039Au : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x00039Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00039Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x00039Du : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00039Eu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00039Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0003A0u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x0003A1u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x0003A3u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x0003A4u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x0003A5u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x0003A6u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x0003A7u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x0003A8u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x0003A9u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0003AAu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0003ABu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0003ACu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0003ADu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x0003AEu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0003AFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x0003B0u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0003B1u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x0003B2u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0003B3u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0003B4u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0003B5u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0003B6u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x0003B7u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0003B8u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x0003B9u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0003BAu : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0003BBu : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0003BCu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0003BDu : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0003BEu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0003BFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x0003C0u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0003C1u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x0003C2u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x0003C3u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x0003C4u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x0003C5u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x0003C6u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x0003C7u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x0003C8u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0003C9u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0003CAu : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0003CBu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0003CCu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0003CDu : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0003CEu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_9_1989 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00011Eu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x000130u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x00015Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000119u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000117u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00012Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x00011Fu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x000131u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x00015Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::ISO_8859_supp == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000100u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000108u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x00010Au : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000116u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000112u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x00011Cu : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x002018u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x00201Cu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x002122u : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x002190u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x002191u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x002192u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x002193u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x000101u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x000109u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x00010Bu : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x000117u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x000113u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x00011Du : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x002019u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00201Du : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002669u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00215Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00215Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00215Du : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00215Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x00011Eu : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000120u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000122u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000124u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000126u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000128u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000130u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x00012Au : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x00012Eu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x000132u : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x000134u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x000136u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x00013Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00013Fu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x000145u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x002014u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00014Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00014Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x000152u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x000156u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x00015Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x000166u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000168u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x00016Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00016Au : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x000172u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x000174u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x000176u : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x000178u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x002126u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x00011Fu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000121u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000123u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000125u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000127u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000129u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000131u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x00012Bu : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x00012Fu : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000133u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x000135u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000137u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x00013Cu : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x000140u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x000146u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000138u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x00014Bu : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x00014Du : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000153u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000157u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x00015Du : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000167u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000169u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x00016Du : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x00016Bu : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x000173u : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x000175u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x000177u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x000149u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::IT == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x23u ? 0x0000A3u :
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x0000A7u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000B0u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000E7u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000E9u :
          bytes::get_bits<7u>(source, sourceLength) == 0x60u ? 0x0000F9u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E0u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F2u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000E8u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000ECu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::JIS_C6220_1969_ro == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000A5u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000AFu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::JIS_C6229_1984_a == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x23u ? 0x0000A3u :
          bytes::get_bits<7u>(source, sourceLength) == 0x3Cu ? 0x002440u : bytes::get_bits<7u>(source, sourceLength) == 0x3Eu ? 0x002441u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000A5u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x002442u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x002443u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::JIS_C6229_1984_b == encoding || encoding::JIS_C6229_1984_hand == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x002329u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000A5u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x00232Au :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::JIS_C6229_1984_b_add == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x23u ? 0x0000A3u :
          bytes::get_bits<7u>(source, sourceLength) == 0x24u ? 0x0000A4u :
          bytes::get_bits<7u>(source, sourceLength) == 0x25u ? 0x00005Cu :
          bytes::get_bits<7u>(source, sourceLength) == 0x27u ? 0x0000A7u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::JIS_C6229_1984_hand_add == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x25u ? 0x00005Cu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::JIS_X0201 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x0000A5u :
          bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x0000AFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x003002u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x00300Cu : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x00300Du : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x003001u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x0030FBu : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x0030F2u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x0030A1u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0030A3u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x0030A5u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x0030A7u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0030A9u : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0030E3u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x0030E5u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0030E7u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0030C3u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0030FCu : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x0030A2u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0030A4u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x0030A6u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0030A8u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x0030AAu : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x0030ABu : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x0030ADu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0030AFu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0030B1u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x0030B3u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x0030B5u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0030B7u : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0030B9u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0030BBu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0030BDu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0030BFu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x0030C1u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x0030C4u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x0030C6u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x0030C8u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x0030CAu : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x0030CBu : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x0030CCu : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x0030CDu : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x0030CEu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0030CFu : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0030D2u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0030D5u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0030D8u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0030DBu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0030DEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0030DFu : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x0030E0u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x0030E1u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x0030E2u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x0030E4u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x0030E6u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x0030E8u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x0030E9u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x0030EAu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x0030EBu : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x0030ECu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0030EDu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x0030EFu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0030F3u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x00309Bu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x00309Cu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::JUS_I_B1_002 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x00017Du :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x000160u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x000110u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x000106u : bytes::get_bits<7u>(source, sourceLength) == 0x5Eu ? 0x00010Cu :
          bytes::get_bits<7u>(source, sourceLength) == 0x60u ? 0x00017Eu :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x000161u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x000111u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x000107u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x00010Du :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::KOI7_switched == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x60u ? 0x00042Eu : bytes::get_bits<7u>(source, sourceLength) == 0x61u ? 0x000410u : bytes::get_bits<7u>(source, sourceLength) == 0x62u ? 0x000411u : bytes::get_bits<7u>(source, sourceLength) == 0x63u ? 0x000426u : bytes::get_bits<7u>(source, sourceLength) == 0x64u ? 0x000414u : bytes::get_bits<7u>(source, sourceLength) == 0x65u ? 0x000415u : bytes::get_bits<7u>(source, sourceLength) == 0x66u ? 0x000424u : bytes::get_bits<7u>(source, sourceLength) == 0x67u ? 0x000413u : bytes::get_bits<7u>(source, sourceLength) == 0x68u ? 0x000425u : bytes::get_bits<7u>(source, sourceLength) == 0x69u ? 0x000418u : bytes::get_bits<7u>(source, sourceLength) == 0x6Au ? 0x000419u : bytes::get_bits<7u>(source, sourceLength) == 0x6Bu ? 0x00041Au : bytes::get_bits<7u>(source, sourceLength) == 0x6Cu ? 0x00041Bu : bytes::get_bits<7u>(source, sourceLength) == 0x6Du ? 0x00041Cu : bytes::get_bits<7u>(source, sourceLength) == 0x6Eu ? 0x00041Du : bytes::get_bits<7u>(source, sourceLength) == 0x6Fu ? 0x00041Eu :
          bytes::get_bits<7u>(source, sourceLength) == 0x70u ? 0x00041Fu : bytes::get_bits<7u>(source, sourceLength) == 0x71u ? 0x00042Fu : bytes::get_bits<7u>(source, sourceLength) == 0x72u ? 0x000420u : bytes::get_bits<7u>(source, sourceLength) == 0x73u ? 0x000421u : bytes::get_bits<7u>(source, sourceLength) == 0x74u ? 0x000422u : bytes::get_bits<7u>(source, sourceLength) == 0x75u ? 0x000423u : bytes::get_bits<7u>(source, sourceLength) == 0x76u ? 0x000416u : bytes::get_bits<7u>(source, sourceLength) == 0x77u ? 0x000412u : bytes::get_bits<7u>(source, sourceLength) == 0x78u ? 0x00042Cu : bytes::get_bits<7u>(source, sourceLength) == 0x79u ? 0x00042Bu : bytes::get_bits<7u>(source, sourceLength) == 0x7Au ? 0x000417u : bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x000428u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x00042Du : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x000429u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x000427u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::KOI8_R == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x002510u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x002580u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x00258Cu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x002590u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x002593u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x002320u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x002219u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00221Au : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x002248u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x002264u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x002265u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x002321u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000F7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x002550u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x002551u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x002552u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000451u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x002553u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x002554u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x002555u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x002556u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x002557u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x002558u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x002559u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x00255Au : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x00255Bu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x00255Cu : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x00255Du : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x00255Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x00255Fu : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002560u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002561u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x000401u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x002562u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x002563u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x002564u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x002565u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x002566u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x002567u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002568u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002569u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00256Au : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x00256Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00256Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000A9u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00044Eu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000430u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000431u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000446u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000434u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000435u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000444u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000433u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000445u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000438u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x000439u : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x00043Au : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00043Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x00043Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00043Du : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00043Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00043Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00044Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000440u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x000441u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x000442u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000443u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x000436u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000432u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x00044Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x00044Bu : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x000437u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x000448u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00044Du : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x000449u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x000447u : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x00044Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00042Eu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x000410u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000411u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000426u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000414u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000415u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000424u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000413u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000425u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000418u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000419u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x00041Au : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00041Bu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x00041Cu : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x00041Du : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00041Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x00041Fu : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x00042Fu : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000420u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000421u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000422u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000423u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000416u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000412u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x00042Cu : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x00042Bu : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x000417u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x000428u : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x00042Du : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x000429u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x000427u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00042Au :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::KOI8_U == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x002500u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x002502u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x00250Cu : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x002510u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x002514u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x002518u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x00251Cu : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x002524u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x00252Cu : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x002534u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x00253Cu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x002580u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x002584u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x002588u : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x00258Cu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x002590u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x002591u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x002592u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x002593u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x002320u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0025A0u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x002219u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x00221Au : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x002248u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x002264u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x002265u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x002321u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000B2u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000F7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x002550u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x002551u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x002552u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000451u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000454u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x002554u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000456u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000457u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x002557u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x002558u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x002559u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x00255Au : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x00255Bu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x000491u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x00255Du : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x00255Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x00255Fu : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x002560u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002561u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x000401u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x000404u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x002563u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x000406u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x000407u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x002566u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x002567u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x002568u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x002569u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00256Au : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x000490u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00256Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000A9u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x00044Eu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000430u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000431u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000446u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000434u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000435u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000444u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000433u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000445u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000438u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x000439u : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x00043Au : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00043Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x00043Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00043Du : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00043Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00043Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00044Fu : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000440u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x000441u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x000442u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000443u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x000436u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000432u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x00044Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x00044Bu : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x000437u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x000448u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00044Du : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x000449u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x000447u : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x00044Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x00042Eu : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x000410u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000411u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000426u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000414u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000415u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000424u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000413u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000425u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000418u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000419u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x00041Au : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00041Bu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x00041Cu : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x00041Du : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00041Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x00041Fu : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x00042Fu : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000420u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000421u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000422u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000423u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000416u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000412u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x00042Cu : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x00042Bu : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x000417u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x000428u : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x00042Du : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x000429u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x000427u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00042Au :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::KSC5636 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0020A9u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::KZ_1048 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x000402u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x000403u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x00201Au : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000453u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x00201Eu : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x002026u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x002020u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x002021u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0020ACu : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x002030u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x000409u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x002039u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x00040Au : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x00049Au : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0004BAu : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x00040Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x000452u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x002018u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x002019u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00201Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00201Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x002022u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x002013u : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x002014u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x002122u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x000459u : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x00203Au : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x00045Au : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x00049Bu : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0004BBu : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x00045Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0004B0u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0004B1u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x0004D8u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x0004E8u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000401u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x000492u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0004AEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x000406u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x000456u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0004E9u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x000451u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x002116u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x000493u : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0004D9u : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0004A2u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0004A3u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0004AFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x000410u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000411u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000412u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000413u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000414u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000415u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000416u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000417u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000418u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000419u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x00041Au : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x00041Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00041Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x00041Du : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00041Eu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00041Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000420u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000421u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000422u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x000423u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x000424u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000425u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x000426u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000427u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000428u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000429u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00042Au : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x00042Bu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00042Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00042Du : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x00042Eu : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x00042Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000430u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x000431u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000432u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000433u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000434u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000435u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000436u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000437u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000438u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000439u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x00043Au : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x00043Bu : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00043Cu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x00043Du : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x00043Eu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00043Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000440u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000441u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000442u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000443u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000444u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000445u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000446u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000447u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000448u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000449u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x00044Au : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x00044Bu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x00044Cu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x00044Du : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x00044Eu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x00044Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::latin_greek == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x23u ? 0x0000A3u :
          bytes::get_bits<7u>(source, sourceLength) == 0x61u ? 0x000391u : bytes::get_bits<7u>(source, sourceLength) == 0x62u ? 0x000392u : bytes::get_bits<7u>(source, sourceLength) == 0x63u ? 0x0003A8u : bytes::get_bits<7u>(source, sourceLength) == 0x64u ? 0x000394u : bytes::get_bits<7u>(source, sourceLength) == 0x65u ? 0x000395u : bytes::get_bits<7u>(source, sourceLength) == 0x66u ? 0x0003A6u : bytes::get_bits<7u>(source, sourceLength) == 0x67u ? 0x000393u : bytes::get_bits<7u>(source, sourceLength) == 0x68u ? 0x000397u : bytes::get_bits<7u>(source, sourceLength) == 0x69u ? 0x000399u : bytes::get_bits<7u>(source, sourceLength) == 0x6Au ? 0x00039Eu : bytes::get_bits<7u>(source, sourceLength) == 0x6Bu ? 0x00039Au : bytes::get_bits<7u>(source, sourceLength) == 0x6Cu ? 0x00039Bu : bytes::get_bits<7u>(source, sourceLength) == 0x6Du ? 0x00039Cu : bytes::get_bits<7u>(source, sourceLength) == 0x6Eu ? 0x00039Du : bytes::get_bits<7u>(source, sourceLength) == 0x6Fu ? 0x00039Fu :
          bytes::get_bits<7u>(source, sourceLength) == 0x70u ? 0x0003A0u : bytes::get_bits<7u>(source, sourceLength) == 0x72u ? 0x0003A1u : bytes::get_bits<7u>(source, sourceLength) == 0x73u ? 0x0003A3u : bytes::get_bits<7u>(source, sourceLength) == 0x74u ? 0x0003A4u : bytes::get_bits<7u>(source, sourceLength) == 0x75u ? 0x000398u : bytes::get_bits<7u>(source, sourceLength) == 0x76u ? 0x0003A9u : bytes::get_bits<7u>(source, sourceLength) == 0x77u ? 0x0000B7u : bytes::get_bits<7u>(source, sourceLength) == 0x78u ? 0x0003A7u : bytes::get_bits<7u>(source, sourceLength) == 0x79u ? 0x0003A5u : bytes::get_bits<7u>(source, sourceLength) == 0x7Au ? 0x000396u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000A8u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::Latin_greek_1 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x21u ? 0x00039Eu : bytes::get_bits<7u>(source, sourceLength) == 0x23u ? 0x000393u : bytes::get_bits<7u>(source, sourceLength) == 0x24u ? 0x0000A4u :
          bytes::get_bits<7u>(source, sourceLength) == 0x3Au ? 0x0003A8u : bytes::get_bits<7u>(source, sourceLength) == 0x3Fu ? 0x0003A0u :
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x000394u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0003A9u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x000398u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0003A6u : bytes::get_bits<7u>(source, sourceLength) == 0x5Eu ? 0x00039Bu : bytes::get_bits<7u>(source, sourceLength) == 0x5Fu ? 0x0003A3u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000AFu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::latin_lap == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000B4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x0002BFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x000102u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000100u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x0001DEu : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x0001E0u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x0001E2u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000114u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000112u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0001E4u : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0001E6u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0001E8u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x00014Eu : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x0001EAu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x0001ECu : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x00016Au : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x0001B7u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x0001EEu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000103u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000101u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x0001DFu : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0001E1u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0001E3u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000115u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000113u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0001E5u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0001E7u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0001E9u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x00014Fu : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0001EBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x0001EDu : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x00016Bu : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x00E01Eu : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x0001EFu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::macintosh == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x0000C5u : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x0000C7u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x0000C9u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x0000D1u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x0000DCu : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x0000E1u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0000E0u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x0000E2u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x0000E3u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x0000E5u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000E7u : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0000E9u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000E8u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x0000EAu : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x0000EBu : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x0000EDu : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x0000ECu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x0000EEu : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x0000EFu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x0000F1u : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x0000F3u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x0000F2u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x0000F4u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x0000F5u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x0000FAu : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000F9u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0000FBu : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x0000FCu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x002020u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0000B0u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x0000A7u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x002219u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x0000B6u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000AEu : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x002122u : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x0000B4u : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x002260u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000D8u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x00221Eu : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x002264u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x002265u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000A5u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x002202u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x002211u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x00220Fu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x0003C0u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00222Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0003A9u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000F8u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x0000BFu : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x0000A1u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x0000ACu : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x00221Au : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000192u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x002248u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000394u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x0000ABu : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x0000BBu : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x0022EFu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x0000A0u : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x0000C0u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x0000C3u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x0000D5u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x000152u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x000153u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x002014u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x002013u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x00201Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x00201Du : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x002018u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x002019u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x0000F7u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x0025C6u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x0000FFu : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000178u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x002044u : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x0000A4u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x002039u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00203Au : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x00FB01u : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x00FB02u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x002021u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000B7u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x00201Au : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x00201Eu : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x002030u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x0000C2u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x0000CAu : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x0000C1u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x0000CBu : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x0000C8u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x0000CDu : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000CEu : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000CFu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x0000CCu : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x0000D3u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x0000D4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000D2u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x0000DAu : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x0000DBu : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x0000D9u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000131u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0002D8u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x0002D9u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0002DAu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000B8u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0002DDu : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0002DBu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0002C7u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::MSZ_7795_3 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x24u ? 0x0000A4u :
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x0000C1u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000C9u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000D6u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000DCu :
          bytes::get_bits<7u>(source, sourceLength) == 0x60u ? 0x0000E1u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E9u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F6u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000FCu : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0002DDu :
          bytes::get_bits<7u>(source, sourceLength) : // [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+0023], [0x24, U+00A4], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+00C1], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00C9], [0x5C, U+00D6], [0x5D, U+00DC], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+00E1], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E9], [0x7C, U+00F6], [0x7D, U+00FC], [0x7E, U+02DD], [0x7F, U+007F]
        encoding::NATS_DANO == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x22u ? 0x0000ABu : bytes::get_bits<7u>(source, sourceLength) == 0x23u ? 0x0000BBu :
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x00E002u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000C6u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000D8u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000C5u : bytes::get_bits<7u>(source, sourceLength) == 0x5Eu ? 0x0025A0u :
          bytes::get_bits<7u>(source, sourceLength) == 0x60u ? 0x00E003u : bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E6u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F8u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000E5u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x002013u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::NATS_DANO_ADD == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x41u ? 0x0000C0u : bytes::get_bits<7u>(source, sourceLength) == 0x44u ? 0x000110u : bytes::get_bits<7u>(source, sourceLength) == 0x45u ? 0x0000C9u :
          bytes::get_bits<7u>(source, sourceLength) == 0x50u ? 0x0000DEu : bytes::get_bits<7u>(source, sourceLength) == 0x55u ? 0x0000DCu : bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000C4u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000D6u :
          bytes::get_bits<7u>(source, sourceLength) == 0x61u ? 0x0000E0u : bytes::get_bits<7u>(source, sourceLength) == 0x64u ? 0x000111u : bytes::get_bits<7u>(source, sourceLength) == 0x65u ? 0x0000E9u :
          bytes::get_bits<7u>(source, sourceLength) == 0x70u ? 0x0000FEu : bytes::get_bits<7u>(source, sourceLength) == 0x75u ? 0x0000FCu : bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E4u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F6u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::NATS_SEFI == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x20u ? 0x00E002u : bytes::get_bits<7u>(source, sourceLength) == 0x21u ? 0x000041u : bytes::get_bits<7u>(source, sourceLength) == 0x22u ? 0x000042u : bytes::get_bits<7u>(source, sourceLength) == 0x23u ? 0x000043u : bytes::get_bits<7u>(source, sourceLength) == 0x24u ? 0x000044u : bytes::get_bits<7u>(source, sourceLength) == 0x25u ? 0x000045u : bytes::get_bits<7u>(source, sourceLength) == 0x26u ? 0x000046u : bytes::get_bits<7u>(source, sourceLength) == 0x27u ? 0x000047u : bytes::get_bits<7u>(source, sourceLength) == 0x28u ? 0x000048u : bytes::get_bits<7u>(source, sourceLength) == 0x29u ? 0x000049u : bytes::get_bits<7u>(source, sourceLength) == 0x2Au ? 0x00004Au : bytes::get_bits<7u>(source, sourceLength) == 0x2Bu ? 0x00004Bu : bytes::get_bits<7u>(source, sourceLength) == 0x2Cu ? 0x00004Cu : bytes::get_bits<7u>(source, sourceLength) == 0x2Du ? 0x00004Du : bytes::get_bits<7u>(source, sourceLength) == 0x2Eu ? 0x00004Eu : bytes::get_bits<7u>(source, sourceLength) == 0x2Fu ? 0x00004Fu :
          bytes::get_bits<7u>(source, sourceLength) == 0x30u ? 0x000050u : bytes::get_bits<7u>(source, sourceLength) == 0x31u ? 0x000051u : bytes::get_bits<7u>(source, sourceLength) == 0x32u ? 0x000052u : bytes::get_bits<7u>(source, sourceLength) == 0x33u ? 0x000053u : bytes::get_bits<7u>(source, sourceLength) == 0x34u ? 0x000054u : bytes::get_bits<7u>(source, sourceLength) == 0x35u ? 0x000055u : bytes::get_bits<7u>(source, sourceLength) == 0x36u ? 0x000056u : bytes::get_bits<7u>(source, sourceLength) == 0x37u ? 0x000057u : bytes::get_bits<7u>(source, sourceLength) == 0x38u ? 0x000058u : bytes::get_bits<7u>(source, sourceLength) == 0x39u ? 0x000059u : bytes::get_bits<7u>(source, sourceLength) == 0x3Au ? 0x00005Au : bytes::get_bits<7u>(source, sourceLength) == 0x3Bu ? 0x0000C4u : bytes::get_bits<7u>(source, sourceLength) == 0x3Cu ? 0x0000D6u : bytes::get_bits<7u>(source, sourceLength) == 0x3Du ? 0x0000C5u : bytes::get_bits<7u>(source, sourceLength) == 0x3Eu ? 0x0025A0u : bytes::get_bits<7u>(source, sourceLength) == 0x3Fu ? 0x00005Fu :
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x00E003u : bytes::get_bits<7u>(source, sourceLength) == 0x41u ? 0x000061u : bytes::get_bits<7u>(source, sourceLength) == 0x42u ? 0x000062u : bytes::get_bits<7u>(source, sourceLength) == 0x43u ? 0x000063u : bytes::get_bits<7u>(source, sourceLength) == 0x44u ? 0x000064u : bytes::get_bits<7u>(source, sourceLength) == 0x45u ? 0x000065u : bytes::get_bits<7u>(source, sourceLength) == 0x46u ? 0x000066u : bytes::get_bits<7u>(source, sourceLength) == 0x47u ? 0x000067u : bytes::get_bits<7u>(source, sourceLength) == 0x48u ? 0x000068u : bytes::get_bits<7u>(source, sourceLength) == 0x49u ? 0x000069u : bytes::get_bits<7u>(source, sourceLength) == 0x4Au ? 0x00006Au : bytes::get_bits<7u>(source, sourceLength) == 0x4Bu ? 0x00006Bu : bytes::get_bits<7u>(source, sourceLength) == 0x4Cu ? 0x00006Cu : bytes::get_bits<7u>(source, sourceLength) == 0x4Du ? 0x00006Du : bytes::get_bits<7u>(source, sourceLength) == 0x4Eu ? 0x00006Eu : bytes::get_bits<7u>(source, sourceLength) == 0x4Fu ? 0x00006Fu :
          bytes::get_bits<7u>(source, sourceLength) == 0x50u ? 0x000070u : bytes::get_bits<7u>(source, sourceLength) == 0x51u ? 0x000071u : bytes::get_bits<7u>(source, sourceLength) == 0x52u ? 0x000072u : bytes::get_bits<7u>(source, sourceLength) == 0x53u ? 0x000073u : bytes::get_bits<7u>(source, sourceLength) == 0x54u ? 0x000074u : bytes::get_bits<7u>(source, sourceLength) == 0x55u ? 0x000075u : bytes::get_bits<7u>(source, sourceLength) == 0x56u ? 0x000076u : bytes::get_bits<7u>(source, sourceLength) == 0x57u ? 0x000077u : bytes::get_bits<7u>(source, sourceLength) == 0x58u ? 0x000078u : bytes::get_bits<7u>(source, sourceLength) == 0x59u ? 0x000079u : bytes::get_bits<7u>(source, sourceLength) == 0x5Au ? 0x00007Au : bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000E4u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000F6u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000E5u : bytes::get_bits<7u>(source, sourceLength) == 0x5Eu ? 0x002013u : bytes::get_bits<7u>(source, sourceLength) == 0x5Fu ? 0x00007Fu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::NATS_SEFI_ADD == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x41u ? 0x0000C0u : bytes::get_bits<7u>(source, sourceLength) == 0x44u ? 0x000110u : bytes::get_bits<7u>(source, sourceLength) == 0x45u ? 0x0000C9u :
          bytes::get_bits<7u>(source, sourceLength) == 0x50u ? 0x0000DEu : bytes::get_bits<7u>(source, sourceLength) == 0x55u ? 0x0000DCu : bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000C6u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000D8u :
          bytes::get_bits<7u>(source, sourceLength) == 0x61u ? 0x0000E0u : bytes::get_bits<7u>(source, sourceLength) == 0x64u ? 0x000111u : bytes::get_bits<7u>(source, sourceLength) == 0x65u ? 0x0000E9u :
          bytes::get_bits<7u>(source, sourceLength) == 0x70u ? 0x0000FEu : bytes::get_bits<7u>(source, sourceLength) == 0x75u ? 0x0000FCu : bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E6u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F8u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::NC_NC00_10_81 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x24u ? 0x0000A4u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000A1u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000D1u : bytes::get_bits<7u>(source, sourceLength) == 0x5Eu ? 0x0000BFu :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000B4u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F1u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x00005Bu : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000A8u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::NF_Z_62_010 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x23u ? 0x0000A3u :
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x0000E0u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000B0u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000E7u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000A7u :
          bytes::get_bits<7u>(source, sourceLength) == 0x60u ? 0x0000B5u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E9u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F9u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000E8u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000A8u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::NF_Z_62_010_1973 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x23u ? 0x0000A3u :
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x0000E0u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000B0u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000E7u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000A7u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E9u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F9u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000E8u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000A8u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::NS_4551_1 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000C6u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000D8u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000C5u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E6u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F8u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000E5u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000AFu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::NS_4551_2 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x23u ? 0x0000B6u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000C6u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000D8u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000C5u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E6u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F8u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000E5u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x00007Cu :
          bytes::get_bits<7u>(source, sourceLength) : // --> [0x00, U+0000], [0x01, U+0001], [0x02, U+0002], [0x03, U+0003], [0x04, U+0004], [0x05, U+0005], [0x06, U+0006], [0x07, U+0007], [0x08, U+0008], [0x09, U+0009], [0x0A, U+000A], [0x0B, U+000B], [0x0C, U+000C], [0x0D, U+000D], [0x0E, U+000E], [0x0F, U+000F], [0x10, U+0010], [0x11, U+0011], [0x12, U+0012], [0x13, U+0013], [0x14, U+0014], [0x15, U+0015], [0x16, U+0016], [0x17, U+0017], [0x18, U+0018], [0x19, U+0019], [0x1A, U+001A], [0x1B, U+001B], [0x1C, U+001C], [0x1D, U+001D], [0x1E, U+001E], [0x1F, U+001F], [0x20, U+0020], [0x21, U+0021], [0x22, U+0022], [0x23, U+00B6], [0x24, U+0024], [0x25, U+0025], [0x26, U+0026], [0x27, U+0027], [0x28, U+0028], [0x29, U+0029], [0x2A, U+002A], [0x2B, U+002B], [0x2C, U+002C], [0x2D, U+002D], [0x2E, U+002E], [0x2F, U+002F], [0x30, U+0030], [0x31, U+0031], [0x32, U+0032], [0x33, U+0033], [0x34, U+0034], [0x35, U+0035], [0x36, U+0036], [0x37, U+0037], [0x38, U+0038], [0x39, U+0039], [0x3A, U+003A], [0x3B, U+003B], [0x3C, U+003C], [0x3D, U+003D], [0x3E, U+003E], [0x3F, U+003F], [0x40, U+0040], [0x41, U+0041], [0x42, U+0042], [0x43, U+0043], [0x44, U+0044], [0x45, U+0045], [0x46, U+0046], [0x47, U+0047], [0x48, U+0048], [0x49, U+0049], [0x4A, U+004A], [0x4B, U+004B], [0x4C, U+004C], [0x4D, U+004D], [0x4E, U+004E], [0x4F, U+004F], [0x50, U+0050], [0x51, U+0051], [0x52, U+0052], [0x53, U+0053], [0x54, U+0054], [0x55, U+0055], [0x56, U+0056], [0x57, U+0057], [0x58, U+0058], [0x59, U+0059], [0x5A, U+005A], [0x5B, U+00C6], [0x5C, U+00D8], [0x5D, U+00C5], [0x5E, U+005E], [0x5F, U+005F], [0x60, U+0060], [0x61, U+0061], [0x62, U+0062], [0x63, U+0063], [0x64, U+0064], [0x65, U+0065], [0x66, U+0066], [0x67, U+0067], [0x68, U+0068], [0x69, U+0069], [0x6A, U+006A], [0x6B, U+006B], [0x6C, U+006C], [0x6D, U+006D], [0x6E, U+006E], [0x6F, U+006F], [0x70, U+0070], [0x71, U+0071], [0x72, U+0072], [0x73, U+0073], [0x74, U+0074], [0x75, U+0075], [0x76, U+0076], [0x77, U+0077], [0x78, U+0078], [0x79, U+0079], [0x7A, U+007A], [0x7B, U+00E6], [0x7C, U+00F8], [0x7D, U+00E5], [0x7E, U+007C], [0x7F, U+007F]
        encoding::PT == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x0000A7u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000C3u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000C7u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000D5u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E3u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000E7u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000F5u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000B0u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::PT2 == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x0000B4u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000C3u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000C7u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000D5u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E3u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000E7u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000F5u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000AFu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::SEN_850200_B == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x24u ? 0x0000A4u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000C4u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000D6u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000C5u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E4u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F6u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000E5u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000AFu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::SEN_850200_C == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x24u ? 0x0000A4u :
          bytes::get_bits<7u>(source, sourceLength) == 0x40u ? 0x0000C9u :
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000C4u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000D6u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000C5u : bytes::get_bits<7u>(source, sourceLength) == 0x5Eu ? 0x0000DCu :
          bytes::get_bits<7u>(source, sourceLength) == 0x60u ? 0x0000E9u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E4u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F6u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000E5u : bytes::get_bits<7u>(source, sourceLength) == 0x7Eu ? 0x0000FCu :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::T_61_7bit == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x24u ? 0x0000A4u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::T_61_8bit == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000024u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000023u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000A4u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0000D7u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000F7u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x002126u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x0000C6u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x0000D0u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x0000AAu : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000126u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000132u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x00013Fu : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000141u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000152u : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x0000BAu : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x0000DEu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x000166u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x00014Au : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x000149u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000138u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x0000E6u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000111u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x0000F0u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000127u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000131u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000133u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000140u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000142u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x000153u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x0000DFu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x0000FEu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x000167u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x00014Bu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::TIS_620 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x000E01u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x000E02u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000E03u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x000E04u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000E05u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x000E06u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000E07u : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x000E08u : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x000E09u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x000E0Au : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x000E0Bu : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x000E0Cu : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x000E0Du : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x000E0Eu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x000E0Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x000E10u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x000E11u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x000E12u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x000E13u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x000E14u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x000E15u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x000E16u : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x000E17u : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x000E18u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x000E19u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x000E1Au : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x000E1Bu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x000E1Cu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x000E1Du : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x000E1Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x000E1Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x000E20u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x000E21u : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000E22u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000E23u : bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x000E24u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000E25u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000E26u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000E27u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x000E28u : bytes::get_bits<8u>(source, sourceLength) == 0xC9u ? 0x000E29u : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x000E2Au : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x000E2Bu : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x000E2Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x000E2Du : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x000E2Eu : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x000E2Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000E30u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000E31u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000E32u : bytes::get_bits<8u>(source, sourceLength) == 0xD3u ? 0x000E33u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x000E34u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000E35u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x000E36u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x000E37u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000E38u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000E39u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x000E3Au : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x000E3Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000E40u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x000E41u : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000E42u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000E43u : bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x000E44u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000E45u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000E46u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000E47u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x000E48u : bytes::get_bits<8u>(source, sourceLength) == 0xE9u ? 0x000E49u : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000E4Au : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x000E4Bu : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000E4Cu : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x000E4Du : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x000E4Eu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x000E4Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000E50u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000E51u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000E52u : bytes::get_bits<8u>(source, sourceLength) == 0xF3u ? 0x000E53u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x000E54u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000E55u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x000E56u : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x000E57u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000E58u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000E59u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x000E5Au : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x000E5Bu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::US_ASCII == encoding ? bytes::get_bits<(CHAR_BIT > 6u ? CHAR_BIT : 7u)>(source, sourceLength) :
        encoding::us_dk    == encoding ?
          bytes::get_bits<7u>(source, sourceLength) == 0x5Bu ? 0x0000C6u : bytes::get_bits<7u>(source, sourceLength) == 0x5Cu ? 0x0000D8u : bytes::get_bits<7u>(source, sourceLength) == 0x5Du ? 0x0000C5u :
          bytes::get_bits<7u>(source, sourceLength) == 0x7Bu ? 0x0000E6u : bytes::get_bits<7u>(source, sourceLength) == 0x7Cu ? 0x0000F8u : bytes::get_bits<7u>(source, sourceLength) == 0x7Du ? 0x0000E5u :
          bytes::get_bits<7u>(source, sourceLength) :
        encoding::VISCII == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x02u ? 0x001EB2u : bytes::get_bits<8u>(source, sourceLength) == 0x05u ? 0x001EB4u : bytes::get_bits<8u>(source, sourceLength) == 0x06u ? 0x001EAAu :
          bytes::get_bits<8u>(source, sourceLength) == 0x14u ? 0x001EF6u : bytes::get_bits<8u>(source, sourceLength) == 0x19u ? 0x001EF8u : bytes::get_bits<8u>(source, sourceLength) == 0x1Eu ? 0x001EF4u :
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x001EA0u : bytes::get_bits<8u>(source, sourceLength) == 0x81u ? 0x001EAEu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x001EB0u : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x001EB6u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x001EA4u : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x001EA6u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x001EA8u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x001EACu : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x001EBCu : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x001EB8u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x001EBEu : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x001EC0u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x001EC2u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x001EC4u : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x001EC6u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x001ED0u :
          bytes::get_bits<8u>(source, sourceLength) == 0x90u ? 0x001ED2u : bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x001ED4u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x001ED6u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x001ED8u : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x001EE2u : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x001EDAu : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x001EDCu : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x001EDEu : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x001ECAu : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x001ECEu : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x001ECCu : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x001EC8u : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x001EE6u : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x000168u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x001EE4u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x001EF2u :
          bytes::get_bits<8u>(source, sourceLength) == 0xA0u ? 0x0000D5u : bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x001EAFu : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x001EB1u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x001EB7u : bytes::get_bits<8u>(source, sourceLength) == 0xA4u ? 0x001EA5u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x001EA7u : bytes::get_bits<8u>(source, sourceLength) == 0xA6u ? 0x001EA9u : bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x001EADu : bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x001EBDu : bytes::get_bits<8u>(source, sourceLength) == 0xA9u ? 0x001EB9u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x001EBFu : bytes::get_bits<8u>(source, sourceLength) == 0xABu ? 0x001EC1u : bytes::get_bits<8u>(source, sourceLength) == 0xACu ? 0x001EC3u : bytes::get_bits<8u>(source, sourceLength) == 0xADu ? 0x001EC5u : bytes::get_bits<8u>(source, sourceLength) == 0xAEu ? 0x001EC7u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x001ED1u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB0u ? 0x001ED3u : bytes::get_bits<8u>(source, sourceLength) == 0xB1u ? 0x001ED5u : bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x001ED7u : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x001EE0u : bytes::get_bits<8u>(source, sourceLength) == 0xB4u ? 0x0001A0u : bytes::get_bits<8u>(source, sourceLength) == 0xB5u ? 0x001ED9u : bytes::get_bits<8u>(source, sourceLength) == 0xB6u ? 0x001EDDu : bytes::get_bits<8u>(source, sourceLength) == 0xB7u ? 0x001EDFu : bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x001ECBu : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x001EF0u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x001EE8u : bytes::get_bits<8u>(source, sourceLength) == 0xBBu ? 0x001EEAu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x001EECu : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0001A1u : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x001EDBu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0001AFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x001EA2u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000102u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x001EB3u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x001EB5u : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x001EBAu : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x000128u : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x001EF3u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000110u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x001EE9u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x001EA1u : bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x001EF7u : bytes::get_bits<8u>(source, sourceLength) == 0xD7u ? 0x001EEBu : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x001EEDu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x001EF9u : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x001EF5u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x001EE1u : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x0001B0u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x001EA3u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x000103u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x001EEFu : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x001EABu : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x001EBBu : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x000129u : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x001EC9u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000111u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x001EF1u : bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x001ECFu : bytes::get_bits<8u>(source, sourceLength) == 0xF7u ? 0x001ECDu : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x001EE5u : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x000169u : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x001EE7u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x001EE3u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x001EEEu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::windows_1250 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0020ACu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x00201Au : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x00201Eu : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x002026u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x002020u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x002021u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x002030u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x002039u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x00015Au : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x000164u : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x00017Du : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x000179u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x002018u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x002019u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00201Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00201Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x002022u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x002013u : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x002014u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x002122u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x00203Au : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x00015Bu : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x000165u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x00017Eu : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x00017Au :
          bytes::get_bits<8u>(source, sourceLength) == 0xA1u ? 0x0002C7u : bytes::get_bits<8u>(source, sourceLength) == 0xA2u ? 0x0002D8u : bytes::get_bits<8u>(source, sourceLength) == 0xA3u ? 0x000141u : bytes::get_bits<8u>(source, sourceLength) == 0xA5u ? 0x000104u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x00015Eu : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x00017Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xB2u ? 0x0002DBu : bytes::get_bits<8u>(source, sourceLength) == 0xB3u ? 0x000142u : bytes::get_bits<8u>(source, sourceLength) == 0xB9u ? 0x000105u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x00015Fu : bytes::get_bits<8u>(source, sourceLength) == 0xBCu ? 0x00013Du : bytes::get_bits<8u>(source, sourceLength) == 0xBDu ? 0x0002DDu : bytes::get_bits<8u>(source, sourceLength) == 0xBEu ? 0x00013Eu : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x00017Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x000154u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000102u : bytes::get_bits<8u>(source, sourceLength) == 0xC5u ? 0x000139u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000106u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x00010Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x000118u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x00011Au : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00010Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000110u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000143u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000147u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x000150u : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000158u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x00016Eu : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x000170u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x000162u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000155u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000103u : bytes::get_bits<8u>(source, sourceLength) == 0xE5u ? 0x00013Au : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000107u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x00010Du : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x000119u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x00011Bu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00010Fu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000111u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000144u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000148u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x000151u : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000159u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x00016Fu : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x000171u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x000163u : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0002D9u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::windows_1252 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0020ACu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x00201Au : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000192u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x00201Eu : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x002026u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x002020u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x002021u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0002C6u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x002030u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x002039u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x000152u : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x00017Du :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x002018u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x002019u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00201Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00201Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x002022u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x002013u : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x002014u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x0002DCu : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x002122u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x00203Au : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x000153u : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x00017Eu : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x000178u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::windows_1254 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0020ACu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x00201Au : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000192u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x00201Eu : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x002026u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x002020u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x002021u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0002C6u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x002030u : bytes::get_bits<8u>(source, sourceLength) == 0x8Au ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x002039u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x000152u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x002018u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x002019u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00201Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00201Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x002022u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x002013u : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x002014u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x0002DCu : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x002122u : bytes::get_bits<8u>(source, sourceLength) == 0x9Au ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x00203Au : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x000153u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x000178u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x00011Eu : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x000130u : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x00015Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x00011Fu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x000131u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x00015Fu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::windows_1257 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0020ACu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x00201Au : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x00201Eu : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x002026u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x002020u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x002021u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x002030u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x002039u : bytes::get_bits<8u>(source, sourceLength) == 0x8Du ? 0x0000A8u : bytes::get_bits<8u>(source, sourceLength) == 0x8Eu ? 0x0002C7u : bytes::get_bits<8u>(source, sourceLength) == 0x8Fu ? 0x0000B8u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x002018u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x002019u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00201Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00201Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x002022u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x002013u : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x002014u : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x002122u : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x00203Au : bytes::get_bits<8u>(source, sourceLength) == 0x9Du ? 0x0000AFu : bytes::get_bits<8u>(source, sourceLength) == 0x9Eu ? 0x0002DBu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA8u ? 0x0000D8u : bytes::get_bits<8u>(source, sourceLength) == 0xAAu ? 0x000156u : bytes::get_bits<8u>(source, sourceLength) == 0xAFu ? 0x0000C6u :
          bytes::get_bits<8u>(source, sourceLength) == 0xB8u ? 0x0000F8u : bytes::get_bits<8u>(source, sourceLength) == 0xBAu ? 0x000157u : bytes::get_bits<8u>(source, sourceLength) == 0xBFu ? 0x0000E6u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC0u ? 0x000104u : bytes::get_bits<8u>(source, sourceLength) == 0xC1u ? 0x00012Eu : bytes::get_bits<8u>(source, sourceLength) == 0xC2u ? 0x000100u : bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000106u : bytes::get_bits<8u>(source, sourceLength) == 0xC6u ? 0x000118u : bytes::get_bits<8u>(source, sourceLength) == 0xC7u ? 0x000112u : bytes::get_bits<8u>(source, sourceLength) == 0xC8u ? 0x00010Cu : bytes::get_bits<8u>(source, sourceLength) == 0xCAu ? 0x000179u : bytes::get_bits<8u>(source, sourceLength) == 0xCBu ? 0x000116u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x000122u : bytes::get_bits<8u>(source, sourceLength) == 0xCDu ? 0x000136u : bytes::get_bits<8u>(source, sourceLength) == 0xCEu ? 0x00012Au : bytes::get_bits<8u>(source, sourceLength) == 0xCFu ? 0x00013Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000160u : bytes::get_bits<8u>(source, sourceLength) == 0xD1u ? 0x000143u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000145u : bytes::get_bits<8u>(source, sourceLength) == 0xD4u ? 0x00014Cu : bytes::get_bits<8u>(source, sourceLength) == 0xD8u ? 0x000172u : bytes::get_bits<8u>(source, sourceLength) == 0xD9u ? 0x000141u : bytes::get_bits<8u>(source, sourceLength) == 0xDAu ? 0x00015Au : bytes::get_bits<8u>(source, sourceLength) == 0xDBu ? 0x00016Au : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x00017Bu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x00017Du :
          bytes::get_bits<8u>(source, sourceLength) == 0xE0u ? 0x000105u : bytes::get_bits<8u>(source, sourceLength) == 0xE1u ? 0x00012Fu : bytes::get_bits<8u>(source, sourceLength) == 0xE2u ? 0x000101u : bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000107u : bytes::get_bits<8u>(source, sourceLength) == 0xE6u ? 0x000119u : bytes::get_bits<8u>(source, sourceLength) == 0xE7u ? 0x000113u : bytes::get_bits<8u>(source, sourceLength) == 0xE8u ? 0x00010Du : bytes::get_bits<8u>(source, sourceLength) == 0xEAu ? 0x00017Au : bytes::get_bits<8u>(source, sourceLength) == 0xEBu ? 0x000117u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000123u : bytes::get_bits<8u>(source, sourceLength) == 0xEDu ? 0x000137u : bytes::get_bits<8u>(source, sourceLength) == 0xEEu ? 0x00012Bu : bytes::get_bits<8u>(source, sourceLength) == 0xEFu ? 0x00013Cu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000161u : bytes::get_bits<8u>(source, sourceLength) == 0xF1u ? 0x000144u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000146u : bytes::get_bits<8u>(source, sourceLength) == 0xF4u ? 0x00014Du : bytes::get_bits<8u>(source, sourceLength) == 0xF8u ? 0x000173u : bytes::get_bits<8u>(source, sourceLength) == 0xF9u ? 0x000142u : bytes::get_bits<8u>(source, sourceLength) == 0xFAu ? 0x00015Bu : bytes::get_bits<8u>(source, sourceLength) == 0xFBu ? 0x00016Bu : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x00017Cu : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x00017Eu : bytes::get_bits<8u>(source, sourceLength) == 0xFFu ? 0x0002D9u :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::windows_1258 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x80u ? 0x0020ACu : bytes::get_bits<8u>(source, sourceLength) == 0x82u ? 0x00201Au : bytes::get_bits<8u>(source, sourceLength) == 0x83u ? 0x000192u : bytes::get_bits<8u>(source, sourceLength) == 0x84u ? 0x00201Eu : bytes::get_bits<8u>(source, sourceLength) == 0x85u ? 0x002026u : bytes::get_bits<8u>(source, sourceLength) == 0x86u ? 0x002020u : bytes::get_bits<8u>(source, sourceLength) == 0x87u ? 0x002021u : bytes::get_bits<8u>(source, sourceLength) == 0x88u ? 0x0002C6u : bytes::get_bits<8u>(source, sourceLength) == 0x89u ? 0x002030u : bytes::get_bits<8u>(source, sourceLength) == 0x8Bu ? 0x002039u : bytes::get_bits<8u>(source, sourceLength) == 0x8Cu ? 0x000152u :
          bytes::get_bits<8u>(source, sourceLength) == 0x91u ? 0x002018u : bytes::get_bits<8u>(source, sourceLength) == 0x92u ? 0x002019u : bytes::get_bits<8u>(source, sourceLength) == 0x93u ? 0x00201Cu : bytes::get_bits<8u>(source, sourceLength) == 0x94u ? 0x00201Du : bytes::get_bits<8u>(source, sourceLength) == 0x95u ? 0x002022u : bytes::get_bits<8u>(source, sourceLength) == 0x96u ? 0x002013u : bytes::get_bits<8u>(source, sourceLength) == 0x97u ? 0x002014u : bytes::get_bits<8u>(source, sourceLength) == 0x98u ? 0x0002DCu : bytes::get_bits<8u>(source, sourceLength) == 0x99u ? 0x002122u : bytes::get_bits<8u>(source, sourceLength) == 0x9Bu ? 0x00203Au : bytes::get_bits<8u>(source, sourceLength) == 0x9Cu ? 0x000153u : bytes::get_bits<8u>(source, sourceLength) == 0x9Fu ? 0x000178u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC3u ? 0x000102u : bytes::get_bits<8u>(source, sourceLength) == 0xCCu ? 0x000300u :
          bytes::get_bits<8u>(source, sourceLength) == 0xD0u ? 0x000110u : bytes::get_bits<8u>(source, sourceLength) == 0xD2u ? 0x000309u : bytes::get_bits<8u>(source, sourceLength) == 0xD5u ? 0x0001A0u : bytes::get_bits<8u>(source, sourceLength) == 0xDDu ? 0x0001AFu : bytes::get_bits<8u>(source, sourceLength) == 0xDEu ? 0x000303u :
          bytes::get_bits<8u>(source, sourceLength) == 0xE3u ? 0x000103u : bytes::get_bits<8u>(source, sourceLength) == 0xECu ? 0x000301u :
          bytes::get_bits<8u>(source, sourceLength) == 0xF0u ? 0x000111u : bytes::get_bits<8u>(source, sourceLength) == 0xF2u ? 0x000323u : bytes::get_bits<8u>(source, sourceLength) == 0xF5u ? 0x0001A1u : bytes::get_bits<8u>(source, sourceLength) == 0xFDu ? 0x0001B0u : bytes::get_bits<8u>(source, sourceLength) == 0xFEu ? 0x0020ABu :
          bytes::get_bits<8u>(source, sourceLength) :
        encoding::x_DIN_66303 == encoding ?
          bytes::get_bits<8u>(source, sourceLength) == 0x40u ? 0x0000A7u :
          bytes::get_bits<8u>(source, sourceLength) == 0x5Bu ? 0x0000C4u : bytes::get_bits<8u>(source, sourceLength) == 0x5Cu ? 0x0000D6u : bytes::get_bits<8u>(source, sourceLength) == 0x5Du ? 0x0000DCu :
          bytes::get_bits<8u>(source, sourceLength) == 0x7Bu ? 0x0000E4u : bytes::get_bits<8u>(source, sourceLength) == 0x7Cu ? 0x0000F6u : bytes::get_bits<8u>(source, sourceLength) == 0x7Du ? 0x0000FCu : bytes::get_bits<8u>(source, sourceLength) == 0x7Eu ? 0x0000DFu :
          bytes::get_bits<8u>(source, sourceLength) == 0xA7u ? 0x000040u :
          bytes::get_bits<8u>(source, sourceLength) == 0xC4u ? 0x00005Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xD6u ? 0x00005Cu : bytes::get_bits<8u>(source, sourceLength) == 0xDCu ? 0x00005Du : bytes::get_bits<8u>(source, sourceLength) == 0xDFu ? 0x00007Eu :
          bytes::get_bits<8u>(source, sourceLength) == 0xE4u ? 0x00007Bu :
          bytes::get_bits<8u>(source, sourceLength) == 0xF6u ? 0x00007Cu : bytes::get_bits<8u>(source, sourceLength) == 0xFCu ? 0x00007Du :
          bytes::get_bits<8u>(source, sourceLength) :
      0x000000u;
    }

    template <typename type>
    constexpr static uint_fast32_t valueof(type const source, std::size_t const sourceLength, typename encoding::type const encoding) noexcept {
      return encoding::valueof(source, encoding::lengthof(source, sourceLength, encoding), encoding);
    }
  }

  /* ... */
  template <typename sourceType, typename destinationType, typename std::enable_if<std::is_pointer<sourceType>::value && false != (
    std::is_enum    <typename std::remove_all_extents<typename std::remove_pointer<sourceType>::type>::type>::value ||
    std::is_integral<typename std::remove_all_extents<typename std::remove_pointer<sourceType>::type>::type>::value ||
    #ifdef __cpp_lib_byte
      std::is_same<std::byte, typename std::remove_all_extents<typename std::remove_pointer<sourceType>::type>::type>::value ||
    #endif
    false
  ) && (
    std::is_same<destinationType, std::nullptr_t>::value ||
    std::is_same<destinationType, decltype(NULL)>::value ||
    (std::is_pointer<destinationType>::value && std::is_same<char, typename std::remove_volatile<typename std::remove_pointer<destinationType>::type>::type>::value)
  ), int>::type = 0>
  /* constexpr */ inline static std::size_t parse(sourceType const source, std::size_t const sourceLength, destinationType destination, std::size_t const destinationLength = 0u, typename encoding::type const encoding = encoding::UTF_8) noexcept {
    if (NULL != (void volatile*) destination && false == std::is_pointer<destinationType>::value) return static_cast<std::size_t>(-1); // ->> Invalid `destination` argument
    if (0x00u == static_cast<uint_least8_t>(encoding))                                            return static_cast<std::size_t>(-1); // ->> Non-supported encoding

    // lengthof(source, sourceLength, encoding);
    // valueof(source, sourceLength, ..., encoding);

    // ...
    static_cast<void>(destination);
    static_cast<void>(destinationLength);
    static_cast<void>(encoding);
    static_cast<void>(source);
    static_cast<void>(sourceLength);

    return 0u;
  }

  template <typename sourceType, typename std::enable_if<std::is_pointer<sourceType>::value && false == (
    std::is_enum    <typename std::remove_all_extents<typename std::remove_pointer<sourceType>::type>::type>::value ||
    std::is_integral<typename std::remove_all_extents<typename std::remove_pointer<sourceType>::type>::type>::value ||
    #ifdef __cpp_lib_byte
      std::is_same<std::byte, typename std::remove_all_extents<typename std::remove_pointer<sourceType>::type>::type>::value ||
    #endif
    false
  ), int>::type = 0>
  constexpr static std::size_t parse(sourceType const source, std::size_t const sourceLength, void const volatile* const destination, std::size_t const destinationLength = 0u, typename encoding::type const encoding = encoding::UTF_8) noexcept {
    return parser::parse((unsigned char const*) (void const volatile*) source, sourceLength, (char volatile*) destination, destinationLength, encoding);
  }

  template <typename sourceType, std::size_t sourceCapacity, typename destinationType, typename std::enable_if<(
    std::is_same<destinationType, std::nullptr_t>::value ||
    std::is_same<destinationType, decltype(NULL)>::value ||
    (std::is_pointer<destinationType>::value && std::is_same<char, typename std::remove_volatile<typename std::remove_pointer<destinationType>::type>::type>::value)
  ), int>::type = 0>
  constexpr static std::size_t parse(sourceType (&source)[sourceCapacity], destinationType const destination, std::size_t const destinationLength = 0u, typename encoding::type const encoding = encoding::UTF_8) noexcept {
    return parser::parse(source, sourceCapacity, destination, destinationLength, encoding);
  }

  template <typename sourceType, std::size_t sourceCapacity, typename destinationType, std::size_t destinationCapacity, typename std::enable_if<std::is_same<char, typename std::remove_volatile<destinationType>::type>::value, int>::type = 0>
  constexpr static std::size_t parse(sourceType (&source)[sourceCapacity], destinationType (&destination)[destinationCapacity], typename encoding::type const encoding = encoding::UTF_8) noexcept {
    return parser::parse(source, sourceCapacity, destination, destinationCapacity, encoding);
  }
}

using parser::parse;

/* Main */
int main(int, char*[]) /* noexcept */ {
  std::printf("%X" "\r\n", parser::bytes::get_bits<4u>(&static_cast<unsigned const&>(0xABCDu), 1u, 0u, parser::endianness::big_endian));
  std::printf("%X" "\r\n", parser::bytes::get_bits<4u>(&static_cast<unsigned const&>(0xABCDu), 1u, 0u, parser::endianness::little_endian));
  std::printf("%zu", parse("(-((1 + 5) * 2 % 3 - 2)) ^ 5 - 1", NULL));
}
