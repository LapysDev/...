• all                         [Chrome 37,          Edge 79,          FF 27,          IE ×,           Op 24,            Safari 9.1]          → This shorthand property resets all of an element's properties except `direction`, `unicode-bidi`, and CSS Custom Properties
• animation                   [Chrome 43,          Edge 12,          FF 49 -moz-,    IE 10,          Op 30,            Safari 9]            → Applies an animation between styles. It is a shorthand for `animation-delay`, `animation-direction`, `animation-duration`, `animation-fill-mode`, `animation-iteration-count`, `animation-name`, `animation-play-state`, and `animation-timing-function`
• animation-delay             [Chrome 43,          Edge 12,          FF 49 -moz-,    IE 10,          Op 30,            Safari 9]            → Specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation
• animation-direction         [Chrome 43,          Edge 12,          FF 49 -moz-,    IE 10,          Op 30,            Safari 9]            → Sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward
• animation-duration          [Chrome 43,          Edge 12,          FF 49 -moz-,    IE 10*,         Op 30,            Safari 9]            → Sets the length of time that an animation takes to complete one cycle
• animation-fill-mode         [Chrome 43,          Edge 12,          FF 49 -moz-,    IE 10,          Op 30,            Safari 9]            → Sets how a CSS animation applies styles to its target before and after its execution
• animation-iteration-count   [Chrome 43,          Edge 12,          FF 49 -moz-,    IE 10,          Op 30,            Safari 9]            → Sets the number of times an animation sequence should be played before stopping
• animation-name              [Chrome 43,          Edge 12,          FF 49 -moz-,    IE 10,          Op 30,            Safari 9]            → Specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element
• animation-play-state        [Chrome 43,          Edge 12,          FF 49 -moz-,    IE 10,          Op 30,            Safari 9]            → Sets whether an animation is running or paused
• animation-timing-function   [Chrome 43,          Edge 12,          FF 49 -moz-,    IE 10,          Op 30,            Safari 9]            → Sets how an animation progresses through the duration of each cycle
• appearance                  [Chrome 84,          Edge 84,          FF 80,          IE ×,           Op 70,            Safari 15.4]         → Control native appearance of UI controls, that are based on operating system's theme e.g.: `auto`, `button`, `checkbox`, `listbox`, `menulist`, `menulist-button`, `meter`, `none`, `progress-bar`, `push-button`, `radio`, `searchfield`, `slider-horizontal`, `square-button`, `textarea`, and `textfield`
• aspect-ratio                [Chrome 88,          Edge 88,          FF 89,          IE ×,           Op 74,            Safari 15]           → Sets a preferred aspect ratio for the box, which will be used in the calculation of auto sizes and some other layout functions
• backface-visibility         [Chrome 36,          Edge 12,          FF 49 -moz-,    IE 10,          Op 23,            Safari 15.4]         → Sets whether the back face of an element is visible when turned towards the user
• background                  [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets all background style properties at once, such as color, image, origin and size, or repeat method
• background-attachment       [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets whether a background image's position is fixed within the viewport, or scrolls with its containing block
• background-blend-mode       [Chrome 35,          Edge 79,          FF 30,          IE ×,           Op 22,            Safari 8]            → Sets how an element's background images should blend with each other and with the element's background color
• background-clip             [Chrome 1,           Edge 12,          FF 49 -moz-,    IE 9,           Op 15 -webkit-,   Safari 14]           → Sets whether an element's background extends underneath its border box, padding box, or content box
• background-color            [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the background color of an element
• background-image            [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets one or more background images on an element
• background-origin           [Chrome 1,           Edge 12,          FF 49 -moz-,    IE 9,           Op 15 -webkit-,   Safari 3]            → Sets the background's origin: from the border start, inside the border, or inside the padding
• background-position         [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the initial position for each background image. The position is relative to the position layer set by `background-origin`
• background-position-x       [Chrome 1,           Edge 12,          FF 49,          IE 5,           Op 15,            Safari 1]            → Sets the initial horizontal position for each background image. The position is relative to the position layer set by `background-origin`
• background-position-y       [Chrome 1,           Edge 12,          FF 49,          IE 6,           Op 15,            Safari 1]            → Sets the initial vertical position for each background image. The position is relative to the position layer set by `background-origin`
• background-repeat           [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets how background images are repeated
• background-size             [Chrome 3,           Edge 12,          FF 49 -moz-,    IE 9,           Op 15 -webkit-,   Safari 5]            → Sets the size of the element's background image
• block-size                  [Chrome 57,          Edge 79,          FF 41,          IE ×,           Op 44,            Safari 12.1]         → Defines the horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the `height` or the `width` property, depending on the value of `writing-mode`
• border                      [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets an element's border. It sets the values of `border-color`, `border-style`, and `border-width`
• border-block                [Chrome 87,          Edge 87,          FF 66,          IE ×,           Op 73,            Safari 14.1]         → Sets the individual logical block border property values in a single place in the style sheet
• border-block-color          [Chrome 87,          Edge 87,          FF 66,          IE ×,           Op 73,            Safari 14.1]         → Defines the color of the logical block borders of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color` and `border-top-color`, or `border-left-color` and `border-right-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-block-end            [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Sets the individual logical block-end border property values in a single place in the style sheet
• border-block-end-color      [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the color of the logical block-end border of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color`, `border-left-color`, `border-right-color`, or `border-top-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-block-end-style      [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the style of the logical block-end border of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color`, `border-left-color`, `border-right-color`, or `border-top-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-block-end-width      [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the width of the logical block-end border of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color`, `border-left-color`, `border-right-color`, or `border-top-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-block-start          [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Sets the individual logical block-start border property values in a single place in the style sheet
• border-block-start-color    [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the color of the logical block-start border of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color`, `border-left-color`, `border-right-color`, or `border-top-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-block-start-style    [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the style of the logical block-start border of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color`, `border-left-color`, `border-right-color`, or `border-top-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-block-start-width    [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the width of the logical block-start border of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color`, `border-left-color`, `border-right-color`, or `border-top-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-block-style          [Chrome 87,          Edge 87,          FF 66,          IE ×,           Op 73,            Safari 14.1]         → Defines the style of the logical block borders of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color` and `border-top-color`, or `border-left-color` and `border-right-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-block-width          [Chrome 87,          Edge 87,          FF 66,          IE ×,           Op 73,            Safari 14.1]         → Defines the width of the logical block borders of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color` and `border-top-color`, or `border-left-color` and `border-right-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-bottom               [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets an element's bottom border. It sets the values of `border-bottom-color`, `border-bottom-style`, and `border-bottom-width`
• border-bottom-color         [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the color of an element's bottom border
• border-bottom-left-radius   [Chrome 4,           Edge 12,          FF 49 -moz-,    IE 9,           Op 15 -webkit-,   Safari 5]            → Rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner
• border-bottom-right-radius  [Chrome 4,           Edge 12,          FF 49 -moz-,    IE 9,           Op 15 -webkit-,   Safari 5]            → Rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner
• border-bottom-style         [Chrome 1,           Edge 12,          FF 1,           IE 5.5,         Op 9.2,           Safari 1]            → Sets the line style of an element's bottom `border`
• border-bottom-width         [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the width of the bottom border of an element
• border-collapse             [Chrome 1,           Edge 12,          FF 1,           IE 5,           Op 4,             Safari 1.2]          → Sets whether cells inside a `<table>` have shared or separate borders
• border-color                [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the color of an element's border
• border-end-end-radius       [Chrome 89,          Edge 89,          FF 66,          IE ×,           Op 75,            Safari 15]           → Defines a logical border radius on an element, which maps to a physical border radius that depends on the element's `direction`, `text-orientation`, and `writing-mode`
• border-end-start-radius     [Chrome 89,          Edge 89,          FF 66,          IE ×,           Op 75,            Safari 15]           → Defines a logical border radius on an element, which maps to a physical border radius that depends on the element's `direction`, `text-orientation`, and `writing-mode`
• border-image                [Chrome 16,          Edge 12,          FF 15,          IE 11,          Op 11,            Safari 6]            → Draws an image around a given element. It replaces the element's regular border
• border-image-outset         [Chrome 15,          Edge 12,          FF 15,          IE 11,          Op 15,            Safari 6]            → Sets the distance by which an element's border image is set out from its border box. The parts of the border image that are rendered outside the element's border box with `border-image-outset` do not trigger overflow scrollbars and don't capture mouse events
• border-image-repeat         [Chrome 15,          Edge 12,          FF 15,          IE 11,          Op 15,            Safari 6]            → Defines how the edge regions of a source image are adjusted to fit the dimensions of an element's border image
• border-image-slice          [Chrome 15,          Edge 12,          FF 15,          IE 11,          Op 15,            Safari 6]            → Divides the image specified by `border-image-source` into regions. These regions form the components of an element's border image
• border-image-source         [Chrome 15,          Edge 12,          FF 15,          IE 11,          Op 16,            Safari 6]            → Sets the source image used to create an element's border image
• border-image-width          [Chrome 15,          Edge 12,          FF 13,          IE 11,          Op 15,            Safari 6]            → Sets the width of an element's border image
• border-inline               [Chrome 87,          Edge 87,          FF 66,          IE ×,           Op 73,            Safari 14.1]         → Setting the individual logical inline border property values in a single place in the style sheet
• border-inline-color         [Chrome 87,          Edge 87,          FF 66,          IE ×,           Op 73,            Safari 14.1]         → Defines the color of the logical inline borders of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color` and `border-top-color`, or `border-left-color` and `border-right-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-inline-end           [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Sets the individual logical inline-end border property values in a single place in the style sheet
• border-inline-end-color     [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color`, `border-left-color`, `border-right-color`, or `border-top-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-inline-end-style     [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the style of the logical inline-end border of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color`, `border-left-color`, `border-right-color`, or `border-top-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-inline-end-width     [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the width of the logical inline-end border of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color`, `border-left-color`, `border-right-color`, or `border-top-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-inline-start         [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Sets the individual logical inline-start border property values in a single place in the style sheet
• border-inline-start-color   [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the color of the logical inline-start border of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color`, `border-left-color`, `border-right-color`, or `border-top-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-inline-start-style   [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the style of the logical inline-start border of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color`, `border-left-color`, `border-right-color`, or `border-top-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-inline-start-width   [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the width of the logical inline-start border of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color`, `border-left-color`, `border-right-color`, or `border-top-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-inline-style         [Chrome 87,          Edge 87,          FF 66,          IE ×,           Op 73,            Safari 14.1]         → Defines the style of the logical inline borders of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color` and `border-top-color`, or `border-left-color` and `border-right-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-inline-width         [Chrome 87,          Edge 87,          FF 66,          IE ×,           Op 73,            Safari 14.1]         → Defines the width of the logical inline borders of an element, which maps to a physical border color depending on the element's directionality, text orientation, and writing mode. It corresponds to the `border-bottom-color` and `border-top-color`, or `border-left-color` and `border-right-color` property depending on the values defined for `direction`, `text-orientation`, and `writing-mode`
• border-left                 [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets an element's left border. It sets the values of `border-left-color`, `border-left-style`, and `border-left-width`
• border-left-color           [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the color of an element's left border
• border-left-style           [Chrome 1,           Edge 12,          FF 1,           IE 5.5,         Op 9.2,           Safari 1]            → Sets the line style of an element's left `border`
• border-left-width           [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the width of the left border of an element
• border-radius               [Chrome 4,           Edge 12,          FF 4,           IE 9,           Op 10.5,          Safari 5]            → Rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners
• border-right                [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets an element's right border. It sets the values of `border-right-color`, `border-right-style`, and `border-right-width`
• border-right-color          [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the color of an element's right border
• border-right-style          [Chrome 1,           Edge 12,          FF 1,           IE 5.5,         Op 9.2,           Safari 1]            → Sets the line style of an element's right `border`
• border-right-width          [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the width of the right border of an element
• border-spacing              [Chrome 1,           Edge 12,          FF 1,           IE 8,           Op 4,             Safari 1]            → Sets the distance between the borders of adjacent cells in a `<table>`. This property applies only when `border-collapse` is `separate`
• border-start-end-radius     [Chrome 89,          Edge 89,          FF 66,          IE ×,           Op 75,            Safari 15]           → Defines a logical border radius on an element, which maps to a physical border radius that depends on the element's `direction`, `text-orientation`, and `writing-mode`
• border-start-start-radius   [Chrome 89,          Edge 89,          FF 66,          IE ×,           Op 75,            Safari 15]           → Defines a logical border radius on an element, which maps to a physical border radius that depends on the element's `direction`, `text-orientation`, and `writing-mode`
• border-style                [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the line style for all four sides of an element's border
• border-top                  [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets an element's top border. It sets the values of `border-top-color`, `border-top-style`, and `border-top-width`
• border-top-color            [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the color of an element's top border
• border-top-left-radius      [Chrome 4,           Edge 12,          FF 49 -moz-,    IE 9,           Op 15 -webkit-,   Safari 5]            → Rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner
• border-top-right-radius     [Chrome 4,           Edge 12,          FF 49 -moz-,    IE 9,           Op 15 -webkit-,   Safari 5]            → Rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner
• border-top-style            [Chrome 1,           Edge 12,          FF 1,           IE 5.5,         Op 9.2,           Safari 1]            → Sets the line style of an element's top `border`
• border-top-width            [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the width of the top border of an element
• border-width                [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the width of an element's border
• bottom                      [Chrome 1,           Edge 12,          FF 1,           IE 5,           Op 6,             Safari 1]            → Participates in setting the vertical position of a positioned element. It has no effect on non-positioned elements
• box-decoration-break        [Chrome 22 -webkit-, Edge 79 -webkit-, FF 32,          IE ×,           Op 15,            Safari 7 -webkit-]   → Specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages
• box-shadow                  [Chrome 10 -webkit-, Edge 12,          FF 49 -moz-,    IE 9*,          Op 10.5*,         Safari 5.1 -webkit-] → Adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color (must specify `border-collapse: separate` since Internet Explorer v9; privy to scrollbar display since Opera v10.5)
• box-sizing                  [Chrome 10 -webkit-, Edge 12,          FF 49 -moz-,    IE 8,           Op 7,             Safari 5.1]          → Sets how the total width and height of an element is calculated
• break-after                 [Chrome 50,          Edge 12,          FF 65,          IE 10,          Op 37,            Safari ×]            → Sets how page, column, or region breaks should behave after a generated box. If there is no generated box, the property is ignored
• break-before                [Chrome 50,          Edge 12,          FF 65,          IE 10,          Op 37,            Safari ×]            → Sets how page, column, or region breaks should behave before a generated box. If there is no generated box, the property is ignored
• break-inside                [Chrome 50,          Edge 12,          FF 65,          IE 10,          Op 37,            Safari 10]           → Sets how page, column, or region breaks should behave inside a generated box. If there is no generated box, the property is ignored
• caption-side                [Chrome 1,           Edge 12,          FF 1,           IE 8,           Op 4,             Safari 1]            → Puts the content of a table's `<caption>` on the specified side. The values are relative to the `writing-mode` of the table
• caret-color                 [Chrome 57,          Edge 79,          FF 53,          IE ×,           Op 44,            Safari 11.1]         → Sets the color of the insertion caret, the visible marker where the next character typed will be inserted
• clear                       [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets whether an element must be moved below (cleared) floating elements that precede it. The `clear` property applies to floating and non-floating elements
• clip                        [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 7,             Safari 1]            → Defines a visible portion of an element. The `clip` property applies only to absolutely positioned elements i.e.: elements with `position: absolute` or `position: fixed`
• clip-path                   [Chrome 55,          Edge 12*,         FF 3.5,         IE 10*,         Op 42,            Safari 9.1]          → Creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden
• color                       [Chrome 1,           Edge 12,          FF 1,           IE 3,           Op 3.5,           Safari 1]            → Sets the foreground color value of an element's text and text decorations, and sets the color value
• color-scheme                [Chrome 81,          Edge 81,          FF 96,          IE ×,           Op 68,            Safari 13]           → Allows an element to indicate which color schemes it can comfortably be rendered in
• column-count                [Chrome 50,          Edge 12,          FF 52,          IE 10,          Op 15 -webkit-,   Safari 9]            → Breaks an element's content into the specified number of columns
• column-fill                 [Chrome 50,          Edge 12,          FF 52,          IE 10,          Op 37,            Safari 9]            → Controls how an element's contents are balanced when broken into columns
• column-gap                  [Chrome 84,          Edge 84,          FF 63,          IE ×,           Op 70,            Safari 14.1]         → Sets the size of the gap (gutter) between an element's columns
• column-rule                 [Chrome 50,          Edge 12,          FF 52,          IE 10,          Op 15 -webkit-,   Safari 9]            → Sets the width, style, and color of the line drawn between columns in a multi-column layout
• column-rule-color           [Chrome 50,          Edge 12,          FF 52,          IE 10,          Op 15 -webkit-,   Safari 9]            → Sets the color of the line drawn between columns in a multi-column layout
• column-rule-style           [Chrome 50,          Edge 12,          FF 52,          IE 10,          Op 15 -webkit-,   Safari 9]            → Sets the style of the line drawn between columns in a multi-column layout
• column-rule-width           [Chrome 50,          Edge 12,          FF 52,          IE 10,          Op 15 -webkit-,   Safari 9]            → Sets the width of the line drawn between columns in a multi-column layout
• column-span                 [Chrome 50,          Edge 12,          FF 71,          IE 10,          Op 15 -webkit-,   Safari 9]            → Makes it possible for an element to span across all columns when its value is set to `all`
• column-width                [Chrome 50,          Edge 12,          FF 50,          IE 10,          Op 15 -webkit-,   Safari 9]            → Sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the `column-width` value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width
• columns                     [Chrome 50,          Edge 12,          FF 52,          IE 10,          Op 15 -webkit-,   Safari 9]            → Sets the number of columns to use when drawing an element's contents, as well as those columns' widths
• contain                     [Chrome 52,          Edge 79,          FF 69*,         IE ×,           Op 40,            Safari 15.4]         → Allows an author to indicate that an element and its contents are, as much as possible, independent of the rest of the document tree
• content                     [Chrome 1,           Edge 12,          FF 1,           IE 8,           Op 4,             Safari 1]            → Replaces an element with a generated value. Objects inserted using the content property are anonymous replaced elements
• content-visibility          [Chrome 85,          Edge 85,          FF ×,           IE ×,           Op 71,            Safari 15.4]         → Controls whether or not an element renders its contents at all, along with forcing a strong set of containments, allowing user agents to potentially omit large swathes of layout and rendering work until it becomes needed
• counter-increment           [Chrome 2,           Edge 12,          FF 1,           IE 8,           Op 9.2,           Safari 3]            → Increases or decreases the value of a CSS counter by a given value
• counter-reset               [Chrome 2,           Edge 12,          FF 1,           IE 8,           Op 9.2,           Safari 3]            → Resets a CSS counter to a given value. This property will create a new counter or reversed counter with the given name on the specified element
• counter-set                 [Chrome 85,          Edge 85,          FF 68,          IE ×,           Op 71,            Safari ×]            → Sets a CSS counter to a given value
• cursor                      [Chrome 1,           Edge 12,          FF 1*,          IE 4*,          Op 7,             Safari 1.2]          → Sets the mouse cursor, if any, to show when the mouse pointer is over an element e.g.: `alias`, `all-scroll`, `cell`, `col-resize`, `context-menu`, `copy`, `crosshair`, `default`, `e-resize`, `ew-resize`, `grab`, `grabbing`, `help`, `move`, `n-resize`, `ne-resize`, `nesw-resize`, `no-drop`, `none`, `not-allowed`, `ns-resize`, `nw-resize`, `nwse-resize`, `pointer`, `progress`, `row-resize`, `s-resize`, `se-resize`, `sw-resize`, `text`, `url(…)`, `vertical-text`, `w-resize`, `wait`, `zoom-in`, and `zoom-out`
• direction                   [Chrome 2,           Edge 12,          FF 1,           IE 5.5,         Op 9.2,           Safari 1]            → Sets the direction of text, table columns, and horizontal overflow
• display                     [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 7,             Safari 1]            → Sets whether an element is treated as a block or inline element and the layout used for its children, such as flex, flow layout, or grid
• empty-cells                 [Chrome 1,           Edge 12,          FF 1,           IE 8,           Op 4,             Safari 1.2]          → Sets whether borders and backgrounds appear around `<table>` cells that have no visible content
• filter                      [Chrome 53,          Edge 12,          FF 49 -webkit-, IE ×,           Op 40,            Safari 9.1]          → Applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders
• flex                        [Chrome 29,          Edge 12,          FF 49 -webkit-, IE 11* -ms-,    Op 12.1,          Safari 9]            → Sets how a flex item will grow or shrink to fit the space available in its flex container
• flex-basis                  [Chrome 29,          Edge 12,          FF 49 -webkit-, IE 11*,         Op 12.1 -webkit-, Safari 9]            → Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with `box-sizing`
• flex-direction              [Chrome 29,          Edge 12,          FF 81,          IE 11,          Op 15 -webkit-,   Safari 9]            → Sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed)
• flex-flow                   [Chrome 29,          Edge 12,          FF 49 -webkit-, IE 11,          Op 15 -webkit-,   Safari 9 -webkit-]   → Specifies the direction of a flex container, as well as its wrapping behavior
• flex-grow                   [Chrome 29,          Edge 12,          FF 20,          IE 11,          Op 15 -webkit-,   Safari 9]            → Sets the flex grow factor of a flex item's main size
• flex-shrink                 [Chrome 29,          Edge 12,          FF 49 -webkit-, IE 10,          Op 15 -webkit-,   Safari 9]            → Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to `flex-shrink`
• flex-wrap                   [Chrome 29,          Edge 12,          FF 28,          IE 11*,         Op 17,            Safari 9]            → Sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked
• float                       [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 7,             Safari 1]            → Places an element on the left or right side of its container, allowing text and inline elements to wrap around it. The element is removed from the normal flow of the page, though still remaining a part of the flow (in contrast to absolute positioning)
• font                        [Chrome 1,           Edge 12,          FF 1,           IE 3,           Op 3.5,           Safari 1]            → Sets all the different properties of an element's font. Alternatively, it sets an element's font to a system font
• font-family                 [Chrome 1,           Edge 12,          FF 1*,          IE 3,           Op 3.5,           Safari 1]            → Specifies a prioritized list of one or more font family names and/ or generic family names for the selected element
• font-feature-settings       [Chrome 48,          Edge 15,          FF 34 -moz-,    IE 10,          Op 35,            Safari 9.1]          → Controls advanced typographic features in OpenType fonts
• font-kerning                [Chrome 33,          Edge 79,          FF 32,          IE ×,           Op 20,            Safari 9]            → Sets the use of the kerning information stored in a font
• font-language-override      [Chrome ×,           Edge ×,           FF 34,          IE ×,           Op ×,             Safari ×]            → Controls the use of language-specific glyphs in a typeface
• font-optical-sizing         [Chrome 79,          Edge 17,          FF 62,          IE ×,           Op 66,            Safari 11]           → Sets whether text rendering is optimized for viewing at different sizes
• font-size                   [Chrome 1,           Edge 12,          FF 1,           IE 5.5,         Op 7,             Safari 1]            → Sets the size of the font
• font-size-adjust            [Chrome ×,           Edge ×,           FF 40,          IE ×,           Op ×,             Safari ×]            → Sets the size of lower-case letters relative to the current font size (which defines the size of upper-case letters)
• font-stretch                [Chrome 60,          Edge 12,          FF 9,           IE 9,           Op 47,            Safari 11]           → Selects a normal, condensed, or expanded face from a font
• font-style                  [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 7,             Safari 1]            → Sets whether a font should be styled with a normal, italic, or oblique face from its `font-family`
• font-synthesis              [Chrome 97,          Edge 97,          FF 34,          IE ×,           Op 83,            Safari 9]            → Controls which missing typefaces, bold, italic, or small-caps, may be synthesized by the browser
• font-variant                [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Allows you to set all the font variants for a font
• font-variant-alternates     [Chrome ×,           Edge ×,           FF 34,          IE ×,           Op ×,             Safari 9.1]          → Controls the usage of alternate glyphs
• font-variant-caps           [Chrome 52,          Edge 79,          FF 34,          IE ×,           Op 39,            Safari 9.1]          → Controls the use of alternate glyphs for capital letters
• font-variant-east-asian     [Chrome 63,          Edge 79,          FF 34,          IE ×,           Op 50,            Safari 9.1]          → Controls the use of alternate glyphs for East Asian scripts, like Japanese and Chinese
• font-variant-ligatures      [Chrome 34,          Edge 79,          FF 34,          IE ×,           Op 21,            Safari 9.1]          → Controls which ligatures and contextual forms are used in textual content of the elements it applies to
• font-variant-numeric        [Chrome 52,          Edge 79,          FF 34,          IE ×,           Op 39,            Safari 9.1]          → Controls the usage of alternate glyphs for numbers, fractions, and ordinal markers
• font-variant-position       [Chrome ×,           Edge ×,           FF 34,          IE ×,           Op ×,             Safari 9.1]          → Controls the use of alternate, smaller glyphs that are positioned as superscript or subscript
• font-variation-settings     [Chrome 62,          Edge 17,          FF 62,          IE ×,           Op 49,            Safari 11*]          → Provides low-level control over variable font characteristics, by specifying the four letter axis names of the characteristics you want to vary, along with their values
• font-weight                 [Chrome 2,           Edge 12,          FF 1,           IE 3,           Op 3.5,           Safari 1]            → Sets the weight (or boldness) of the font. The weights available depend on the `font-family` that is currently set
• forced-color-adjust         [Chrome 89,          Edge 79,          FF ×,           IE 10*,         Op ×,             Safari ×]            → Allows authors to opt certain elements out of forced colors mode. This then restores the control of those values to CSS (`-ms-high-contrast-adjust` since Internet Explorer v10)
• grid                        [Chrome 57,          Edge 16,          FF 52,          IE ×,           Op 44,            Safari 10.1]         → Sets all of the explicit and implicit grid properties in a single declaration
• grid-area                   [Chrome 57,          Edge 16,          FF 52,          IE ×,           Op 44,            Safari 10.1]         → Specifies a grid item's size and location within a grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area
• grid-auto-columns           [Chrome 57,          Edge 16,          FF 70,          IE 10*,         Op 44,            Safari 10.1]         → Specifies the size of an implicitly-created grid column track or pattern of tracks (`-ms-grid-columns` since Internet Explorer v10)
• grid-auto-flow              [Chrome 57,          Edge 16,          FF 52,          IE ×,           Op 44,            Safari 10.1]         → Controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid
• grid-auto-rows              [Chrome 57,          Edge 16,          FF 70,          IE 10*,         Op 44,            Safari 10.1]         → Specifies the size of an implicitly-created grid row track or pattern of tracks (`-ms-grid-rows` since Internet Explorer v10)
• grid-column                 [Chrome 57,          Edge 16,          FF 52,          IE ×,           Op 44,            Safari 10.1]         → Specifies a grid item's size and location within a grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area
• grid-column-end             [Chrome 57,          Edge 16,          FF 52,          IE ×,           Op 44,            Safari 10.1]         → Specifies a grid item's end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area
• grid-column-start           [Chrome 57,          Edge 16,          FF 52,          IE ×,           Op 44,            Safari 10.1]         → Specifies a grid item's start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area
• grid-row                    [Chrome 57,          Edge 16,          FF 52,          IE ×,           Op 44,            Safari 10.1]         → Specifies a grid item's size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area
• grid-row-end                [Chrome 57,          Edge 16,          FF 52,          IE ×,           Op 44,            Safari 10.1]         → Specifies a grid item's end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area
• grid-row-start              [Chrome 57,          Edge 16,          FF 52,          IE ×,           Op 44,            Safari 10.1]         → Specifies a grid item's start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area
• grid-template               [Chrome 57,          Edge 16,          FF 52,          IE ×,           Op 44,            Safari 10.1]         → Defining grid columns, rows, and areas
• grid-template-areas         [Chrome 57,          Edge 16,          FF 52,          IE ×,           Op 44,            Safari 10.1]         → Specifies named grid areas, establishing the cells in the grid and assigning them names
• grid-template-columns       [Chrome 57,          Edge 16,          FF 52,          IE 10*,         Op 44,            Safari 10.1]         → Defines the line names and track sizing functions of the grid columns (`-ms-grid-columns` since Internet Explorer v10)
• grid-template-rows          [Chrome 57,          Edge 16,          FF 52,          IE 10*,         Op 44,            Safari 10.1]         → Defines the line names and track sizing functions of the grid rows (`-ms-grid-rows` since Internet Explorer v10)
• hanging-punctuation         [Chrome ×,           Edge ×,           FF ×,           IE ×,           Op ×,             Safari 10]           → Specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box
• height                      [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 7,             Safari 1]            → Specifies the height of an element. By default, the property defines the height of the content area. If `box-sizing` is set to `border-box`, however, it instead determines the height of the border area
• hyphenate-character         [Chrome 6 -webkit-,  Edge 79 -webkit-, FF 98,          IE ×,           Op 15 -webkit-,   Safari 5.1 -webkit-] → Sets the character (or string) used at the end of a line before a hyphenation break
• hyphens                     [Chrome 55*,         Edge 79*,         FF 43,          IE 10* -ms-,    Op 44*,           Safari 5.1 -webkit-] → Specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate
• image-orientation           [Chrome 81,          Edge 81,          FF 26,          IE ×,           Op 67,            Safari 13.1]         → Specifies a layout-independent correction to the orientation of an image
• image-rendering             [Chrome 13,          Edge 79,          FF 3.6,         IE ×,           Op 15,            Safari 6]            → Sets an image scaling algorithm. The property applies to an element itself, to any images set in its other properties, and to its descendants
• initial-letter              [Chrome ×,           Edge ×,           FF ×,           IE ×,           Op ×,             Safari 9 -webkit-]   → Sets styling for dropped, raised, and sunken initial letters
• inline-size                 [Chrome 57,          Edge 79,          FF 41,          IE ×,           Op 44,            Safari 12.1]         → Defines the horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the `height` or the `width` property, depending on the value of `writing-mode`
• inset                       [Chrome 87,          Edge 87,          FF 66,          IE ×,           Op 73,            Safari 14.1]         → Shorthand that corresponds to the `bottom`, `left`, `right`, and/ or `top` properties
• inset-block                 [Chrome 87,          Edge 87,          FF 63,          IE ×,           Op 73,            Safari 14.1]         → Defines the logical block start and end offsets of an element, which maps to physical offsets depending on the element's directionality, text orientation, and writing mode
• inset-block-end             [Chrome 87,          Edge 87,          FF 63,          IE ×,           Op 73,            Safari 14.1]         → Defines the logical block end offset of an element, which maps to a physical inset depending on the element's directionality, text orientation, and writing mode
• inset-block-start           [Chrome 87,          Edge 87,          FF 63,          IE ×,           Op 73,            Safari 14.1]         → Defines the logical block start offset of an element, which maps to a physical inset depending on the element's directionality, text orientation, and writing mode
• inset-inline                [Chrome 87,          Edge 87,          FF 63,          IE ×,           Op 73,            Safari 14.1]         → Defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's directionality, text orientation, and writing mode
• inset-inline-end            [Chrome 87,          Edge 87,          FF 63,          IE ×,           Op 73,            Safari 14.1]         → Defines the logical inline end inset of an element, which maps to a physical offset depending on the element's directionality, text orientation, and writing mode
• inset-inline-start          [Chrome 87,          Edge 87,          FF 63,          IE ×,           Op 73,            Safari 14.1]         → Defines the logical inline start inset of an element, which maps to a physical offset depending on the element's directionality, text orientation, and writing mode
• isolation                   [Chrome 41,          Edge 79,          FF 36,          IE ×,           Op 30,            Safari 8]            → Determines whether an element must create a new stacking context
• justify-content             [Chrome 52,          Edge 12,          FF 49 -webkit-, IE 11,          Op 12.1,          Safari 9]            → Defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container
• justify-items               [Chrome 57,          Edge 16,          FF 45,          IE 11*,         Op 44,            Safari 10.1]         → Defines the default `justify-self` for all items of the box, giving them all a default way of justifying each box along the appropriate axis
• justify-self                [Chrome 57,          Edge 16,          FF 45,          IE 10 -ms-,     Op 44,            Safari 10.1]         → Sets the way a box is justified inside its alignment container along the appropriate axis
• left                        [Chrome 1,           Edge 12,          FF 1,           IE 5.5,         Op 5,             Safari 1]            → Participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements
• letter-spacing              [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the horizontal spacing behavior between text characters
• line-break                  [Chrome 58,          Edge 14,          FF 69,          IE 8 -ms-,      Op 45,            Safari 11]           → Sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols
• line-height                 [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 7,             Safari 1]            → Sets the height of a line box. It's commonly used to set the distance between lines of text
• list-style                  [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 7,             Safari 1]            → Allows you to set all the list style properties at once
• list-style-image            [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 7,             Safari 1]            → Sets an image to be used as the list item marker
• list-style-position         [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the position of the `::marker` relative to a list item
• list-style-type             [Chrome ×,           Edge ×,           FF ×,           IE ×,           Op ×,             Safari ×]            → Sets the marker (such as a disc, character, or custom counter style) of a list item element e.g.: `arabic-indic`, `armenian`, `bengali`, `cambodian`, `circle`, `cjk-decimal`, `cjk-earthly-branch`, `cjk-heavenly-stem`, `cjk-ideographic`, `decimal`, `decimal-leading-zero`, `devanagari`, `disc`, `disclosure-closed`, `disclosure-open`, `ethiopic-numeric`, `georgian`, `gujarati`, `gurmukhi`, `hebrew`, `hiragana`, `hiragana-iroha`, `japanese-formal`, `japanese-informal`, `kannada`, `katakana`, `katakana-iroha`, `khmer`, `korean-hangul-formal`, `korean-hanja-formal`, `korean-hanja-informal`, `lao`, `lower-alpha, lower-latin`, `lower-armenian`, `lower-greek`, `lower-roman`, `malayalam`, `mongolian`, `myanmar`, `none`, `oriya`, `persian`, `simp-chinese-formal`, `simp-chinese-informal`, `square`, `tamil`, `telugu`, `thai`, `tibetan`, `trad-chinese-formal`, `trad-chinese-informal`, `upper-alpha, upper-latin`, `upper-armenian`, and `upper-roman`
• margin                      [Chrome 1,           Edge 12,          FF 1,           IE 3,           Op 3.5,           Safari 1]            → Sets the margin area on all four sides of an element
• margin-block                [Chrome 87,          Edge 87,          FF 66,          IE ×,           Op 73,            Safari 14.1]         → Defines the logical block start and end margins of an element, which maps to physical margins depending on the element's directionality, text orientation, and writing mode
• margin-block-end            [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the logical block end margin of an element, which maps to a physical margin depending on the element's directionality, text orientation, and writing mode
• margin-block-start          [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the logical block start margin of an element, which maps to a physical margin depending on the element's directionality, text orientation, and writing mode
• margin-bottom               [Chrome 1,           Edge 12,          FF 1,           IE 3,           Op 3.5,           Safari 1]            → Sets the margin area on the bottom of an element. A positive value places it farther from its neighbors, while a negative value places it closer
• margin-inline               [Chrome 87,          Edge 87,          FF 66,          IE ×,           Op 73,            Safari 14.1]         → Defines the logical inline start and end margins of an element, which maps to physical margins depending on the element's directionality, text orientation, and writing mode
• margin-inline-end           [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the logical inline end margin of an element, which maps to a physical margin depending on the element's directionality, text orientation, and writing mode
• margin-inline-start         [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the logical inline start margin of an element, which maps to a physical margin depending on the element's directionality, text orientation, and writing mode
• margin-left                 [Chrome 1,           Edge 12,          FF 1,           IE 3,           Op 3.5,           Safari 1]            → Sets the margin area on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer
• margin-right                [Chrome 1,           Edge 12,          FF 1,           IE 3,           Op 3.5,           Safari 1]            → Sets the margin area on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer
• margin-top                  [Chrome 1,           Edge 12,          FF 1,           IE 3,           Op 3.5,           Safari 1]            → Sets the margin area on the top of an element. A positive value places it farther from its neighbors, while a negative value places it closer
• mask                        [Chrome 1*,          Edge 79*,         FF 2*,          IE ×,           Op 15*,           Safari 3.1*]         → Hides an element (partially or fully) by masking or clipping the image at specific points
• mask-border                 [Chrome 1*,          Edge 79*,         FF ×,           IE ×,           Op 15*,           Safari 3.1*]         → Lets you create a mask along the edge of an element's border (`-webkit-mask-box-image` since Apple Safari v3.1, Google Chrome v1, Microsoft Edge v79, and Opera v15)
• mask-border-outset          [Chrome 1*,          Edge 79*,         FF ×,           IE ×,           Op 15*,           Safari 3.1*]         → Specifies the distance by which an element's mask border is set out from its border box (`-webkit-mask-box-image-outset` since Apple Safari v3.1, Google Chrome v1, Microsoft Edge v79, and Opera v15)
• mask-border-repeat          [Chrome 1*,          Edge 79*,         FF ×,           IE ×,           Op 15*,           Safari 3.1*]         → Sets how the edge regions of a source image are adjusted to fit the dimensions of an element's mask border (`-webkit-mask-box-image-repeat` since Apple Safari v3.1, Google Chrome v1, Microsoft Edge v79, and Opera v15)
• mask-border-slice           [Chrome 1*,          Edge 79*,         FF ×,           IE ×,           Op 15*,           Safari 3.1*]         → Divides the image set by `mask-border-source` into regions. These regions are used to form the components of an element's mask border (`-webkit-mask-box-image-slice` since Apple Safari v3.1, Google Chrome v1, Microsoft Edge v79, and Opera v15)
• mask-border-source          [Chrome 1*,          Edge 79*,         FF ×,           IE ×,           Op 15*,           Safari 3.1*]         → Sets the source image used to create an element's mask border (`-webkit-mask-box-image-source` since Apple Safari v3.1, Google Chrome v1, Microsoft Edge v79, and Opera v15)
• mask-border-width           [Chrome 1*,          Edge 79*,         FF ×,           IE ×,           Op 15*,           Safari 3.1*]         → Sets the width of an element's mask border (`-webkit-mask-box-image-width` since Apple Safari v3.1, Google Chrome v1, Microsoft Edge v79, and Opera v15)
• mask-clip                   [Chrome 1 -webkit-,  Edge 79 -webkit-, FF 53,          IE ×,           Op 15 -webkit-,   Safari 15.4]         → Determines the area which is affected by a mask. The painted content of an element must be restricted to this area
• mask-composite              [Chrome ×,           Edge ×,           FF 53,          IE ×,           Op ×,             Safari 15.4*]        → Represents a compositing operation used on the current mask layer with the mask layers below it
• mask-image                  [Chrome 1 -webkit-,  Edge 79 -webkit-, FF 53,          IE ×,           Op 15 -webkit-,   Safari 15.4]         → Sets the image that is used as mask layer for an element. By default this means the alpha channel of the mask image will be multiplied with the alpha channel of the element
• mask-mode                   [Chrome ×,           Edge ×,           FF 53,          IE ×,           Op ×,             Safari 15.4]         → Sets whether the mask reference defined by `mask-image` is treated as an alpha mask or luminance
• mask-origin                 [Chrome 1 -webkit-,  Edge 79 -webkit-, FF 53,          IE ×,           Op 15 -webkit-,   Safari 15.4]         → Sets the origin of a mask
• mask-position               [Chrome 1 -webkit-,  Edge 79 -webkit-, FF 53,          IE ×,           Op 15 -webkit-,   Safari 15.4]         → Sets the initial position, relative to the mask position layer set by `mask-origin`, for each defined mask image
• mask-repeat                 [Chrome 1 -webkit-,  Edge 79 -webkit-, FF 53,          IE ×,           Op 15 -webkit-,   Safari 15.4]         → Sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all
• mask-size                   [Chrome 4 -webkit-,  Edge 79 -webkit-, FF 53,          IE ×,           Op 15 -webkit-,   Safari 15.4]         → Specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio
• mask-type                   [Chrome 24,          Edge 79,          FF 35,          IE ×,           Op 15,            Safari 7]            → Sets whether an SVG `<mask>` element is used as a luminance or an alpha mask. It applies to the `<mask>` element itself
• math-style                  [Chrome ×,           Edge ×,           FF ×,           IE ×,           Op ×,             Safari 14.1]         → Indicates whether MathML equations should render with normal or compact height
• max-block-size              [Chrome 57,          Edge 79,          FF 41,          IE ×,           Op 44,            Safari 12.1]         → Property specifies the maximum size of an element in the direction opposite that of the writing direction as specified by `writing-mode`
• max-height                  [Chrome 18,          Edge 12,          FF 1,           IE 7,           Op 7,             Safari 1.3]          → Sets the maximum height of an element
• max-inline-size             [Chrome 57,          Edge 79,          FF 41,          IE ×,           Op 44,            Safari 12.1]         → Defines the horizontal or vertical maximum size of an element's block, depending on its writing mode
• max-width                   [Chrome 1,           Edge 12,          FF 1,           IE 7,           Op 4,             Safari 1]            → Sets the maximum width of an element
• min-block-size              [Chrome 57,          Edge 79,          FF 41,          IE ×,           Op 44,            Safari 12.1]         → Defines the minimum horizontal or vertical size of an element's block, depending on its writing mode
• min-height                  [Chrome 1,           Edge 12,          FF 3,           IE 7,           Op 4,             Safari 1.3]          → Sets the minimum height of an element
• min-inline-size             [Chrome 57,          Edge 79,          FF 41,          IE ×,           Op 44,            Safari 12.1]         → Defines the horizontal or vertical minimal size of an element's block, depending on its writing mode
• min-width                   [Chrome 1,           Edge 12,          FF 1,           IE 7,           Op 4,             Safari 1]            → Sets the minimum width of an element
• mix-blend-mode              [Chrome 41,          Edge 79,          FF 32,          IE ×,           Op 28,            Safari 8]            → Sets how an element's content should blend with the content of the element's parent and the element's background
• object-fit                  [Chrome 32,          Edge 79,          FF 36,          IE ×,           Op 19,            Safari 10]           → Sets how the content of a replaced element, such as an `<img>` or `<video>`, should be resized to fit its container
• object-position             [Chrome 32,          Edge 79,          FF 36,          IE ×,           Op 19,            Safari 10]           → Specifies the alignment of the selected replaced element's contents within the element's box. Areas of the box which aren't covered by the replaced element's object will show the element's background
• offset                      [Chrome 55,          Edge 79,          FF 72,          IE ×,           Op 42,            Safari ×]            → Sets all the properties required for animating an element along a defined path
• offset-anchor               [Chrome ×,           Edge ×,           FF 72,          IE ×,           Op ×,             Safari ×]            → Specifies the point inside the box of an element traveling along an `offset-path` that is actually moving along the path
• offset-distance             [Chrome 55,          Edge 79,          FF 72,          IE ×,           Op 42,            Safari ×]            → Specifies a position along an `offset-path` for an element to be placed
• offset-path                 [Chrome 55,          Edge 79,          FF 72,          IE ×,           Op 45,            Safari ×]            → Specifies a motion path for an element to follow and defines the element's positioning within the parent container or SVG coordinate system
• offset-rotate               [Chrome 56,          Edge 79,          FF 72,          IE ×,           Op 43,            Safari ×]            → Defines the orientation/direction of the element as it is positioned along the `offset-path`
• opacity                     [Chrome 1,           Edge 12,          FF 1,           IE 9,           Op 9,             Safari 2]            → Sets the opacity of an element
• order                       [Chrome 29,          Edge 12,          FF 49 -webkit-, IE 11,          Op 12.1,          Safari 9]            → Sets the order to lay out an item in a flex or grid container
• orphans                     [Chrome 25,          Edge 12,          FF ×,           IE 8,           Op 9.2,           Safari 1.3]          → Sets the minimum number of lines in a block container that must be shown at the bottom of a column, page, or region
• outline                     [Chrome 1*,          Edge 12*,         FF 1.5*,        IE 8,           Op 7*,            Safari 1.2*]         → Sets most of the outline properties in a single declaration
• outline-color               [Chrome 1,           Edge 12,          FF 1.5,         IE 8,           Op 7,             Safari 1.2]          → Sets the color of an element's outline
• outline-offset              [Chrome 1,           Edge 15,          FF 1.5*,        IE ×,           Op 9.5,           Safari 1.2]          → Sets the amount of space between an outline and the border or edge of an element
• outline-style               [Chrome 1,           Edge 12,          FF 1.5*,        IE 8,           Op 7,             Safari 1.2]          → Sets the style of an element's outline
• outline-width               [Chrome 1,           Edge 12,          FF 1.5*,        IE 8,           Op 7,             Safari 1.2]          → Sets the thickness of an element's outline
• overflow                    [Chrome 1,           Edge 12,          FF 1,           IE 4*,          Op 7,             Safari 1]            → Sets the desired behavior for an element's overflow — i.e. when an element's content is too big to fit in its block formatting context — in both directions
• overflow-anchor             [Chrome 56,          Edge 79,          FF 66,          IE ×,           Op 43,            Safari ×]            → Provides a way to opt out of the browser's scroll anchoring behavior, which adjusts scroll position to minimize content shifts
• overflow-block              [Chrome ×,           Edge ×,           FF 69,          IE ×,           Op ×,             Safari ×]            → Sets what shows when content overflows the block start and block end edges of a box
• overflow-clip-margin        [Chrome 90,          Edge 90,          FF ×,           IE ×,           Op 76,            Safari ×]            → Determines how far outside its bounds an element with `overflow: clip` may be painted before being clipped
• overflow-inline             [Chrome ×,           Edge ×,           FF 69,          IE ×,           Op ×,             Safari ×]            → Sets what shows when content overflows the inline start and end edges of a box
• overflow-wrap               [Chrome 23,          Edge 18,          FF 49,          IE 5.5*,        Op 12.1,          Safari 7]            → Applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box (`word-wrap` since Internet Explorer v5.5)
• overflow-x                  [Chrome 1,           Edge 12,          FF 3.5,         IE 8 -ms-,      Op 9.5,           Safari 3]            → Sets what shows when content overflows a block-level element's left and right edges
• overflow-y                  [Chrome 1,           Edge 12,          FF 3.5,         IE 8 -ms-,      Op 9.5,           Safari 3]            → Sets what shows when content overflows a block-level element's top and bottom edges
• overscroll-behavior         [Chrome 63,          Edge 18*,         FF 59,          IE ×,           Op 50,            Safari ×]            → Sets what a browser does when reaching the boundary of a scrolling area. Shorthand for `overscroll-behavior-x` and `overscroll-behavior-y`
• overscroll-behavior-block   [Chrome 77,          Edge 79,          FF 73,          IE ×,           Op 64,            Safari ×]            → Sets the browser's behavior when the block direction boundary of a scrolling area is reached
• overscroll-behavior-inline  [Chrome 77,          Edge 79,          FF 73,          IE ×,           Op 64,            Safari ×]            → Sets the browser's behavior when the inline direction boundary of a scrolling area is reached
• overscroll-behavior-x       [Chrome 63,          Edge 18*,         FF 59,          IE ×,           Op 50,            Safari ×]            → Sets the browser's behavior when the horizontal boundary of a scrolling area is reached
• overscroll-behavior-y       [Chrome 63,          Edge 18*,         FF 59,          IE ×,           Op 50,            Safari ×]            → Sets the browser's behavior when the vertical boundary of a scrolling area is reached
• padding                     [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the padding area on all four sides of an element at once
• padding-block               [Chrome 87,          Edge 87,          FF 66,          IE ×,           Op 73,            Safari 14.1]         → Defines the logical block start and end padding of an element, which maps to physical padding properties depending on the element's directionality, text orientation, and writing mode
• padding-block-end           [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the logical block end padding of an element, which maps to a physical padding depending on the element's directionality, text orientation, and writing mode
• padding-block-start         [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the logical block start padding of an element, which maps to a physical padding depending on the element's directionality, text orientation, and writing mode
• padding-bottom              [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the height of the padding area on the bottom of an element
• padding-inline              [Chrome 87,          Edge 87,          FF 66,          IE ×,           Op 73,            Safari 14.1]         → Defines the logical inline start and end padding of an element, which maps to physical padding properties depending on the element's directionality, text orientation, and writing mode
• padding-inline-end          [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the logical inline end padding of an element, which maps to a physical padding depending on the element's directionality, text orientation, and writing mode
• padding-inline-start        [Chrome 69,          Edge 79,          FF 41,          IE ×,           Op 56,            Safari 12.1]         → Defines the logical inline start padding of an element, which maps to a physical padding depending on the element's directionality, text orientation, and writing mode
• padding-left                [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the width of the padding area to the left of an element
• padding-right               [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the width of the padding area on the right of an element
• padding-top                 [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets the height of the padding area on the top of an element
• perspective                 [Chrome 36,          Edge 12,          FF 49 -moz-,    IE 10,          Op 23,            Safari 9]            → Determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective
• perspective-origin          [Chrome 36,          Edge 12,          FF 49 -moz-,    IE 10,          Op 23,            Safari 9]            → Determines the position at which the viewer is looking. It is used as the vanishing point by the `perspective` property
• place-content               [Chrome 59,          Edge 79,          FF 45,          IE ×,           Op 46,            Safari 9]            → Allows you to align content along both the block and inline directions at once (i.e. the `align-content` and `justify-content` properties) in a relevant layout system such as Flexbox or Grid
• place-items                 [Chrome 59,          Edge 79,          FF 45,          IE ×,           Op 46,            Safari 11]           → Allows you to align items along both the block and inline directions at once (i.e. the `align-items` and `justify-items` properties) in a relevant layout system such as Flexbox or Grid
• place-self                  [Chrome 59,          Edge 79,          FF 45,          IE ×,           Op 46,            Safari 11]           → Allows you to align an individual item in both the block and inline directions at once (i.e. the `align-self` and `justify-self` properties) in a relevant layout system such as Flexbox or Grid
• pointer-events              [Chrome 2,           Edge 12,          FF 3.6,         IE 11,          Op 15,            Safari 4]            → Sets under what circumstances (if any) a particular graphic element can become the target of pointer events
• position                    [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 4,             Safari 1]            → Sets how an element is positioned in a document
• print-color-adjust          [Chrome 17 -webkit-, Edge 79 -webkit-, FF 97,          IE ×,           Op 15 -webkit-,   Safari 15.4]         → Sets what, if anything, the user agent may do to optimize the appearance of the element on the output device
• quotes                      [Chrome 11,          Edge 12,          FF 1.5,         IE 8,           Op 4,             Safari 9]            → Sets how the browser should render quotation marks that are added using the `close-quotes` or `open-quotes` values of the CSS content property
• resize                      [Chrome 1,           Edge 79,          FF 4,           IE ×,           Op 12.1,          Safari 3]            → Sets whether an element is resizable, and if so, in which directions
• right                       [Chrome 1,           Edge 12,          FF 1,           IE 5.5,         Op 5,             Safari 1]            → Participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements
• rotate                      [Chrome ×,           Edge ×,           FF 72,          IE ×,           Op ×,             Safari 14.1]         → Allows you to specify rotation transforms individually and independently of the `transform` property
• row-gap                     [Chrome 84,          Edge 84,          FF 63,          IE ×,           Op 70,            Safari 14.1]         → Sets the size of the gap (gutter) between an element's grid rows
• ruby-align                  [Chrome ×,           Edge ×,           FF 38,          IE ×,           Op ×,             Safari ×]            → Defines the distribution of the different ruby elements over the base
• ruby-position               [Chrome 84,          Edge 84,          FF 38,          IE ×,           Op 70,            Safari 7 -webkit-]   → Defines the position of a ruby element relatives to its base element
• scale                       [Chrome ×,           Edge ×,           FF 72,          IE ×,           Op ×,             Safari 14.1]         → Allows you to specify scale transforms individually and independently of the `transform` property
• scroll-behavior             [Chrome 61,          Edge 79,          FF 36,          IE ×,           Op 48,            Safari 15.4]         → Sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs
• scroll-margin               [Chrome 69,          Edge 79,          FF 90,          IE ×,           Op 56,            Safari 14.1]         → Sets all of the scroll margins of an element at once, assigning values much like the `margin` property does for margins of an element
• scroll-margin-block         [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Sets the scroll margins of an element in the block dimension
• scroll-margin-block-end     [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Defines the margin of the scroll snap area at the end of the block dimension that is used for snapping this box to the snap port
• scroll-margin-block-start   [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Defines the margin of the scroll snap area at the start of the block dimension that is used for snapping this box to the snap port
• scroll-margin-bottom        [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Defines the bottom margin of the scroll snap area that is used for snapping this box to the snap port
• scroll-margin-inline        [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Sets the scroll margins of an element in the inline dimension
• scroll-margin-inline-end    [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Defines the margin of the scroll snap area at the end of the inline dimension that is used for snapping this box to the snap port
• scroll-margin-inline-start  [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Defines the margin of the scroll snap area at the start of the inline dimension that is used for snapping this box to the snap port
• scroll-margin-left          [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Defines the left margin of the scroll snap area that is used for snapping this box to the snap port
• scroll-margin-right         [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Defines the right margin of the scroll snap area that is used for snapping this box to the snap port
• scroll-margin-top           [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Defines the top margin of the scroll snap area that is used for snapping this box to the snap port
• scroll-padding              [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Sets scroll padding on all sides of an element at once, much like the `padding` property does for padding on an element
• scroll-padding-block        [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 15]           → Sets the scroll padding of an element in the block dimension
• scroll-padding-block-end    [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 15]           → Defines offsets for the end edge in the block dimension of the optimal viewing region of the scroll port: the region used as the target region for placing things in view of the user
• scroll-padding-block-start  [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 15]           → Defines offsets for the start edge in the block dimension of the optimal viewing region of the scroll port: the region used as the target region for placing things in view of the user
• scroll-padding-bottom       [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Defines offsets for the bottom of the optimal viewing region of the scroll port: the region used as the target region for placing things in view of the user
• scroll-padding-inline       [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 15]           → Sets the scroll padding of an element in the inline dimension
• scroll-padding-inline-end   [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 15]           → Defines offsets for the end edge in the inline dimension of the optimal viewing region of the scroll port: the region used as the target region for placing things in view of the user
• scroll-padding-inline-start [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 15]           → Defines offsets for the start edge in the inline dimension of the optimal viewing region of the scroll port: the region used as the target region for placing things in view of the user
• scroll-padding-left         [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Defines offsets for the left of the optimal viewing region of the scroll port: the region used as the target region for placing things in view of the user
• scroll-padding-right        [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Defines offsets for the right of the optimal viewing region of the scroll port: the region used as the target region for placing things in view of the user
• scroll-padding-top          [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 14.1]         → Defines offsets for the top of the optimal viewing region of the scroll port: the region used as the target region for placing things in view of the user
• scroll-snap-align           [Chrome 69,          Edge 79,          FF 68,          IE ×,           Op 56,            Safari 11]           → Specifies the box's snap position as an alignment of its snap area (as the alignment subject) within its snap container's snap port (as the alignment container)
• scroll-snap-stop            [Chrome 75,          Edge 79,          FF ×,           IE ×,           Op 62,            Safari 15]           → Defines whether the scroll container is allowed to "pass over" possible snap positions
• scroll-snap-type            [Chrome 69,          Edge 79,          FF 68,          IE 10 -ms-,     Op 56,            Safari 11]           → Sets how strictly snap points are enforced on the scroll container in case there is one
• scrollbar-color             [Chrome ×,           Edge ×,           FF 64,          IE ×,           Op ×,             Safari ×]            → Sets the color of the scrollbar track and thumb
• scrollbar-gutter            [Chrome 94,          Edge 94,          FF 97,          IE ×,           Op 80,            Safari ×]            → Allows authors to reserve space for the scrollbar, preventing unwanted layout changes as the content grows while also avoiding unnecessary visuals when scrolling isn't needed
• scrollbar-width             [Chrome ×,           Edge ×,           FF 64,          IE ×,           Op ×,             Safari ×]            → Allows the author to set the maximum thickness of an element's scrollbars when they are shown
• shape-image-threshold       [Chrome 37,          Edge 79,          FF 62,          IE ×,           Op 24,            Safari 10.1]         → Sets the alpha channel threshold used to extract the shape using an image as the value for `shape-outside`
• shape-margin                [Chrome 37,          Edge 79,          FF 62,          IE ×,           Op 24,            Safari 10.1]         → Sets a margin for a CSS shape created using `shape-outside`
• shape-outside               [Chrome 37,          Edge 79,          FF 62,          IE ×,           Op 24,            Safari 10.1]         → Defines a shape—which may be non-rectangular—around which adjacent inline content should wrap
• symbols                     [Chrome ×,           Edge ×,           FF 35,          IE ×,           Op ×,             Safari ×]            → Defines counter styles inline, directly as the value of a property such as `list-style`
• tab-size                    [Chrome 21,          Edge 79,          FF 91,          IE ×,           Op 15,            Safari 7]            → Used to customize the width of tab characters (U+0009)
• table-layout                [Chrome 14,          Edge 12,          FF 1,           IE 5,           Op 7,             Safari 1]            → Sets the algorithm used to lay out `<table>` cells, columns, and rows
• text-align                  [Chrome 1,           Edge 12,          FF 1,           IE 3,           Op 3.5,           Safari 1]            → Sets the horizontal alignment of the content inside a block element or table-cell box
• text-align-last             [Chrome 47,          Edge 12,          FF 49,          IE 5.5*,        Op 34,            Safari ×]            → Sets how the last line of a block or a line, right before a forced line break, is aligned (`text-align: justify` required since Internet Explorer v5.5)
• text-combine-upright        [Chrome 48,          Edge ×,           FF 48,          IE 11,          Op 35,            Safari 5.1*]         → Sets the combination of characters into the space of a single character (`-ms-text-combine-horizontal` since Internet Explorer v11; `-webkit-text-combine` since Safari v5.1)
• text-decoration             [Chrome 1,           Edge 12,          FF 1,           IE 3,           Op 3.5,           Safari 1]            → Sets the appearance of decorative lines on text. It is a shorthand for `text-decoration-line`, `text-decoration-color`, `text-decoration-style`, and `text-decoration-thickness` property
• text-decoration-color       [Chrome 57,          Edge 79,          FF 36,          IE ×,           Op 44,            Safari 12.1]         → Sets the color of decorations added to text by `text-decoration-line`
• text-decoration-line        [Chrome 57,          Edge 79,          FF 36,          IE ×,           Op 44,            Safari 12.1]         → Sets the kind of decoration that is used on text in an element, such as an overline or underline
• text-decoration-skip        [Chrome ×,           Edge ×,           FF ×,           IE ×,           Op ×,             Safari 12.1]         → Sets what parts of an element's content any text decoration affecting the element must skip over
• text-decoration-skip-ink    [Chrome 64,          Edge 79,          FF 70,          IE ×,           Op 50,            Safari 15.4]         → Specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders
• text-decoration-style       [Chrome 57,          Edge 79,          FF 36,          IE ×,           Op 44,            Safari 12.1]         → Sets the style of the lines specified by `text-decoration-line`
• text-decoration-thickness   [Chrome 89,          Edge 89,          FF 70,          IE ×,           Op 75,            Safari 12.1]         → Sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, overline, or underline
• text-emphasis               [Chrome 25 -webkit-, Edge 79 -webkit-, FF 46,          IE ×,           Op 15 -webkit-,   Safari 7]            → Applies emphasis marks to text. (except spaces and control characters) It is a shorthand for `text-emphasis-color` and `text-emphasis-style`
• text-emphasis-color         [Chrome 25 -webkit-, Edge 79 -webkit-, FF 46,          IE ×,           Op 15 -webkit-,   Safari 7]            → Sets the color of emphasis marks
• text-emphasis-position      [Chrome 25 -webkit-, Edge 79 -webkit-, FF 46,          IE ×,           Op 15 -webkit-,   Safari 7]            → Sets where emphasis marks are drawn
• text-emphasis-style         [Chrome 25 -webkit-, Edge 79 -webkit-, FF 46,          IE ×,           Op 15 -webkit-,   Safari 7]            → Sets the appearance of emphasis marks
• text-indent                 [Chrome 1,           Edge 12,          FF 1,           IE 3,           Op 3.5,           Safari 1]            → Sets the length of empty space (indentation) that is put before lines of text in a block
• text-justify                [Chrome ×,           Edge 12*,         FF 55,          IE 11*,         Op ×,             Safari ×]            → Sets what type of justification should be applied to text when `text-align: justify` is set on an element
• text-orientation            [Chrome 48,          Edge 79,          FF 41,          IE ×,           Op 35,            Safari 14]           → Sets the orientation of the text characters in a line
• text-overflow               [Chrome 1,           Edge 12,          FF 7,           IE 8 -ms-,      Op 11,            Safari 1.3]          → Sets how hidden overflow content is signaled to users
• text-rendering              [Chrome 4,           Edge 79,          FF 1,           IE ×,           Op 15,            Safari 5]            → Provides information to the rendering engine about what to optimize for when rendering text
• text-shadow                 [Chrome 2,           Edge 12,          FF 3.5,         IE 10,          Op 9.5,           Safari 1.1]          → Adds shadows to text
• text-transform              [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 7,             Safari 1]            → Specifies how to capitalize an element's text
• text-underline-offset       [Chrome 87,          Edge 87,          FF 70,          IE ×,           Op 73,            Safari 12.1]         → Sets the offset distance of an underline text decoration line (applied using `text-decoration`) from its original position
• text-underline-position     [Chrome 33,          Edge 12,          FF 74,          IE 6,           Op 20,            Safari 12.1]         → Specifies the position of the underline which is set using the `text-decoration` property's `underline` value
• top                         [Chrome 1,           Edge 12,          FF 1,           IE 5,           Op 6,             Safari 1]            → Participates in specifying the vertical position of a positioned element. It has no effect on non-positioned elements
• touch-action                [Chrome 36,          Edge 12,          FF 52,          IE 11,          Op 23,            Safari 13]           → Sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser)
• transform                   [Chrome 36,          Edge 12,          FF 49 -webkit-, IE 11 -webkit-, Op 23,            Safari 9]            → Lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model
• transform-box               [Chrome 64,          Edge 79,          FF 55,          IE ×,           Op 51,            Safari 11]           → Defines the layout box to which the `transform` and `transform-origin` properties relate
• transform-origin            [Chrome 36,          Edge 12,          FF 49 -moz-,    IE 10,          Op 23,            Safari 9]            → Sets the origin for an element's transformations
• transform-style             [Chrome 36,          Edge 12,          FF 49 -moz-,    IE ×,           Op 23,            Safari 9]            → Sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element
• transition                  [Chrome 26,          Edge 12,          FF 49 -moz-,    IE 10,          Op 15 -o-,        Safari 9]            → Shorthand property for `transition-delay`, `transition-duration`, `transition-property`, and `transition-timing-function`
• transition-delay            [Chrome 26,          Edge 12,          FF 49 -moz-,    IE 10,          Op 15 -o-,        Safari 9]            → Specifies the duration to wait before starting a property's transition effect when its value changes
• transition-duration         [Chrome 26,          Edge 12,          FF 49 -moz-,    IE 10,          Op 15 -o-,        Safari 9]            → Sets the length of time a transition animation should take to complete
• transition-property         [Chrome 26,          Edge 12,          FF 49 -moz-,    IE 10,          Op 15 -o-,        Safari 9]            → Sets the CSS properties to which a transition effect should be applied
• transition-timing-function  [Chrome 26,          Edge 12,          FF 49 -moz-,    IE 10,          Op 15 -o-,        Safari 9]            → Sets how intermediate values are calculated for CSS properties being affected by a transition effect
• translate                   [Chrome ×,           Edge ××,          FF 72,          IE ×,           Op ×,             Safari 14.1]         → Allows you to specify translation transforms individually and independently of the `transform` property
• unicode-bidi                [Chrome 2,           Edge 12,          FF 1,           IE 5.5,         Op 9.2,           Safari 1.3]          → Determines how bidirectional text in a document is handled
• user-select                 [Chrome 54,          Edge 79,          FF 69,          IE 10 -ms-,     Op 41,            Safari 3 -khtml-]    → Controls whether the user can select text
• vertical-align              [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 4,             Safari 1]            → Sets vertical alignment of an inline, inline-block or table-cell box
• visibility                  [Chrome 1,           Edge 12,          FF 1,           IE 4*,          Op 4,             Safari 1]            → Shows or hides an element without changing the layout of a document
• white-space                 [Chrome 1,           Edge 12,          FF 1,           IE 5.5,         Op 4,             Safari 1]            → Sets how white space inside an element is handled
• widows                      [Chrome 25,          Edge 12,          FF ×,           IE 8,           Op 9.2,           Safari 1.3]          → Sets the minimum number of lines in a block container that must be shown at the top of a column, page, or region
• width                       [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 3.5,           Safari 1]            → Sets an element's width. By default, it sets the width of the content area, but if `box-sizing` is set to `border-box`, it sets the width of the border area
• will-change                 [Chrome 36,          Edge 79,          FF 36,          IE ×,           Op 24,            Safari 9.1]          → Hints to browsers how an element is expected to change
• word-break                  [Chrome 1,           Edge 12,          FF 15,          IE 8 -ms-,      Op 15,            Safari 3]            → Sets whether line breaks appear wherever the text would otherwise overflow its content box
• word-spacing                [Chrome 1,           Edge 12,          FF 1,           IE 6,           Op 3.5,           Safari 1]            → Sets the length of space between words and between tags
• writing-mode                [Chrome 48,          Edge 12,          FF 41,          IE 9,           Op 35,            Safari 10.1]         → Sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress
• z-index                     [Chrome 1,           Edge 12,          FF 1,           IE 4,           Op 4,             Safari 1]            → Sets the z-order of a positioned element and its descendants or flex items
